/*
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.model;

import java.util.Objects;
import java.util.Arrays;
import com.cisco.msx.platform.model.LicenseDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LicenseSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-21T19:51:07.781399800-05:00[America/Toronto]")
public class LicenseSummary {
  public static final String SERIALIZED_NAME_ENTITLED = "entitled";
  @SerializedName(SERIALIZED_NAME_ENTITLED)
  private Long entitled;

  public static final String SERIALIZED_NAME_INUSE = "inuse";
  @SerializedName(SERIALIZED_NAME_INUSE)
  private Long inuse;

  public static final String SERIALIZED_NAME_RESERVED = "reserved";
  @SerializedName(SERIALIZED_NAME_RESERVED)
  private Long reserved;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENFORCED = "enforced";
  @SerializedName(SERIALIZED_NAME_ENFORCED)
  private Boolean enforced;

  public static final String SERIALIZED_NAME_LICENSE_DETAILS = "licenseDetails";
  @SerializedName(SERIALIZED_NAME_LICENSE_DETAILS)
  private List<LicenseDetails> licenseDetails = null;


   /**
   * Total entitled quantity for the license
   * @return entitled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total entitled quantity for the license")

  public Long getEntitled() {
    return entitled;
  }




   /**
   * Total consumed quantity for the device
   * @return inuse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total consumed quantity for the device")

  public Long getInuse() {
    return inuse;
  }




   /**
   * Reserved quantity (if any)
   * @return reserved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reserved quantity (if any)")

  public Long getReserved() {
    return reserved;
  }




   /**
   * Current compliance status for the license
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current compliance status for the license")

  public String getStatus() {
    return status;
  }




   /**
   * User friendly display name for the license
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User friendly display name for the license")

  public String getName() {
    return name;
  }




   /**
   * Identifies if the tag is for an enforced license or not
   * @return enforced
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies if the tag is for an enforced license or not")

  public Boolean getEnforced() {
    return enforced;
  }




  public LicenseSummary licenseDetails(List<LicenseDetails> licenseDetails) {
    
    this.licenseDetails = licenseDetails;
    return this;
  }

  public LicenseSummary addLicenseDetailsItem(LicenseDetails licenseDetailsItem) {
    if (this.licenseDetails == null) {
      this.licenseDetails = new ArrayList<>();
    }
    this.licenseDetails.add(licenseDetailsItem);
    return this;
  }

   /**
   * Get licenseDetails
   * @return licenseDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LicenseDetails> getLicenseDetails() {
    return licenseDetails;
  }


  public void setLicenseDetails(List<LicenseDetails> licenseDetails) {
    this.licenseDetails = licenseDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseSummary licenseSummary = (LicenseSummary) o;
    return Objects.equals(this.entitled, licenseSummary.entitled) &&
        Objects.equals(this.inuse, licenseSummary.inuse) &&
        Objects.equals(this.reserved, licenseSummary.reserved) &&
        Objects.equals(this.status, licenseSummary.status) &&
        Objects.equals(this.name, licenseSummary.name) &&
        Objects.equals(this.enforced, licenseSummary.enforced) &&
        Objects.equals(this.licenseDetails, licenseSummary.licenseDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entitled, inuse, reserved, status, name, enforced, licenseDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseSummary {\n");
    sb.append("    entitled: ").append(toIndentedString(entitled)).append("\n");
    sb.append("    inuse: ").append(toIndentedString(inuse)).append("\n");
    sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enforced: ").append(toIndentedString(enforced)).append("\n");
    sb.append("    licenseDetails: ").append(toIndentedString(licenseDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

