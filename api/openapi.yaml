openapi: 3.0.0
info:
  description: MSX SDK client.
  license:
    name: MIT
  termsOfService: https://www.cisco.com
  title: MSX SDK
  version: 1.0.9
servers:
- url: /
paths:
  /manage/api/v8/devices:
    get:
      operationId: getDevicesPage
      parameters:
      - explode: true
        in: query
        name: deviceIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: serviceIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: serialKeys
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: serviceTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: models
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: subtypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: names
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: versions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenantIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeSubtenants
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: severities
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: complianceStates
        required: false
        schema:
          items:
            $ref: '#/components/schemas/DeviceComplianceState'
          type: array
        style: form
      - explode: true
        in: query
        name: vulnerabilityStates
        required: false
        schema:
          items:
            $ref: '#/components/schemas/DeviceVulnerabilityState'
          type: array
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          example: name
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 3
                totalItems: null
                hasNext: true
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: 57acc99e-5301-44b1-87d8-9383feb705c3
                  name: device-name-5fb3c0fb-0bdf-485a-ad63-15106c6e3bed
                  model: CISCO CSR 1000v
                  type: CISCO CSR 1000v
                  subType: null
                  tags: null
                  serialKey: CLctKw8azMR
                  version: "123"
                  serviceInstanceId: null
                  subscriptionId: null
                  serviceType: manageddevice
                  managed: true
                  onboardType: direct
                  onboardInformation:
                    serviceType: manageddevice
                    variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CUSTOMER_PASSWORD_MD5":"$8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh","CPE_SNMP_V3_AUTH_PASS":"$8$BnSiQUd4kW5VqGe/6jLziV59kU3n4DKKumlBgVGMCRIV6dcRzybuNJ16cGZE+G+A","onboarding-template-id":"cisco-ios-secure-onboarding","CPE_SNMP_V3_PRIV_PASS":"$8$Tx9ngrtcjB+l9ihlUJTAYFE10GhI+8IB43he/+SGbnr45Bi0ETyP9Wq90km3gbeh","ENABLE_SECRET":"$8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d","CUSTOMER_USERNAME":"vmsmd33"}'
                    address: 10.254.0.3
                    always-allocate-ip: "true"
                    ned-id: cisco-ios
                    onboarding-template-done: "true"
                    password: $8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh
                    port: "22"
                    secondary-password: $8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d
                    device-type: cli
                    original-address: 3.134.83.79
                    username: vmsmd33
                  attributes: null
                  complianceState: COMPLIANT
                  vulnerabilityState: VULNERABLE
                  status:
                    value: FAIR
                    severity: "5"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by system
                  statusDetails:
                    healthStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T17:40:50Z
                      lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                    pnpStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T17:40:50Z
                      lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                    lifeCycleStatus:
                      value: UNREGISTERED
                      severity: "5"
                      lastUpdated: 2020-08-06T17:40:50Z
                      lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                    syncStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T17:40:50Z
                      lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                    tunnelStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T17:40:50Z
                      lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                  tenantId: 4ea8924b-fb40-43ae-ad10-de99139e7357
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  userId: f8eb77d2-de36-43b7-a021-adea3901e23a
                  createdOn: 2020-08-06T17:40:50Z
                  modifiedOn: 2020-08-06T17:40:50Z
                - id: 2d3f45a6-4862-4ecf-b228-4736f0a678e5
                  name: device-name-27a878a4-721e-4758-82b3-c05de0c7de0b
                  model: CISCO CSR 1000v
                  type: CISCO CSR 1000v
                  subType: null
                  tags: null
                  serialKey: 36unrHXMxmr
                  version: "123"
                  serviceInstanceId: null
                  subscriptionId: null
                  serviceType: manageddevice
                  managed: true
                  onboardType: direct
                  onboardInformation:
                    serviceType: manageddevice
                    variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CUSTOMER_PASSWORD_MD5":"$8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh","CPE_SNMP_V3_AUTH_PASS":"$8$BnSiQUd4kW5VqGe/6jLziV59kU3n4DKKumlBgVGMCRIV6dcRzybuNJ16cGZE+G+A","onboarding-template-id":"cisco-ios-secure-onboarding","CPE_SNMP_V3_PRIV_PASS":"$8$Tx9ngrtcjB+l9ihlUJTAYFE10GhI+8IB43he/+SGbnr45Bi0ETyP9Wq90km3gbeh","ENABLE_SECRET":"$8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d","CUSTOMER_USERNAME":"vmsmd33"}'
                    address: 10.254.0.3
                    always-allocate-ip: "true"
                    ned-id: cisco-ios
                    onboarding-template-done: "true"
                    password: $8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh
                    port: "22"
                    secondary-password: $8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d
                    device-type: cli
                    original-address: 3.134.83.79
                    username: vmsmd33
                  attributes: null
                  complianceState: UNKNOWN
                  vulnerabilityState: UNKNOWN
                  status:
                    value: FAIR
                    severity: "5"
                    lastUpdated: 2020-08-06T18:17:21Z
                    lastUpdatedMessage: Updated by system
                  statusDetails:
                    healthStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    pnpStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    lifeCycleStatus:
                      value: UNREGISTERED
                      severity: "5"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    syncStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    tunnelStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                  tenantId: a76407a2-d293-4e19-aaea-d5d4da4f4b24
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                  createdOn: 2020-08-06T18:17:21Z
                  modifiedOn: 2020-08-06T18:17:21Z
                - id: 83a38a3e-5b26-4d87-b1c7-6729641a8e51
                  name: device-name-145611c2-f09c-4624-9b03-98fdd9c6d830
                  model: CISCO CSR 1000v
                  type: CISCO CSR 1000v
                  subType: null
                  tags: null
                  serialKey: vvKqftXraGq
                  version: "123"
                  serviceInstanceId: null
                  subscriptionId: null
                  serviceType: manageddevice
                  managed: true
                  onboardType: direct
                  onboardInformation:
                    serviceType: manageddevice
                    variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CUSTOMER_PASSWORD_MD5":"$8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh","CPE_SNMP_V3_AUTH_PASS":"$8$BnSiQUd4kW5VqGe/6jLziV59kU3n4DKKumlBgVGMCRIV6dcRzybuNJ16cGZE+G+A","onboarding-template-id":"cisco-ios-secure-onboarding","CPE_SNMP_V3_PRIV_PASS":"$8$Tx9ngrtcjB+l9ihlUJTAYFE10GhI+8IB43he/+SGbnr45Bi0ETyP9Wq90km3gbeh","ENABLE_SECRET":"$8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d","CUSTOMER_USERNAME":"vmsmd33"}'
                    address: 10.254.0.3
                    always-allocate-ip: "true"
                    ned-id: cisco-ios
                    onboarding-template-done: "true"
                    password: $8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh
                    port: "22"
                    secondary-password: $8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d
                    device-type: cli
                    original-address: 3.134.83.79
                    username: vmsmd33
                  attributes: null
                  complianceState: NOT_COMPLIANT
                  vulnerabilityState: VULNERABLE
                  status:
                    value: FAIR
                    severity: "5"
                    lastUpdated: 2020-08-06T18:17:21Z
                    lastUpdatedMessage: Updated by system
                  statusDetails:
                    healthStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    pnpStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    lifeCycleStatus:
                      value: UNREGISTERED
                      severity: "5"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    syncStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                    tunnelStatus:
                      value: UNKNOWN
                      severity: "3"
                      lastUpdated: 2020-08-06T18:17:21Z
                      lastUpdatedMessage: Updated by superuser
                  tenantId: a76407a2-d293-4e19-aaea-d5d4da4f4b24
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                  createdOn: 2020-08-06T18:17:21Z
                  modifiedOn: 2020-08-06T18:17:21Z
              schema:
                $ref: '#/components/schemas/DevicesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of devices.
      tags:
      - Devices
      x-accepts: application/json
    post:
      operationId: createDevice
      requestBody:
        content:
          application/json:
            example:
              tenantId: 4ea8924b-fb40-43ae-ad10-de99139e7357
              name: device-name-5fb3c0fb-0bdf-485a-ad63-15106c6e3bed
              model: CISCO CSR 1000v
              type: CISCO CSR 1000v
              serviceType: manageddevice
              serialKey: CLctKw8azMR
              version: "123"
              managed: true
              onboardType: direct
              onboardInformation:
                serviceType: manageddevice
                variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CUSTOMER_PASSWORD_MD5":"$8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh","CPE_SNMP_V3_AUTH_PASS":"$8$BnSiQUd4kW5VqGe/6jLziV59kU3n4DKKumlBgVGMCRIV6dcRzybuNJ16cGZE+G+A","onboarding-template-id":"cisco-ios-secure-onboarding","CPE_SNMP_V3_PRIV_PASS":"$8$Tx9ngrtcjB+l9ihlUJTAYFE10GhI+8IB43he/+SGbnr45Bi0ETyP9Wq90km3gbeh","ENABLE_SECRET":"$8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d","CUSTOMER_USERNAME":"vmsmd33"}'
                address: 10.254.0.3
                always-allocate-ip: "true"
                ned-id: cisco-ios
                onboarding-template-done: "true"
                password: $8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh
                port: "22"
                secondary-password: $8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d
                device-type: cli
                original-address: 3.134.83.79
                username: vmsmd33
            schema:
              $ref: '#/components/schemas/DeviceCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 57acc99e-5301-44b1-87d8-9383feb705c3
                name: device-name-5fb3c0fb-0bdf-485a-ad63-15106c6e3bed
                model: CISCO CSR 1000v
                type: CISCO CSR 1000v
                subType: null
                tags: null
                serialKey: CLctKw8azMR
                version: "123"
                serviceInstanceId: null
                subscriptionId: null
                serviceType: manageddevice
                managed: true
                onboardType: direct
                onboardInformation:
                  serviceType: manageddevice
                  variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CUSTOMER_PASSWORD_MD5":"$8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh","CPE_SNMP_V3_AUTH_PASS":"$8$BnSiQUd4kW5VqGe/6jLziV59kU3n4DKKumlBgVGMCRIV6dcRzybuNJ16cGZE+G+A","onboarding-template-id":"cisco-ios-secure-onboarding","CPE_SNMP_V3_PRIV_PASS":"$8$Tx9ngrtcjB+l9ihlUJTAYFE10GhI+8IB43he/+SGbnr45Bi0ETyP9Wq90km3gbeh","ENABLE_SECRET":"$8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d","CUSTOMER_USERNAME":"vmsmd33"}'
                  address: 10.254.0.3
                  always-allocate-ip: "true"
                  ned-id: cisco-ios
                  onboarding-template-done: "true"
                  password: $8$/lH9SrDINF1YkYD7/x9FSYHnoxeAY4AEcncCGbe1ZWGOGx1nkn6+EdsPYacwXUdh
                  port: "22"
                  secondary-password: $8$maC3mSZ0hY4c25G7M6bWBsx9+b5ys1Ehin/SJFIuwNjh50BQpR0sSpGOXo0BvG0d
                  device-type: cli
                  original-address: 3.134.83.79
                  username: vmsmd33
                attributes: null
                complianceState: UNKNOWN
                vulnerabilityState: UNKNOWN
                status:
                  value: FAIR
                  severity: "5"
                  lastUpdated: 2020-08-06T17:40:50Z
                  lastUpdatedMessage: Updated by system
                statusDetails:
                  healthStatus:
                    value: UNKNOWN
                    severity: "3"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                  pnpStatus:
                    value: UNKNOWN
                    severity: "3"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                  lifeCycleStatus:
                    value: UNREGISTERED
                    severity: "5"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                  syncStatus:
                    value: UNKNOWN
                    severity: "3"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                  tunnelStatus:
                    value: UNKNOWN
                    severity: "3"
                    lastUpdated: 2020-08-06T17:40:50Z
                    lastUpdatedMessage: Updated by 154942cd-d9b2-424f-8d48-fec2486a89fe
                tenantId: 4ea8924b-fb40-43ae-ad10-de99139e7357
                providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                userId: f8eb77d2-de36-43b7-a021-adea3901e23a
                createdOn: 2020-08-06T17:40:50Z
                modifiedOn: 2020-08-06T17:40:50Z
              schema:
                $ref: '#/components/schemas/Device'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a device.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devices/{id}:
    delete:
      operationId: deleteDevice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a device.
      tags:
      - Devices
      x-accepts: application/json
    get:
      operationId: getDevice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                model: CISCO CSR 1000v
                type: CISCO CSR 1000v
                subType: null
                tags:
                  resourceProvider: nso
                serialKey: 97K7C3YDPY1
                version: 16.9.5
                serviceInstanceId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                subscriptionId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                serviceType: manageddevice
                managed: true
                onboardType: pnp
                onboardInformation:
                  serviceType: manageddevice
                  variables: '{"ONBOARDING_INTERFACE":"GigabitEthernet1","CPE_HOSTNAME":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"}'
                  day0-file: CPE_day0_base_config.txt,CPE_day0_tunnel_config.txt
                  always-allocate-ip: "true"
                  ned-id: cisco-ios
                  encryptedVariables: '{"CPE_SNMP_V3_AUTH_PASS":"$8$ZZFx9L6bG368G/fSsluSkpScU2u86Ecsi5ieia61JKk05ah/L157ggRNcJhInvp0","CPE_SNMP_V3_PRIV_PASS":"$8$k5IODLmeuGnar7jFwDmat58fSa5vCR4YcKqrnonPfj2q2+9bdvoxMPRUGKLVlEk7"}'
                  platform-device-subtype: ISR
                  password: $8$2NB0CYn0o97Kf3yUcaQavEo+R2URp2N6fpLAv14GbLLJzbGvaQVlssfMtBfw6Pjn
                  port: "22"
                  platform-device-category: CPE
                  secondary-password: $8$ipNL0lYbqWf/kt7DtnLdv1YsoqSmpndAxEayJT9qA0cQriDByU9AmWtixjiMIpve
                  platform-device-type: CPE
                  device-type: cli
                  serialKey: 97K7C3YDPY1
                  username: vmsmd33
                attributes:
                  templateDetails: '[{"templateId":"7919b9e2-cbbb-44f4-9dd1-f29f37d91144","templateName":"managed-device-regression-test-template-80f3f736-1692-4128-92f1-b109c1bf12d3","deviceParams":[{"name":"DEVICE_NAME","hintText":"","label":"DEVICE_NAME","type":"String","displayType":"Input","allowedValues":"","value":"msx-csr-a61989f6-c5c2-4f90-abe3-fef4c532626f","toolTipText":""},{"name":"BACKUP_DNS_SERVER","hintText":"","label":"BACKUP_DNS_SERVER","type":"IPAddress","displayType":"Input","allowedValues":"","value":"8.8.8.8","toolTipText":""}],"templateHistoryId":null,"appliedBy":"superuser","appliedOn":null,"editedOn":null,"editedBy":"superuser","previousTemplateHistoryId":null}]'
                  address: '{"address1":"88 Queens Quay W, Toronto, ON M5J, Canada","lat":"43.6411344","lng":"-79.37703469999997"}'
                  deviceTypeName: CISCO CSR 1000v
                  siteName: fb6ee9a2-3bf2-4966-8c53-ebc3c3c5fa2f
                  deviceInterfaces: '[{"name":"GigabitEthernet1","roles":["onboard","wan"],"snmp":"GigabitEthernet1","nedId":"cisco-ios"}]'
                  deviceId: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  deviceName: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  deviceSerial: 97K7C3YDPY1
                  tenantDisplayName: ' display-name-d5c9dc30-0232-499b-a8f3-3962c3138159'
                  tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                  siteDisplayName: HvE8gXvV1YUWo27u5ryycmi9MmUdolqCsDGcb9W04VIhaUsgwyVOgyVgwKR7NKuF
                  name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  model: CISCO CSR 1000v
                  serialKey: 97K7C3YDPY1
                  devicePassword: $8$euuSrkPi/hr71+ujf4Iq608uX0Rqln+82pIXTxDL6d23duMVvkho05DpxYeM/VBT
                complianceState: UNKNOWN
                vulnerabilityState: UNKNOWN
                status:
                  value: GOOD
                  severity: "1"
                  lastUpdated: 2020-08-04T21:01:46Z
                  lastUpdatedMessage: Updated by system
                statusDetails:
                  lifeCycleStatus:
                    value: Onboarded
                    severity: "1"
                    lastUpdated: 2020-08-04T21:01:46Z
                    lastUpdatedMessage: Updated by system
                tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-04T20:59:34Z
                modifiedOn: 2020-08-04T21:01:46Z
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a device.
      tags:
      - Devices
      x-accepts: application/json
    patch:
      operationId: patchDevice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update a device.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateDevice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update a device.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devices/{id}/config:
    get:
      operationId: getDeviceConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              example: |
                Building configuration...

                Current configuration : 9574 bytes
                !
                ! Last configuration change at 20:36:57 UTC Tue Aug 4 2020
                !
                version 16.9
                service timestamps debug datetime msec
                service timestamps log datetime msec
                service password-encryption
                service call-home
                platform qfp utilization monitor load 80
                no platform punt-keepalive disable-kernel-core
                platform console virtual
                platform hardware throughput level MB 100
                !
                hostname CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                !
                boot-start-marker
                boot-end-marker
                !
                !
                vrf definition MGMT-OVERLAY
                 !
                 address-family ipv4
                 exit-address-family
                !
                logging buffered 64000
                no logging console
                enable secret 5 $1$5rN/$zSrp3tqUpuJfrU3vowyxj.
                !
                aaa new-model
                !
                !
                aaa authentication login default local
                aaa authorization exec default none
                aaa authorization network default local
                !
                !
                !
                !
                !
                aaa session-id common
                call-home
                 ! If contact email address in call-home is configured as sch-smart-licensing@cisco.com
                 ! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.
                 contact-email-addr sch-smart-licensing@cisco.com
                 source-interface GigabitEthernet1
                 profile "CiscoTAC-1"
                  active
                  destination transport-method http
                  no destination transport-method email
                no ip source-route
                !
                !
                !
                !
                !
                !
                !
                no ip bootp server
                ip name-server 172.23.169.10 171.70.168.183 8.8.8.8 8.8.4.4
                ip domain name CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                ip admission watch-list expiry-time 0
                !
                !
                !
                login on-success log
                !
                !
                !
                !
                !
                !
                !
                subscriber templating
                !
                !
                !
                !
                !
                multilink bundle-name authenticated
                !
                !
                !
                !
                !
                crypto pki trustpoint ncs
                 enrollment terminal
                 revocation-check none
                !
                crypto pki trustpoint SLA-TrustPoint
                 enrollment pkcs12
                 revocation-check crl
                !
                !
                crypto pki certificate chain ncs
                 certificate ca 7D4D1247F44011502FD7418ABC43328389FC402B
                  3082058C 30820374 A0030201 0202147D 4D1247F4 4011502F D7418ABC 43328389
                  FC402B30 0D06092A 864886F7 0D01010D 0500305E 310B3009 06035504 06130255
                  53310B30 09060355 04081302 43413111 300F0603 55040713 0853616E 204A6F73
                  65310C30 0A060355 040A1303 564D5331 11300F06 0355040B 13085365 72766963
                  6573310E 300C0603 55040313 05564D53 4341301E 170D3139 31303234 31373537
                  30305A17 0D323431 30323231 37353730 305A305E 310B3009 06035504 06130255
                  53310B30 09060355 04081302 43413111 300F0603 55040713 0853616E 204A6F73
                  65310C30 0A060355 040A1303 564D5331 11300F06 0355040B 13085365 72766963
                  6573310E 300C0603 55040313 05564D53 43413082 0222300D 06092A86 4886F70D
                  01010105 00038202 0F003082 020A0282 020100E2 9055953D 572028C9 0775A74B
                  771A9092 96D58C1F 15198166 C905475C ABAF14E6 1F467ECE 796CCBCC 81FEE1CA
                  236D58DA 25140545 9B5F6F5A D1A38195 A6B70DF6 B2CAA413 635DB7A2 9C592843
                  ED54DC67 BC9B4D1C F3B86942 88BB0CE6 4186F06E 4551ABE4 F45436D2 C29A24CE
                  4CF544C3 73817889 780C6C5F 88E9F4D1 FFA1C312 144F4C62 2391A3AE FBC66E49
                  1962BDCA 36ADBD52 08CF4B9A F9A09A68 D383DA66 A1F1BE20 4A2AAD8A 37247EEB
                  13FE8DCF 3255C5AF 73ECA8CC 8E472B41 FF394211 F7485CF3 6DF3BCDB 868CCC85
                  ED254977 7E60BE11 8FF6CD9E 158CCA9E 9AE28091 9C5794E0 97CEA064 134420AF
                  D9C87FE0 9E6923F9 6E07C71E 8E404188 389D88EA CC2B74EC E644CDCD D75D79E1
                  39CF70EF 901E4716 E3F82242 822172B7 53806F80 8EFF1C3C 1C7BBBB2 13B5E150
                  94075097 57387018 F1B9217C 74D6104B 34EC6CE2 B4C95229 EA53DE20 5EB85752
                  5B73BB04 7F73BC1B 60987156 F5BDAED6 4DD96AC8 9D701890 FDDCF568 56E14A34
                  D7DCF7CB 5132F514 F3F12FFA C01D8F4C E93B80BD B6E50FEF 01220246 5FC31297
                  32AA63BC E05D8AF2 133A2700 6823DFC9 51381405 E38989E9 3B5415D8 4696F267
                  6E6E0AC0 143F5CF2 543F524C BE98E430 9C01361F 63FFEB1D 8A0F8465 9C419D28
                  FEEB3D5F BAB9734E 6F47BC71 F3F6489B 5D9234AC 92B64A75 D2243A0E F07F4C7F
                  AD039125 C0E53B54 D9BC1E1F 31AAEC37 2461C502 03010001 A3423040 300E0603
                  551D0F01 01FF0404 03020106 300F0603 551D1301 01FF0405 30030101 FF301D06
                  03551D0E 04160414 3327D00C 798E4DDE AC35E7C3 65C1A03B 59BC67C6 300D0609
                  2A864886 F70D0101 0D050003 82020100 7B5526BC 25EA2974 40F2954F 6A1266CE
                  3CFBCE1D 08EA497B EB35C723 E95154D7 7D33930A 3F69EBE8 3A88A477 8645220A
                  107ECC52 C39CAF84 A60CBBE8 B7C4F4E9 5A07E146 A6760667 5D04E586 328807A5
                  24B7E7A8 8C8517BB 0E83C5BD 50412B8E AF05F8A3 262E1EBF DD3F9CA1 1B13DB62
                  8C063C8B 6E6BF458 4A8F46AB 86A11239 8980F4A4 9CA9DD97 4748401D 09DC84E0
                  EFB06214 9A4D273C 45DAEC4F 6894EA0A DCD8E850 BEFE6F75 89D5B4D8 746FD0D6
                  6E406D45 A7236AD2 A33C7B0E 156B2E25 F789DB58 863AA621 A75D1EA0 7BFC1DEA
                  E55E8A5B 1B18F0EB DC1DB4DB 87BF172F 2EC6C33F 5CAFEA29 46A10426 F4449D21
                  962B791E 4E2CFC3B B817E280 172FFCFB 0CE80FF7 5DE0768E BCBE8C11 7CF9EE69
                  C94165A9 06DD38FA 8B0229B5 D18DBC71 53D1D7B2 DE69A4EA 5A9F4B6C 872AF2DA
                  7C8EE33E 9F08AE42 C4C68EC5 6B2BB9A7 844AE186 56DBB6A8 E14609B4 0105C7E2
                  99BEEAA4 46B1DDA6 FD030E29 D4B2C115 FFB0E27B 35226D5C DB059697 072E1226
                  EA6CBB4C A16E3967 E465468A 33858E83 D41E3FA6 8A09693B BC6854C3 B83F6FC1
                  CEE66AB2 DA19D9B5 92D8EF96 6721783A 2451D2C7 617AE69F D85E79DD 4411C097
                  616B938F B24FC085 E31919A5 0B85A08A CAB0E2C6 2EBE18CB E81B5764 F1ACBD09
                  D99EC41B 87C9B6CE 7C488B25 21A0B6A3 B1C9DD8C 54DD3A10 07B19416 33AE457A
                  E56E5148 C031620F 42F92287 F6FF744D
                    quit
                crypto pki certificate chain SLA-TrustPoint
                 certificate ca 01
                  30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030
                  32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363
                  6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934
                  3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305
                  43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720
                  526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030
                  82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D
                  CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520
                  1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE
                  4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC
                  7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188
                  68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7
                  C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191
                  C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44
                  DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201
                  06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85
                  4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500
                  03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905
                  604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B
                  D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8
                  467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C
                  7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B
                  5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678
                  80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB
                  418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0
                  D697DF7F 28
                    quit
                !
                !
                !
                !
                !
                !
                !
                !
                license udi pid CSR1000V sn 97K7C3YDPY1
                license smart enable
                diagnostic bootup level minimal
                !
                spanning-tree extend system-id
                !
                !
                !
                username admin privilege 15 password 7 1248333A21395C0F6E
                username msx-user privilege 15 password 7 08707A633A2B551C56
                username vmsmd33 privilege 15 secret 5 $1$DWd4$hvf8Un3PFc17.NJUuESCZ/
                !
                redundancy
                crypto ikev2 authorization policy default
                 route set interface
                !
                crypto ikev2 redirect client
                crypto ikev2 proposal IKEv2-prop1
                 encryption aes-cbc-256 aes-cbc-128
                 integrity sha256 sha1
                 group 2 5
                !
                crypto ikev2 policy IKEv2-pol
                 proposal IKEv2-prop1
                !
                !
                crypto ikev2 profile MGMT-OVERLAY
                 match identity remote fqdn domain cloudvpn.com
                 identity local address 10.254.0.1
                 authentication remote pre-share key Cisco1234Admin
                 authentication local pre-share key Cisco1234Admin
                 dpd 600 2 periodic
                 nat keepalive 25
                 aaa authorization group psk list default default
                !
                crypto ikev2 client flexvpn OVERLAY
                  peer 1 192.171.16.177
                  client connect Tunnel0
                !
                !
                !
                !
                !
                !
                !
                !
                !
                !
                !
                crypto ipsec security-association idle-time 600
                !
                crypto ipsec transform-set MGMT-ENCR esp-aes esp-sha-hmac
                 mode transport
                !
                crypto ipsec profile MGMT-OVERLAY
                 set transform-set MGMT-ENCR
                 set ikev2-profile MGMT-OVERLAY
                !
                !
                !
                crypto call admission limit ike in-negotiation-sa 30
                !
                !
                !
                !
                !
                !
                !
                !
                interface Tunnel0
                 vrf forwarding MGMT-OVERLAY
                 ip address 10.254.0.1 255.255.255.255
                 ip mtu 1400
                 ip tcp adjust-mss 1360
                 tunnel source GigabitEthernet1
                 tunnel mode ipsec ipv4
                 tunnel destination dynamic
                 tunnel protection ipsec profile MGMT-OVERLAY
                !
                interface GigabitEthernet1
                 description WAN interface
                 ip address dhcp
                 negotiation auto
                 no mop enabled
                 no mop sysid
                !
                ip forward-protocol nd
                no ip http server
                no ip http secure-server
                ip http client source-interface GigabitEthernet1
                ip route vrf MGMT-OVERLAY 0.0.0.0 0.0.0.0 Tunnel0
                !
                ip ssh version 2
                ip ssh pubkey-chain
                  username admin
                ip scp server enable
                !
                !
                !
                snmp-server group ciscogroup v3 auth
                snmp-server community ciscodp RW
                !
                !
                !
                !
                control-plane
                !
                !
                !
                !
                !
                !
                line con 0
                 exec-timeout 5 0
                 privilege level 15
                 authorization exec none
                 logging synchronous
                 stopbits 1
                line vty 0 4
                 exec-timeout 0 0
                 privilege level 15
                 authorization exec none
                 length 0
                 transport input ssh
                line vty 5 15
                 exec-timeout 30 0
                 privilege level 15
                 authorization exec none
                 logging synchronous
                 transport input ssh
                !
                !
                !
                !
                !
                !
                !
                pnp profile msx-pnp
                 transport https ipv4 192.171.16.174 port 8443 source GigabitEthernet1
                end

                CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3#
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns the running configuration for a device.
      tags:
      - Devices
      x-accepts: application/json
  /manage/api/v8/devices/templates/attach:
    post:
      operationId: batchAttachDeviceTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplateBatchAttachRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageChangeRequestPending'
          description: Pending Approval
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateBatchAttachResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Attaches one or more device templates to a batch of device instances.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devices/{id}/templates:
    delete:
      operationId: detachDeviceTemplates
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateHistory'
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageChangeRequestPending'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Detach device templates that are already attached to a device.
      tags:
      - Devices
      x-accepts: application/json
    get:
      operationId: getDeviceTemplateHistory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateHistory'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns device template history.
      tags:
      - Devices
      x-accepts: application/json
    post:
      operationId: attachDeviceTemplates
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              templateDetails:
              - templateId: e7e20070-9d67-40a8-a21d-f655606b7421
                templateParams:
                - name: name1
                  value: value10461b304-da18-42bd-a48b-502d8e5166a4
                - name: name2
                  value: value217c83dd3-f732-4a36-ae27-d86599c7f513
              - templateId: 87710499-3431-4c53-8ce2-c28170c261e7
                templateParams:
                - name: name1
                  value: value1fc9ca565-8a74-401a-9dce-5fe35d203150
                - name: name2
                  value: value2bfde5275-8d32-4e2c-b023-7b987cb9a1ff
            schema:
              $ref: '#/components/schemas/DeviceTemplateAttachRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - id: c71f9101-11bb-4a46-bf32-a48c6751d6fd
                deviceId: 50a2a1ae-f4c9-4b40-a369-32352d6221e9
                templateId: e7e20070-9d67-40a8-a21d-f655606b7421
                templateParams:
                - name: name1
                  value: value10461b304-da18-42bd-a48b-502d8e5166a4
                - name: name2
                  value: value217c83dd3-f732-4a36-ae27-d86599c7f513
                status: Applying
                lastUpdated: 2020-08-06 18:26:35+0000
                userId: f6bb602c-5ef9-4b7c-878b-9e7a7ef6977c
              - id: eb84a750-f1da-4161-b594-a284ef09eba8
                deviceId: 50a2a1ae-f4c9-4b40-a369-32352d6221e9
                templateId: 87710499-3431-4c53-8ce2-c28170c261e7
                templateParams:
                - name: name1
                  value: value1fc9ca565-8a74-401a-9dce-5fe35d203150
                - name: name2
                  value: value2bfde5275-8d32-4e2c-b023-7b987cb9a1ff
                status: Applying
                lastUpdated: 2020-08-06 18:26:35+0000
                userId: f6bb602c-5ef9-4b7c-878b-9e7a7ef6977c
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateHistory'
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageChangeRequestPending'
          description: Pending Approval
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Attaches one or more device templates to a device instance.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateDeviceTemplates
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplateUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateHistory'
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageChangeRequestPending'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update device templates that are already attached to a device.
      tags:
      - Devices
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devices/{id}/templates/{templateId}:
    delete:
      operationId: detachDeviceTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplateHistory'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Detaches a template from a device.
      tags:
      - Devices
      x-accepts: application/json
  /manage/api/v8/devices/{id}/redeploy:
    post:
      operationId: redeployDevice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Dedeploys a device.
      tags:
      - Devices
      x-accepts: application/json
  /manage/api/v8/devicetemplates:
    post:
      operationId: createDeviceTemplate
      requestBody:
        content:
          application/json:
            example:
              name: name-8d4a2628-06c0-436b-8a90-d90027917405
              serviceType: manageddevice
              configContent: string
              templateStandard: nso
              tenantAccess:
                global: true
            schema:
              $ref: '#/components/schemas/DeviceTemplateCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                name: name-8d4a2628-06c0-436b-8a90-d90027917405
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: string
                resourceProvider: null
                templateStandard: nso
                tenantAccess:
                  tenantIds: null
                  global: true
                id: beaf0bee-bdf9-4ade-993a-de352fa38bc7
                userId: f1a0f9cc-08c1-4190-98b9-48b0988b9c7f
                createdOn: 2020-08-06T19:37:55.615Z
                tags:
                - manageddevice
                - compliance
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a device template.
      tags:
      - Device Templates
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devicetemplates/versions:
    post:
      operationId: createDeviceTemplateVersion
      requestBody:
        content:
          application/json:
            example:
              name: string
              configContent: string
            schema:
              $ref: '#/components/schemas/DeviceTemplateVersionCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                name: name-8d4a2628-06c0-436b-8a90-d90027917405
                version: v2
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: string
                resourceProvider: null
                templateStandard: nso
                tenantAccess:
                  tenantIds: null
                  global: true
                id: beaf0bee-bdf9-4ade-993a-de352fa38bc7
                userId: f1a0f9cc-08c1-4190-98b9-48b0988b9c7f
                createdOn: 2020-08-06T19:37:55.615Z
                tags:
                - manageddevice
                - compliance
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new version of an existing device template.
      tags:
      - Device Templates
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/devicetemplates/parameters/scan:
    post:
      deprecated: true
      operationId: scanDeviceTemplateParameters
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The XML template file of a device template
                  format: binary
                  type: string
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: Collection of parameters from device template by scanning
                    the XML template of the device template
                  type: string
                type: array
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: API to scan parameters from the device template XML.
      tags:
      - Device Templates
      x-contentType: multipart/form-data
      x-accepts: application/json
  /manage/api/v8/devicetemplates/list:
    get:
      operationId: getDeviceTemplatesList
      parameters:
      - explode: true
        in: query
        name: allVersions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - example: manageddevice
        explode: true
        in: query
        name: serviceType
        required: false
        schema:
          type: string
        style: form
      - example: 2664f157-18d8-4ecd-8c78-66b7cb7e1e25
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - name: name-8d4a2628-06c0-436b-8a90-d90027917405
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: beaf0bee-bdf9-4ade-993a-de352fa38bc7
                userId: f1a0f9cc-08c1-4190-98b9-48b0988b9c7f
                createdOn: 2020-08-06T19:37:55.615Z
                tags:
                - manageddevice
                - compliance
              - name: name-5cba2b31-93e7-4968-8a3a-a20552bc527b
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: 1f3098f9-884d-485a-b1cb-501067f5142a
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T19:40:41.316Z
                tags:
                - manageddevice
                - compliance
              - name: name-54852468-0eca-4d60-9764-5f207090954d
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: 5af62fa7-c753-43a9-8b69-be87e08ab8f7
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T19:40:41.235Z
              - name: name-c24fe522-ca69-4be1-829b-518478e4d2ee
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: e7e20070-9d67-40a8-a21d-f655606b7421
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T18:26:28.021Z
              - name: name-42e1aabb-45cf-4209-8de0-250aaaf88715
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: f3b096d8-5633-4956-bb2f-1aa8f0f5b122
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T19:40:41.092Z
                tags:
                - manageddevice
                - compliance
              - name: name-38bc5ad4-a94e-4904-a1ff-12addd574efb
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: 87710499-3431-4c53-8ce2-c28170c261e7
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T18:26:28.131Z
              - name: managed-device-regression-test-template-80f3f736-1692-4128-92f1-b109c1bf12d3
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: 7919b9e2-cbbb-44f4-9dd1-f29f37d91144
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-04T20:30:52.486Z
              - name: name-f3f300c9-94e5-46ac-88d8-f8bb5cbb4b1a
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: null
                resourceProvider: null
                templateStandard: nso
                tenantAccess: null
                id: 5a6e44b7-987c-476f-9b52-b7506dfd0ac4
                userId: b77fb077-997a-401b-b6c8-08a4b89e383a
                createdOn: 2020-08-04T21:27:21.467Z
                tags:
                - manageddevice
                - compliance
              schema:
                items:
                  $ref: '#/components/schemas/DeviceTemplate'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of device templates.
      tags:
      - Device Templates
      x-accepts: application/json
  /manage/api/v8/devicetemplates/{id}:
    delete:
      operationId: deleteDeviceTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a device template.
      tags:
      - Device Templates
      x-accepts: application/json
    get:
      operationId: getDeviceTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                name: name-de8f846f-199e-48e4-ad85-831f284329bb
                version: v1
                isLatestVersion: true
                serviceType: manageddevice
                deviceModels: null
                configContent: string
                resourceProvider: null
                templateStandard: nso
                tenantAccess:
                  tenantIds: []
                  global: true
                id: 031c3a01-8419-41ac-b356-5f98eb53f944
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                createdOn: 2020-08-06T19:42:17.684Z
                tags:
                - manageddevice
                - compliance
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a device template.
      tags:
      - Device Templates
      x-accepts: application/json
  /manage/api/v8/devicetemplates/{id}/access:
    put:
      operationId: updateDeviceTemplateAccess
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              templateId: 49baa22e-9c25-4adc-ae30-21153965ea66
              tenantIds:
              - e6d0e662-ed66-43ab-977a-35efc6cafe10
            schema:
              $ref: '#/components/schemas/DeviceTemplateAccess'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                successListOfTenants:
                - e6d0e662-ed66-43ab-977a-35efc6cafe10
                failureListOfTenants: []
                global: null
              schema:
                $ref: '#/components/schemas/DeviceTemplateAccessResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates device template access.
      tags:
      - Device Templates
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/services:
    get:
      operationId: getServicesPage
      parameters:
      - allowEmptyValue: false
        explode: true
        in: query
        name: tenantIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 10
                totalItems: null
                hasNext: false
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: 3d99211e3095-cf29ee50a8e3464d80ca5593d6a4d7b5-manageddevice
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  tenantId: 3d99211e-3095-489f-a5df-87780bbb99fd
                  userId: fbcf7fa8-7cf8-42ce-8704-c66cfa42df9d
                  subscriptionId: 3d99211e3095-cf29ee50a8e3464d80ca5593d6a4d7b5-manageddevice
                  tenantName: 3d99211e-3095-489f-a5df-87780bbb99fd
                  createdOn: 2020-08-06T20:26:45.956Z
                  modifiedOn: null
                  provisionedOn: null
                  status:
                    lifeCycleStatus: Ordering
                  definitionAttributes:
                    name: manageddevice
                    id: 5872e764-c459-11e7-abc4-cec278b6b50a
                    offerName: cisco.consume.service.manageddevice.label
                    type: manageddevice
                  attributes:
                    template: manageddevice-2.0.ftl
                    orchestrator: ncs
                    incomplete: "true"
                    version: "1"
                - id: 87f25b975cfa-4e44cd52703d4de4af57a82eb1b23bb6-manageddevice
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  tenantId: 87f25b97-5cfa-4f30-b72c-a6c1ee13fa87
                  userId: 876a8f91-ba41-40e5-813d-c2688baebd1a
                  subscriptionId: 87f25b975cfa-4e44cd52703d4de4af57a82eb1b23bb6-manageddevice
                  tenantName: 87f25b97-5cfa-4f30-b72c-a6c1ee13fa87
                  createdOn: 2020-08-06T20:22:56.414Z
                  modifiedOn: null
                  provisionedOn: null
                  status:
                    lifeCycleStatus: Ordering
                  definitionAttributes:
                    name: manageddevice
                    id: 5872e764-c459-11e7-abc4-cec278b6b50a
                    offerName: cisco.consume.service.manageddevice.label
                    type: manageddevice
                  attributes:
                    template: manageddevice-2.0.ftl
                    orchestrator: ncs
                    incomplete: "true"
                    version: "1"
                - id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                  userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                  subscriptionId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                  tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                  createdOn: 2020-08-04T21:01:47.148Z
                  modifiedOn: null
                  provisionedOn: 2020-08-04T21:01:47.093Z
                  status:
                    lifeCycleStatus: Provisioned
                  definitionAttributes:
                    name: Managed Device
                    id: 5872e764-c459-11e7-abc4-cec278b6b50a
                    offerName: Managed Device
                    type: manageddevice
                  attributes:
                    template: manageddevice-2.0.ftl
                    orchestrator: ncs
                    platform-service-instance-id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                    devices: '[{"status-message":"Operation ADD on device CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                      with serial number 97K7C3YDPY1 was a SUCCESS","name":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3","attributes":[{"attrib-name":"ipaddress","attrib-value":"10.254.0.1"},{"attrib-name":"hostname","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"subtype","attrib-value":"ISR"},{"attrib-name":"name","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"ned-id","attrib-value":"cisco-ios-cli-6.37"},{"attrib-name":"model","attrib-value":"CSR1000V"},{"attrib-name":"serialKey","attrib-value":"97K7C3YDPY1"},{"attrib-name":"type","attrib-value":"CPE"},{"attrib-name":"category","attrib-value":"CPE"},{"attrib-name":"version","attrib-value":"16.9.5"}],"operation":"ADD","status":"SUCCESS"}]'
                    name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                    provisionTimestamp: Tue Aug 04 21:01:47 UTC 2020
                    provisionTimestampNumber: "1596574907112"
                    version: "1"
                - id: b33666428865-5d0511e7935d41dc8288f7c76a4fbf3c-manageddevice
                  providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  tenantId: b3366642-8865-407f-a8e3-5fa56868f74f
                  userId: 5915c0c4-8b9b-4480-b034-5fca26e6ce7c
                  subscriptionId: b33666428865-5d0511e7935d41dc8288f7c76a4fbf3c-manageddevice
                  tenantName: b3366642-8865-407f-a8e3-5fa56868f74f
                  createdOn: 2020-08-06T20:26:44.819Z
                  modifiedOn: null
                  provisionedOn: null
                  status:
                    lifeCycleStatus: Ordering
                  definitionAttributes:
                    name: manageddevice
                    id: 5872e764-c459-11e7-abc4-cec278b6b50a
                    offerName: cisco.consume.service.manageddevice.label
                    type: manageddevice
                  attributes:
                    template: manageddevice-2.0.ftl
                    orchestrator: ncs
                    incomplete: "true"
                    version: "1"
              schema:
                $ref: '#/components/schemas/ServicesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of services.
      tags:
      - Services
      x-accepts: application/json
    post:
      operationId: submitOrder
      parameters:
      - explode: true
        in: query
        name: productId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: offerId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              type: request
              serviceType: manageddevice
              action: orderOffer
              payload:
                service:
                  template: manageddevice-2.0.ftl
                  orchestrator: ncs
                  incomplete: "true"
                  name: manageddevice
                  id: 5872e764-c459-11e7-abc4-cec278b6b50a
                  type: manageddevice
                  version: "1"
                tenant:
                  id: 87f25b97-5cfa-4f30-b72c-a6c1ee13fa87
                  name: b2b77db8-dbd9-46b4-8db5-6da58b36984e
                user:
                  name: Super
                  id: superuser
                provider:
                  id: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  name: CiscoSystems
                offer:
                  id: 627a75ec-c459-11e7-abc4-cec278b6b50a
                  name: cisco.consume.service.manageddevice.label
                  type: full
                  label: cisco.consume.manageddevice.offer.manageddevice.full
                cost:
                  deviceTotal: "0"
                  deviceTotalType: USD
                  serviceTotal: "0"
                  serviceTotalType: USD
                subscriptionDetail:
                  sites: []
                  serviceInstanceDetail:
                    tenantId: 87f25b97-5cfa-4f30-b72c-a6c1ee13fa87
                    tenantName: b2b77db8-dbd9-46b4-8db5-6da58b36984e
                serviceDowngrade: {}
                nsoResponseTypes:
                  createOperation: pnp
                  updateOperation: pnp
                  deleteOperation: pnp
            schema:
              $ref: '#/components/schemas/LegacyServiceOrder'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                message: Order submitted successfully.
                transactionUUID: a25a8111-bced-4446-a9ad-d681b13d1b2d
                subscriptionId: 87f25b975cfa-4e44cd52703d4de4af57a82eb1b23bb6-manageddevice
                url: /v1/services/5872e764-c459-11e7-abc4-cec278b6b50a/offers/627a75ec-c459-11e7-abc4-cec278b6b50a
                status: success
                serviceInstanceIds:
                - 87f25b975cfa-4e44cd52703d4de4af57a82eb1b23bb6-manageddevice
                sites: []
                devices: null
              schema:
                $ref: '#/components/schemas/LegacyServiceOrderResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Submits an order.
      tags:
      - Services
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateOrder
      parameters:
      - explode: true
        in: query
        name: productId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: offerId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              type: request
              serviceType: manageddevice
              action: orderOffer
              payload:
                service:
                  template: manageddevice-2.0.ftl
                  orchestrator: ncs
                  incomplete: "true"
                  name: manageddevice
                  id: 5872e764-c459-11e7-abc4-cec278b6b50a
                  type: manageddevice
                  version: "1"
                tenant:
                  id: b3366642-8865-407f-a8e3-5fa56868f74f
                  name: 717fc5a0-e515-40dd-a2a9-2436d0b7af74
                user:
                  name: Super
                  id: superuser
                provider:
                  id: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                  name: CiscoSystems
                offer:
                  id: 627a75ec-c459-11e7-abc4-cec278b6b50a
                  name: cisco.consume.service.manageddevice.label
                  type: full
                  label: cisco.consume.manageddevice.offer.manageddevice.full
                cost:
                  deviceTotal: "0"
                  deviceTotalType: USD
                  serviceTotal: "0"
                  serviceTotalType: USD
                subscriptionDetail:
                  sites: []
                  serviceInstanceDetail:
                    tenantId: b3366642-8865-407f-a8e3-5fa56868f74f
                    tenantName: 717fc5a0-e515-40dd-a2a9-2436d0b7af74
                serviceDowngrade: {}
                nsoResponseTypes:
                  createOperation: pnp
                  updateOperation: pnp
                  deleteOperation: pnp
            schema:
              $ref: '#/components/schemas/LegacyServiceOrder'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                message: Edit order submitted successfully.
                transactionUUID: 15acc700-dcba-4ece-85f5-0e2da9034019
                subscriptionId: null
                url: /v1/services/5872e764-c459-11e7-abc4-cec278b6b50a/offers/627a75ec-c459-11e7-abc4-cec278b6b50a
                status: success
                serviceInstanceIds:
                - 3d99211e3095-cf29ee50a8e3464d80ca5593d6a4d7b5-manageddevice
                sites: []
                devices: null
              schema:
                $ref: '#/components/schemas/LegacyServiceOrderResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates an order.
      tags:
      - Services
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/services/{id}:
    delete:
      operationId: deleteService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a service.
      tags:
      - Services
      x-accepts: application/json
    get:
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                subscriptionId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                createdOn: 2020-08-04T21:01:47.148Z
                modifiedOn: null
                provisionedOn: 2020-08-04T21:01:47.093Z
                status:
                  lifeCycleStatus: Provisioned
                definitionAttributes:
                  name: Managed Device
                  offerName: Managed Device
                  id: 5872e764-c459-11e7-abc4-cec278b6b50a
                  type: manageddevice
                attributes:
                  template: manageddevice-2.0.ftl
                  orchestrator: ncs
                  platform-service-instance-id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                  devices: '[{"status-message":"Operation ADD on device CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                    with serial number 97K7C3YDPY1 was a SUCCESS","name":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3","attributes":[{"attrib-name":"ipaddress","attrib-value":"10.254.0.1"},{"attrib-name":"hostname","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"subtype","attrib-value":"ISR"},{"attrib-name":"name","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"ned-id","attrib-value":"cisco-ios-cli-6.37"},{"attrib-name":"model","attrib-value":"CSR1000V"},{"attrib-name":"serialKey","attrib-value":"97K7C3YDPY1"},{"attrib-name":"type","attrib-value":"CPE"},{"attrib-name":"category","attrib-value":"CPE"},{"attrib-name":"version","attrib-value":"16.9.5"}],"operation":"ADD","status":"SUCCESS"}]'
                  name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  provisionTimestamp: Tue Aug 04 21:01:47 UTC 2020
                  provisionTimestampNumber: "1596574907112"
                  version: "1"
              schema:
                $ref: '#/components/schemas/Service'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a service.
      tags:
      - Services
      x-accepts: application/json
    put:
      operationId: updateService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              status:
                lifeCycleStatus: Provisioned
              definitionAttributes:
                name: Managed Device
                offerName: Managed Device
                id: 5872e764-c459-11e7-abc4-cec278b6b50a
                type: manageddevice
              attributes:
                template: manageddevice-2.0.ftl
                orchestrator: ncs
                platform-service-instance-id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                devices: '[{"status-message":"Operation ADD on device CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  with serial number 97K7C3YDPY1 was a SUCCESS","name":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3","attributes":[{"attrib-name":"ipaddress","attrib-value":"10.254.0.1"},{"attrib-name":"hostname","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"subtype","attrib-value":"ISR"},{"attrib-name":"name","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"ned-id","attrib-value":"cisco-ios-cli-6.37"},{"attrib-name":"model","attrib-value":"CSR1000V"},{"attrib-name":"serialKey","attrib-value":"97K7C3YDPY1"},{"attrib-name":"type","attrib-value":"CPE"},{"attrib-name":"category","attrib-value":"CPE"},{"attrib-name":"version","attrib-value":"16.9.5"}],"operation":"ADD","status":"SUCCESS"}]'
                name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                provisionTimestamp: Tue Aug 04 21:01:47 UTC 2020
                provisionTimestampNumber: "1596574907112"
                version: "1"
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
                tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                userId: c0c3cff0-d5d5-11ea-b88a-a7053c652ef4
                subscriptionId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                createdOn: 2020-08-04T21:01:47.148Z
                modifiedOn: 2020-08-04T21:01:47.148Z
                provisionedOn: 2020-08-04T21:01:47.093Z
                status:
                  lifeCycleStatus: Provisioned
                definitionAttributes:
                  name: Managed Device
                  offerName: Managed Device
                  id: 5872e764-c459-11e7-abc4-cec278b6b50a
                  type: manageddevice
                attributes:
                  template: manageddevice-2.0.ftl
                  orchestrator: ncs
                  platform-service-instance-id: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                  devices: '[{"status-message":"Operation ADD on device CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                    with serial number 97K7C3YDPY1 was a SUCCESS","name":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3","attributes":[{"attrib-name":"ipaddress","attrib-value":"10.254.0.1"},{"attrib-name":"hostname","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"subtype","attrib-value":"ISR"},{"attrib-name":"name","attrib-value":"CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3"},{"attrib-name":"ned-id","attrib-value":"cisco-ios-cli-6.37"},{"attrib-name":"model","attrib-value":"CSR1000V"},{"attrib-name":"serialKey","attrib-value":"97K7C3YDPY1"},{"attrib-name":"type","attrib-value":"CPE"},{"attrib-name":"category","attrib-value":"CPE"},{"attrib-name":"version","attrib-value":"16.9.5"}],"operation":"ADD","status":"SUCCESS"}]'
                  name: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  provisionTimestamp: Tue Aug 04 21:01:47 UTC 2020
                  provisionTimestampNumber: "1596574907112"
                  version: "1"
              schema:
                $ref: '#/components/schemas/Service'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a service.
      tags:
      - Services
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites:
    get:
      operationId: getSitesPage
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: includeSubtenants
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: serviceId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: serviceType
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: parentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managingControlPlaneId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: showImage
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 10
                totalItems: null
                hasNext: false
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: 83e31860-d699-11ea-ab1f-85a66520c057
                  tenantId: 3ae1903b-a43e-4c18-9d01-983ef3b82eb5
                  parentId: null
                  name: Site One
                  type: null
                  description: A great description of site one.
                  address: null
                  contact: null
                  image: ""
                  attributes: null
                  devices: []
                  location: null
                  status:
                    type: health
                    name: healthStatus
                    value: unknown
                    severity: "3"
                    lastUpdated: 2020-08-04T21:29:01.927Z
                    lastUpdatedMessage: unknown
                  createdOn: 2020-08-04T21:29:01.929Z
                  createdBy: 2817602d-ef21-49e3-acf6-f6c8f15a8d90
                  modifiedOn: 2020-08-04T21:29:01.929Z
                  modifiedBy: 2817602d-ef21-49e3-acf6-f6c8f15a8d90
                - id: fb6ee9a2-3bf2-4966-8c53-ebc3c3c5fa2f
                  tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                  parentId: null
                  name: Site Two
                  type: null
                  description: A great description of site two.
                  address: null
                  contact: null
                  image: ""
                  attributes:
                    tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                    contactEmail: ""
                    contactName: ""
                    latitude: "43.6411344"
                    siteDescription: A great description of site two.
                    location: 88 Queens Quay W, Toronto, ON M5J, Canada
                    longitude: -79.37703469999997
                  devices:
                  - deviceId: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                    serviceId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                    serviceType: manageddevice
                  location:
                    latitude: 43.6411344
                    longitude: -79.37703469999997
                  status:
                    type: health
                    name: healthStatus
                    value: unknown
                    severity: "3"
                    lastUpdated: 2020-08-04T20:59:35.071Z
                    lastUpdatedMessage: unknown
                  createdOn: 2020-08-04T20:59:35.084Z
                  createdBy: superuser
                  modifiedOn: 2020-08-04T20:59:35.084Z
                  modifiedBy: superuser
              schema:
                $ref: '#/components/schemas/SitesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of Sites. Only one filter is supported at a time.
      tags:
      - Sites
      x-accepts: application/json
    post:
      operationId: createSite
      requestBody:
        content:
          application/json:
            example:
              tenantId: df50cb47-0348-4bbf-96e6-9d0904008c03
              deviceIds: []
              name: Your Site Name
              description: A description of the site.
            schema:
              $ref: '#/components/schemas/SiteCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: fa1872f0-d824-11ea-ab1f-85a66520c057
                tenantId: df50cb47-0348-4bbf-96e6-9d0904008c03
                parentId: null
                name: Your Site Name
                type: null
                description: A description of the site.
                address: null
                contact: null
                image: null
                attributes: {}
                devices: []
                location: null
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-06T20:39:51.457707Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-06T20:39:51.460741Z
                createdBy: 4d291eb4-bf0c-4ab2-b28e-5d0623a22964
                modifiedOn: 2020-08-06T20:39:51.460741Z
                modifiedBy: 4d291eb4-bf0c-4ab2-b28e-5d0623a22964
              schema:
                $ref: '#/components/schemas/Site'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites/{id}:
    delete:
      operationId: deleteSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a site.
      tags:
      - Sites
      x-accepts: application/json
    get:
      operationId: getSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: showImage
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: fb6ee9a2-3bf2-4966-8c53-ebc3c3c5fa2f
                tenantId: 985b22a2-00a8-4cea-b9ed-50e76b2b5949
                parentId: null
                name: Site Two
                type: null
                description: A great description of site two.
                address: null
                contact: null
                image: ""
                attributes:
                  tenantName: d5c9dc30-0232-499b-a8f3-3962c3138159
                  contactEmail: ""
                  contactName: ""
                  latitude: "43.6411344"
                  siteDescription: A great description of site two.
                  location: 88 Queens Quay W, Toronto, ON M5J, Canada
                  longitude: -79.37703469999997
                devices:
                - deviceId: CPE-828dcb62-2345-4b8f-b5af-5db230a95cd3
                  serviceId: d5c9dc300232-4e8677d462dd49cab5298731a94c2da0-manageddevice
                  serviceType: manageddevice
                location:
                  latitude: 43.6411344
                  longitude: -79.37703469999997
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-04T20:59:35.071Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-04T20:59:35.084Z
                createdBy: superuser
                modifiedOn: 2020-08-04T20:59:35.084Z
                modifiedBy: superuser
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a site.
      tags:
      - Sites
      x-accepts: application/json
    put:
      operationId: updateSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: sendNotification
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: Site Three
              description: A new description with better words.
              attributes: {}
            schema:
              $ref: '#/components/schemas/SiteUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites/{id}/devices/add:
    post:
      operationId: addDevicesToSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              minItems: 1
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ec53d570-d828-11ea-ab1f-85a66520c057
                tenantId: 66290b34-91cb-42fe-9821-c2f8007b8af3
                parentId: null
                name: Site Three
                type: null
                description: This is the best site description.
                address: null
                contact: null
                image: null
                attributes: null
                devices:
                - deviceId: 8352c1f7-6683-4514-8ab3-1dfc8d74d800
                  serviceId: Unknown
                  serviceType: manageddevice
                location: null
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-06T21:08:06.345Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-06T21:08:06.348Z
                createdBy: superuser
                modifiedOn: 2020-08-06T21:08:07.230928Z
                modifiedBy: a2dc0081-3fe1-4c99-8daf-736bfdab7546
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Add devices to a site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites/{id}/devices/remove:
    post:
      operationId: removeDevicesFromSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              minItems: 1
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ec53d570-d828-11ea-ab1f-85a66520c057
                tenantId: 66290b34-91cb-42fe-9821-c2f8007b8af3
                parentId: null
                name: Site Three
                type: null
                description: This is the best site description.
                address: null
                contact: null
                image: null
                attributes: null
                devices:
                - deviceId: 8352c1f7-6683-4514-8ab3-1dfc8d74d800
                  serviceId: Unknown
                  serviceType: manageddevice
                location: null
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-06T21:08:06.345Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-06T21:08:06.348Z
                createdBy: superuser
                modifiedOn: 2020-08-06T21:08:07.230928Z
                modifiedBy: a2dc0081-3fe1-4c99-8daf-736bfdab7546
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Removes devices from a site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites/{id}/services/add:
    post:
      operationId: addServicesToSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              minItems: 1
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ec53d570-d828-11ea-ab1f-85a66520c057
                tenantId: 66290b34-91cb-42fe-9821-c2f8007b8af3
                parentId: null
                name: Site Three
                type: null
                description: This is the best site description.
                address: null
                contact: null
                image: null
                attributes: null
                devices:
                - deviceId: 8352c1f7-6683-4514-8ab3-1dfc8d74d800
                  serviceId: Unknown
                  serviceType: manageddevice
                location: null
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-06T21:08:06.345Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-06T21:08:06.348Z
                createdBy: superuser
                modifiedOn: 2020-08-06T21:08:07.230928Z
                modifiedBy: a2dc0081-3fe1-4c99-8daf-736bfdab7546
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Add services to a site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /manage/api/v8/sites/{id}/services/remove:
    post:
      operationId: removeServicesFromSite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              minItems: 1
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ec53d570-d828-11ea-ab1f-85a66520c057
                tenantId: 66290b34-91cb-42fe-9821-c2f8007b8af3
                parentId: null
                name: Site Three
                type: null
                description: This is the best site description.
                address: null
                contact: null
                image: null
                attributes: null
                devices:
                - deviceId: 8352c1f7-6683-4514-8ab3-1dfc8d74d800
                  serviceId: Unknown
                  serviceType: manageddevice
                location: null
                status:
                  type: health
                  name: healthStatus
                  value: unknown
                  severity: "3"
                  lastUpdated: 2020-08-06T21:08:06.345Z
                  lastUpdatedMessage: unknown
                createdOn: 2020-08-06T21:08:06.348Z
                createdBy: superuser
                modifiedOn: 2020-08-06T21:08:07.230928Z
                modifiedBy: a2dc0081-3fe1-4c99-8daf-736bfdab7546
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Remove services from a site.
      tags:
      - Sites
      x-contentType: application/json
      x-accepts: application/json
  /monitor/api/v8/health/devices/list:
    get:
      operationId: getDevicesHealthList
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceHealth'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      tags:
      - Health
      x-accepts: application/json
  /monitor/api/v8/health/services/list:
    get:
      operationId: getServicesHealthList
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceHealth'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      tags:
      - Health
      x-accepts: application/json
  /auditing/api/v8/genericevents:
    post:
      description: Needs CREATE_AUDIT_GENERIC_EVENT_PERMISSION to create a Generic
        Event.
      operationId: createGenericEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericEventCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericEvent'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Create Generic Event
      tags:
      - Auditing Generic Events
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/products:
    get:
      operationId: getProductsPage
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 10
                totalItems: null
                hasNext: false
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: ea557db8-391c-4c67-a504-c546e367868f
                  name: vbranch
                  label: cisco.catalog.service.vbranch.name
                  version: "1"
                  description: cisco.catalog.service.vbranch.description
                  image: /services/vbranch/images/icons/image_vbranch_service.svg
                  orderLimit: 1
                  multipleInstanceAllowed: false
                  unitOfMeasure: null
                  options: []
                  properties: []
                  bandwidthPrioritization: null
                  configuration:
                    device: "false"
                    parts: "2"
                    showOffers: "true"
                    validation: none
                  isResource: false
                  hasChildren: false
                  parentId: null
                  serviceExtensions: []
                  serviceConfigQueryRootXPaths: []
                  uiConfig: null
                  tags: []
                - id: 1a302d7c-5311-4fdf-aa99-ca99dec586b9
                  name: vbranch
                  label: cisco.catalog.service.sdwan.name
                  version: "1"
                  description: cisco.catalog.service.sdwan.description
                  image: /services/sdwan/images/icons/image_sdwan_service.svg
                  orderLimit: 1
                  multipleInstanceAllowed: false
                  unitOfMeasure: null
                  options: []
                  properties: []
                  bandwidthPrioritization: null
                  configuration:
                    device: "false"
                    parts: "2"
                    showOffers: "true"
                    validation: none
                  isResource: false
                  hasChildren: false
                  parentId: null
                  serviceExtensions: []
                  serviceConfigQueryRootXPaths: []
                  uiConfig: null
                  tags:
                  - Preview
                  - EFT
              schema:
                $ref: '#/components/schemas/ProductsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of products.
      tags:
      - Products
      x-accepts: application/json
    post:
      operationId: createProduct
      requestBody:
        content:
          application/json:
            example:
              name: vbranch
              label: cisco.catalog.service.vbranch.name
              version: "1"
              description: cisco.catalog.service.vbranch.description
              image: /services/vbranch/images/icons/image_vbranch_service.svg
              orderLimit: 1
              multipleInstanceAllowed: false
              unitOfMeasure: null
              options: []
              properties: []
              bandwidthPrioritization: null
              configuration:
                device: "false"
                parts: "2"
                showOffers: "true"
                validation: none
              isResource: false
              hasChildren: false
              parentId: null
              serviceExtensions: []
              serviceConfigQueryRootXPaths: []
              uiConfig: null
              tags:
              - Preview
              - EFT
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: ea557db8-391c-4c67-a504-c546e367868f
                name: vbranch
                label: cisco.catalog.service.vbranch.name
                version: "1"
                description: cisco.catalog.service.vbranch.description
                image: /services/vbranch/images/icons/image_vbranch_service.svg
                orderLimit: 1
                multipleInstanceAllowed: false
                unitOfMeasure: null
                options: []
                properties: []
                bandwidthPrioritization: null
                configuration:
                  device: "false"
                  parts: "2"
                  showOffers: "true"
                  validation: none
                isResource: false
                hasChildren: false
                parentId: null
                serviceExtensions: []
                serviceConfigQueryRootXPaths: []
                uiConfig: null
                tags:
                - Preview
                - EFT
              schema:
                $ref: '#/components/schemas/Product'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a product.
      tags:
      - Products
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/products/count:
    get:
      operationId: getProductsCount
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: 11
              schema:
                format: int64
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns the number of products.
      tags:
      - Products
      x-accepts: application/json
  /consume/api/v8/products/{id}:
    delete:
      operationId: deleteProduct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a product.
      tags:
      - Products
      x-accepts: application/json
    get:
      operationId: getProduct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: ea557db8-391c-4c67-a504-c546e367868f
                name: vbranch
                label: cisco.catalog.service.vbranch.name
                version: "1"
                description: cisco.catalog.service.vbranch.description
                image: /services/vbranch/images/icons/image_vbranch_service.svg
                orderLimit: 1
                multipleInstanceAllowed: false
                unitOfMeasure: null
                options: []
                properties: []
                bandwidthPrioritization: null
                configuration:
                  device: "false"
                  parts: "2"
                  showOffers: "true"
                  validation: none
                isResource: false
                hasChildren: false
                parentId: null
                serviceExtensions: []
                serviceConfigQueryRootXPaths: []
                uiConfig: null
                tags:
                - Preview
                - EFT
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a product.
      tags:
      - Products
      x-accepts: application/json
    put:
      operationId: updateProduct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: vbranch
              label: cisco.catalog.service.vbranch.name
              version: "1"
              description: cisco.catalog.service.vbranch.description
              image: /services/vbranch/images/icons/image_vbranch_service.svg
              orderLimit: 1
              multipleInstanceAllowed: false
              unitOfMeasure: null
              options: []
              properties: []
              bandwidthPrioritization: null
              configuration:
                device: "false"
                parts: "2"
                showOffers: "true"
                validation: none
              isResource: false
              hasChildren: false
              parentId: null
              serviceExtensions: []
              serviceConfigQueryRootXPaths: []
              uiConfig: null
              tags:
              - Preview
              - EFT
            schema:
              $ref: '#/components/schemas/ProductUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ea557db8-391c-4c67-a504-c546e367868f
                name: vbranch
                label: cisco.catalog.service.vbranch.name
                version: "1"
                description: cisco.catalog.service.vbranch.description
                image: /services/vbranch/images/icons/image_vbranch_service.svg
                orderLimit: 1
                multipleInstanceAllowed: false
                unitOfMeasure: null
                options: []
                properties: []
                bandwidthPrioritization: null
                configuration:
                  device: "false"
                  parts: "2"
                  showOffers: "true"
                  validation: none
                isResource: false
                hasChildren: false
                parentId: null
                serviceExtensions: []
                serviceConfigQueryRootXPaths: []
                uiConfig: null
                tags:
                - Preview
                - EFT
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a product.
      tags:
      - Products
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/products/{id}/assignments:
    put:
      operationId: updateProductAssignments
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
            - 3c64b303-ec28-4fe2-99b5-13f521b92700
            - 48feaddb-45d0-4126-a216-3e450bfdbba4
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - tenantId: e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 3c64b303-ec28-4fe2-99b5-13f521b92700
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 48feaddb-45d0-4126-a216-3e450bfdbba4
                createdOn: 2020-08-06T19:37:55.615Z
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAssignment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates the tenant assignments for a product.
      tags:
      - Products
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/products/{id}/assignments/list:
    get:
      operationId: getProductAssignmentsList
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - tenantId: e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 3c64b303-ec28-4fe2-99b5-13f521b92700
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 48feaddb-45d0-4126-a216-3e450bfdbba4
                createdOn: 2020-08-06T19:37:55.615Z
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAssignment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of tenant assignments for a product .
      tags:
      - Products
      x-accepts: application/json
  /consume/api/v8/offers:
    get:
      operationId: getOffersPage
      parameters:
      - explode: true
        in: query
        name: productId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: tenantIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 10
                totalItems: null
                hasNext: false
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: e3733184-09fa-4dc1-90e2-9ca233d5999a
                  name: branches
                  label: cisco.consume.service.vbranch.offer.name
                  description: cisco.consume.service.vbranch.offer.description
                  productId: 46bad1ba-2704-419d-b9b4-f1cdff79da4f
                  version: 1
                  displayOrder: 1
                  image: /services/vbranch/images/icons/image_vbranch_service.svg
                  price: null
                  type: null
                  supportedProperties:
                  - Basic-small
                  supportedOptions:
                  - name: Template_Development_Environment
                    value: "Yes"
                  - name: Zero_Touch_Deployment
                    value: "Yes"
                  - name: Custom_Service_Chaining
                    value: "Yes"
                  - name: Third_Party
                    value: "Yes"
                  approvals: null
                - id: 90521e4f-8074-458c-b278-2144c0f53b5a
                  name: cisco.consume.service.manageddevice.label
                  label: cisco.consume.manageddevice.offer.manageddevice.full
                  description: cisco.consume.service.manageddevice.description.label
                  productId: c9651078-b8d9-4018-bf25-8be6b6c06d85
                  version: 1
                  displayOrder: 1
                  image: services/manageddevice/images/managed-cpe.svg
                  price: null
                  type: null
                  supportedProperties:
                  - Basic-small
                  supportedOptions:
                  - name: Centralized_device_management
                    value: "Yes"
                  - name: Zero_Touch_Deployment
                    value: "Yes"
                  - name: Configuration_templates
                    value: "Yes"
                  - name: Monitoring_and_metrics
                    value: "Yes"
                  approvals: null
              schema:
                $ref: '#/components/schemas/OffersPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of product offers.
      tags:
      - Offers
      x-accepts: application/json
    post:
      operationId: createOffer
      requestBody:
        content:
          application/json:
            example:
              name: cisco.consume.service.manageddevice.label
              label: cisco.consume.manageddevice.offer.manageddevice.full
              description: cisco.consume.service.manageddevice.description.label
              productId: 83432bdd-1293-4bf3-ab53-77a199e2beff
              version: 1
              displayOrder: 1
              image: services/manageddevice/images/managed-cpe.svg
              price: test
              type: test
              supportedProperties:
              - Basic-small
              supportedOptions:
              - name: Centralized_device_management
                value: "Yes"
              - name: Zero_Touch_Deployment
                value: "Yes"
              - name: Configuration_templates
                value: "Yes"
              - name: Monitoring_and_metrics
                value: "Yes"
            schema:
              $ref: '#/components/schemas/OfferCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: e3733184-09fa-4dc1-90e2-9ca233d5999a
                name: cisco.consume.service.manageddevice.label
                label: cisco.consume.manageddevice.offer.manageddevice.full
                description: cisco.consume.service.manageddevice.description.label
                productId: 46bad1ba-2704-419d-b9b4-f1cdff79da4f
                version: 1
                displayOrder: 1
                image: services/manageddevice/images/managed-cpe.svg
                price: test
                type: test
                supportedProperties:
                - Basic-small
                supportedOptions:
                - name: Centralized_device_management
                  value: "Yes"
                - name: Zero_Touch_Deployment
                  value: "Yes"
                - name: Configuration_templates
                  value: "Yes"
                - name: Monitoring_and_metrics
                  value: "Yes"
                approvals: null
              schema:
                $ref: '#/components/schemas/Offer'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a product offer.
      tags:
      - Offers
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/offers/count:
    get:
      operationId: getOffersCount
      parameters:
      - explode: true
        in: query
        name: productId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: 7
              schema:
                format: int64
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns the number of product offers.
      tags:
      - Offers
      x-accepts: application/json
  /consume/api/v8/offers/{id}:
    delete:
      operationId: deleteOffer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a product offer
      tags:
      - Offers
      x-accepts: application/json
    get:
      operationId: getOffer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: e3733184-09fa-4dc1-90e2-9ca233d5999a
                name: branches
                label: cisco.consume.service.vbranch.offer.name
                description: cisco.consume.service.vbranch.offer.description
                productId: 46bad1ba-2704-419d-b9b4-f1cdff79da4f
                version: 1
                displayOrder: 1
                image: /services/vbranch/images/icons/image_vbranch_service.svg
                price: null
                type: null
                supportedProperties:
                - Basic-small
                supportedOptions:
                - name: Template_Development_Environment
                  value: "Yes"
                - name: Zero_Touch_Deployment
                  value: "Yes"
                - name: Custom_Service_Chaining
                  value: "Yes"
                - name: Third_Party
                  value: "Yes"
                approvals: null
              schema:
                $ref: '#/components/schemas/Offer'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a product offer.
      tags:
      - Offers
      x-accepts: application/json
    put:
      operationId: updateOffer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: branches
              label: cisco.consume.service.vbranch.offer.name
              description: cisco.consume.service.vbranch.offer.description
              productId: 46bad1ba-2704-419d-b9b4-f1cdff79da4f
              version: 1
              displayOrder: 1
              image: /services/vbranch/images/icons/image_vbranch_service.svg
              price: null
              type: null
              supportedProperties:
              - Basic-small
              supportedOptions:
              - name: Template_Development_Environment
                value: "Yes"
              - name: Zero_Touch_Deployment
                value: "Yes"
              - name: Custom_Service_Chaining
                value: "Yes"
              - name: Third_Party
                value: "Yes"
              approvals: null
            schema:
              $ref: '#/components/schemas/OfferUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: e3733184-09fa-4dc1-90e2-9ca233d5999a
                name: branches
                label: cisco.consume.service.vbranch.offer.name
                description: cisco.consume.service.vbranch.offer.description
                productId: 46bad1ba-2704-419d-b9b4-f1cdff79da4f
                version: 1
                displayOrder: 1
                image: /services/vbranch/images/icons/image_vbranch_service.svg
                price: null
                type: null
                supportedProperties:
                - Basic-small
                supportedOptions:
                - name: Template_Development_Environment
                  value: "Yes"
                - name: Zero_Touch_Deployment
                  value: "Yes"
                - name: Custom_Service_Chaining
                  value: "Yes"
                - name: Third_Party
                  value: "Yes"
                approvals: null
              schema:
                $ref: '#/components/schemas/Offer'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a product offer.
      tags:
      - Offers
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/offers/{id}/assignments:
    put:
      operationId: updateOfferAssignments
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
            - 3c64b303-ec28-4fe2-99b5-13f521b92700
            - 48feaddb-45d0-4126-a216-3e450bfdbba4
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - tenantId: e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 3c64b303-ec28-4fe2-99b5-13f521b92700
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 48feaddb-45d0-4126-a216-3e450bfdbba4
                createdOn: 2020-08-06T19:37:55.615Z
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAssignment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates the tenant assignemnts for a product offer.
      tags:
      - Offers
      x-contentType: application/json
      x-accepts: application/json
  /consume/api/v8/offers/{id}/assignments/list:
    get:
      operationId: getOfferAssignmentsList
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - tenantId: e8ff9360-c8f1-4f06-84d8-d8105bd29e1e
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 3c64b303-ec28-4fe2-99b5-13f521b92700
                createdOn: 2020-08-06T19:37:55.615Z
              - tenantId: 48feaddb-45d0-4126-a216-3e450bfdbba4
                createdOn: 2020-08-06T19:37:55.615Z
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAssignment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of tenant assignments for a product offer.
      tags:
      - Offers
      x-accepts: application/json
  /idm/v2/token:
    post:
      operationId: getAccessToken
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: OK
        default:
          description: Failed
      summary: Returns an access token.
      tags:
      - Security
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /idm/api/v8/roles/list:
    get:
      operationId: getRolesList
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: c0895f00-d5d5-11ea-b88a-a7053c652ef4
                name: CONSUMER
                description: Tenant Administrators have Tenant Operator-level permissions,
                  and can also perform more advanced tasks like managing service policies
                  and configurations.
                permissions:
                - DEVICE_MANAGEMENT
                - EXPORT_SERVICE
                - MANAGE_CATEGORY
                - MANAGE_DEVICES
                - MANAGE_DEVICE_SECRETS
                - MANAGE_INCIDENT
                - MANAGE_MD_DEVICE_MODELS
                - MANAGE_MD_SITES
                - MANAGE_REMOTE_USERS
                - MANAGE_SCHEDULE_TASK
                - MANAGE_SERVICES
                - MANAGE_SERVICE_CONFIG_APPLICATION
                - MANAGE_SITES
                - MANAGE_TARGET
                - MANAGE_WORKFLOW
                - MANAGE_WORKFLOW_INSTANCE
                - ORDER_SERVICE
                - SWITCH_TENANT
                - SWITCH_TENANT_UI
                - VBRANCH_DEVICE_ACCESS
                - VBRANCH_MANAGE_SITE
                - VBRANCH_MANAGE_TEMPLATE
                - VBRANCH_MANAGE_TEMPLATE_DATA
                - VBRANCH_VIEW_SITES
                - VIEW_ALERT_SERVICE
                - VIEW_ALL_TEMPLATES
                - VIEW_BUILD_INFO
                - VIEW_CATEGORY
                - VIEW_CONTACT
                - VIEW_CONTROL_PLANE
                - VIEW_DASHBOARD
                - VIEW_DEVICES
                - VIEW_DEVICE_RUNNING_CONFIG
                - VIEW_DEVICE_SECRETS
                - VIEW_DOCUMENTATION
                - VIEW_END_USER
                - VIEW_EVENTLOG
                - VIEW_EXTENSION_PARAMETERS
                - VIEW_INCIDENT
                - VIEW_INTEGRATION
                - VIEW_LOCALE
                - VIEW_LOCALE_STRING
                - VIEW_MAINTENANCE_INFO
                - VIEW_MD_DEVICE_MODELS
                - VIEW_MD_METRICS
                - VIEW_MD_PARAMETERS
                - VIEW_MD_SITES
                - VIEW_METRICS
                - VIEW_PRICE_PLAN
                - VIEW_PROVIDER
                - VIEW_REMOTE_USERS
                - VIEW_RESOURCES_UI
                - VIEW_RUNNING_CONFIG
                - VIEW_SCHEDULE_TASK
                - VIEW_SECURITY_SETTING
                - VIEW_SENSITIVE_SERVICE_CONFIG_ASSET_DETAIL
                - VIEW_SERVICES
                - VIEW_SERVICE_CONFIG_APPLICATION
                - VIEW_SERVICE_CONFIG_ASSET
                - VIEW_SERVICE_CONFIG_ASSIGNMENT
                - VIEW_SERVICE_CONFIG_AUDIT
                - VIEW_SERVICE_EXTENSION
                - VIEW_SITES
                - VIEW_STATUS
                - VIEW_SUBSCRIPTIONS_UI
                - VIEW_TARGET
                - VIEW_TENANT
                - VIEW_TERMS_CONDITIONS
                - VIEW_WORKFLOW
                - VIEW_WORKFLOW_INSTANCE
              - id: c08874a0-d5d5-11ea-b88a-a7053c652ef4
                name: OPERATOR
                description: Service Provider Operators support multiple customers
                  by maintaining service information and settings, viewing / monitoring
                  the SP-DNA platform, remediating basic customer issues and escalating
                  more serious ones.
                permissions:
                - ACCESS_ALL_TENANTS
                - ACCESS_DEVICE_TERMINAL
                - DEVICE_MANAGEMENT
                - EXPORT_SERVICE
                - MANAGE_ALERT_SERVICE
                - MANAGE_BULK_IMPORT
                - MANAGE_CONTROL_PLANE
                - MANAGE_DEVICES
                - MANAGE_DEVICE_SECRETS
                - MANAGE_INCIDENT
                - MANAGE_INTEGRATION
                - MANAGE_MAINTENANCE_INFO
                - MANAGE_MD_DEVICE_MODELS
                - MANAGE_MD_SITES
                - MANAGE_METADATA
                - MANAGE_METRICS
                - MANAGE_METRIC_TEMPLATES
                - MANAGE_NOTIFICATION
                - MANAGE_NSO
                - MANAGE_PROVIDER
                - MANAGE_SCHEDULE_TASK
                - MANAGE_SECRET_POLICIES
                - MANAGE_SERVICES
                - MANAGE_SERVICETYPES
                - MANAGE_SERVICE_CONFIG_APPLICATION
                - MANAGE_SERVICE_CONFIG_ASSET
                - MANAGE_SERVICE_CONFIG_ASSIGNMENT
                - MANAGE_SITES
                - MANAGE_SLM
                - MANAGE_SYSTEM_SECRETS
                - MANAGE_TARGET
                - MANAGE_TEMPLATES
                - MANAGE_TENANT
                - MANAGE_TERMS_CONDITIONS
                - MANAGE_WORKFLOW_EVENT
                - MANAGE_WORKFLOW_INSTANCE
                - MANAGE_WORKFLOW_RUNTIME_USER
                - MANAGE_WORKFLOW_SCHEDULE
                - MANAGE_WORKFLOW_TABLE
                - MANAGE_WORKFLOW_TABLE_TYPE
                - MANAGE_WORKFLOW_VARIABLE
                - ORDER_SERVICE
                - REGISTER_DEVICES
                - REGISTER_DEVICE_ACTION
                - SUSPEND_TENANT
                - SWITCH_TENANT
                - SWITCH_TENANT_UI
                - UPGRADE_DEVICES
                - VBRANCH_DEVICE_ACCESS
                - VBRANCH_MANAGE_SETTINGS
                - VBRANCH_MANAGE_SITE
                - VBRANCH_MANAGE_TEMPLATE
                - VBRANCH_MANAGE_TEMPLATE_DATA
                - VBRANCH_VIEW_SITES
                - VIEW_ALERT_SERVICE
                - VIEW_ALL_TEMPLATES
                - VIEW_BUILD_INFO
                - VIEW_BULK_IMPORT
                - VIEW_COMPONENT_METRICS
                - VIEW_COMPONENT_STATUS
                - VIEW_CONTACT
                - VIEW_CONTROL_PLANE
                - VIEW_DASHBOARD
                - VIEW_DEVICES
                - VIEW_DEVICE_RUNNING_CONFIG
                - VIEW_DEVICE_SECRETS
                - VIEW_DOCUMENTATION
                - VIEW_END_USER
                - VIEW_EVENTLOG
                - VIEW_EXTENSION_PARAMETERS
                - VIEW_INCIDENT
                - VIEW_INTEGRATION
                - VIEW_LOCALE
                - VIEW_LOCALE_STRING
                - VIEW_MAINTENANCE_INFO
                - VIEW_MD_DEVICE_MODELS
                - VIEW_MD_METRICS
                - VIEW_MD_PARAMETERS
                - VIEW_MD_SITES
                - VIEW_METADATA
                - VIEW_METRICS
                - VIEW_METRIC_TEMPLATES
                - VIEW_NOTIFICATION
                - VIEW_NSO
                - VIEW_OPERATOR_LOGIN_AS_CUSTOMER
                - VIEW_OPERATOR_SERVICES
                - VIEW_OPERATOR_SITES
                - VIEW_PRICE_PLAN
                - VIEW_PROVIDER
                - VIEW_REMOTE_USERS
                - VIEW_ROLE
                - VIEW_RUNNING_CONFIG
                - VIEW_SCHEDULE_TASK
                - VIEW_SECRET_POLICIES
                - VIEW_SECURITY_SETTING
                - VIEW_SENSITIVE_SERVICE_CONFIG_ASSET_DETAIL
                - VIEW_SERVICES
                - VIEW_SERVICE_CONFIGURATION_UI
                - VIEW_SERVICE_CONFIG_APPLICATION
                - VIEW_SERVICE_CONFIG_ASSET
                - VIEW_SERVICE_CONFIG_ASSIGNMENT
                - VIEW_SERVICE_CONFIG_AUDIT
                - VIEW_SERVICE_EXTENSION
                - VIEW_SITES
                - VIEW_SLM
                - VIEW_STATUS
                - VIEW_SYSTEM_SECRETS
                - VIEW_TARGET
                - VIEW_TENANT
                - VIEW_TERMS_CONDITIONS
                - VIEW_WORKFLOW_EVENT
                - VIEW_WORKFLOW_INSTANCE
                - VIEW_WORKFLOW_RUNTIME_USER
                - VIEW_WORKFLOW_SCHEDULE
                - VIEW_WORKFLOW_TABLE
                - VIEW_WORKFLOW_TABLE_TYPE
                - VIEW_WORKFLOW_VARIABLE
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of roles.
      tags:
      - Roles
      x-accepts: application/json
  /idm/api/v8/roles/name/{name}:
    get:
      operationId: getRoleByName
      parameters:
      - example: CONSUMER
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: c0895f00-d5d5-11ea-b88a-a7053c652ef4
                name: CONSUMER
                description: Tenant Administrators have Tenant Operator-level permissions,
                  and can also perform more advanced tasks like managing service policies
                  and configurations.
                permissions:
                - DEVICE_MANAGEMENT
                - EXPORT_SERVICE
                - MANAGE_CATEGORY
                - MANAGE_DEVICES
                - MANAGE_DEVICE_SECRETS
                - MANAGE_INCIDENT
                - MANAGE_MD_DEVICE_MODELS
                - MANAGE_MD_SITES
                - MANAGE_REMOTE_USERS
                - MANAGE_SCHEDULE_TASK
                - MANAGE_SERVICES
                - MANAGE_SERVICE_CONFIG_APPLICATION
                - MANAGE_SITES
                - MANAGE_TARGET
                - MANAGE_WORKFLOW
                - MANAGE_WORKFLOW_INSTANCE
                - ORDER_SERVICE
                - SWITCH_TENANT
                - SWITCH_TENANT_UI
                - VBRANCH_DEVICE_ACCESS
                - VBRANCH_MANAGE_SITE
                - VBRANCH_MANAGE_TEMPLATE
                - VBRANCH_MANAGE_TEMPLATE_DATA
                - VBRANCH_VIEW_SITES
                - VIEW_ALERT_SERVICE
                - VIEW_ALL_TEMPLATES
                - VIEW_BUILD_INFO
                - VIEW_CATEGORY
                - VIEW_CONTACT
                - VIEW_CONTROL_PLANE
                - VIEW_DASHBOARD
                - VIEW_DEVICES
                - VIEW_DEVICE_RUNNING_CONFIG
                - VIEW_DEVICE_SECRETS
                - VIEW_DOCUMENTATION
                - VIEW_END_USER
                - VIEW_EVENTLOG
                - VIEW_EXTENSION_PARAMETERS
                - VIEW_INCIDENT
                - VIEW_INTEGRATION
                - VIEW_LOCALE
                - VIEW_LOCALE_STRING
                - VIEW_MAINTENANCE_INFO
                - VIEW_MD_DEVICE_MODELS
                - VIEW_MD_METRICS
                - VIEW_MD_PARAMETERS
                - VIEW_MD_SITES
                - VIEW_METRICS
                - VIEW_PRICE_PLAN
                - VIEW_PROVIDER
                - VIEW_REMOTE_USERS
                - VIEW_RESOURCES_UI
                - VIEW_RUNNING_CONFIG
                - VIEW_SCHEDULE_TASK
                - VIEW_SECURITY_SETTING
                - VIEW_SENSITIVE_SERVICE_CONFIG_ASSET_DETAIL
                - VIEW_SERVICES
                - VIEW_SERVICE_CONFIG_APPLICATION
                - VIEW_SERVICE_CONFIG_ASSET
                - VIEW_SERVICE_CONFIG_ASSIGNMENT
                - VIEW_SERVICE_CONFIG_AUDIT
                - VIEW_SERVICE_EXTENSION
                - VIEW_SITES
                - VIEW_STATUS
                - VIEW_SUBSCRIPTIONS_UI
                - VIEW_TARGET
                - VIEW_TENANT
                - VIEW_TERMS_CONDITIONS
                - VIEW_WORKFLOW
                - VIEW_WORKFLOW_INSTANCE
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a role by name.
      tags:
      - Roles
      x-accepts: application/json
  /idm/api/v8/tenants:
    get:
      operationId: getTenantsPage
      parameters:
      - explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: showImage
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          example: name
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 3
                totalItems: null
                hasNext: true
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: ea7e39f2-863a-41b8-a6eb-6d730bc200b0
                  createdOn: 2020-08-05T21:29:46.782Z
                  modifiedOn: 2020-08-05T21:29:46.782Z
                  suspended: false
                  name: Acme Company
                  description: An anvil for every roadrunner.
                  url: https://cisco.com
                  image: null
                  parentId: null
                  numberOfChildren: 0
                  email: noreply@cisco.com
                - id: b32fc309-1e42-4769-81be-dfda6a249b6f
                  createdOn: 2020-08-06T20:59:52.19Z
                  modifiedOn: 2020-08-06T20:59:52.19Z
                  suspended: false
                  name: Monsters Incorporated
                  description: Things that go bump in the night.
                  url: https://cisco.com
                  image: null
                  parentId: null
                  numberOfChildren: 0
                  email: noreply@cisco.com
                - id: 4cc15964-5add-4446-ae3a-6bb4bf46c74d
                  createdOn: 2020-08-04T21:28:03.665Z
                  modifiedOn: 2020-08-04T21:28:03.665Z
                  suspended: false
                  name: Alta Motors
                  description: The future of fast.
                  url: https://cisco.com
                  image: null
                  parentId: null
                  numberOfChildren: 0
                  email: noreply@cisco.com
              schema:
                $ref: '#/components/schemas/TenantsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of tenants.
      tags:
      - Tenants
      x-accepts: application/json
    post:
      operationId: createTenant
      requestBody:
        content:
          application/json:
            example:
              name: Acme Company
              description: An anvil for every roadrunner.
              url: https://cisco.com
              email: someone@cisco.com
            schema:
              $ref: '#/components/schemas/TenantCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: b980988a-e418-494e-98d6-6cf2b80c9e73
                createdOn: 2020-08-06T21:43:17.941Z
                modifiedOn: 2020-08-06T21:43:17.941Z
                suspended: null
                name: Acme Company
                description: An anvil for every roadrunner.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: null
                email: someone@cisco.com
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new tenant.
      tags:
      - Tenants
      x-contentType: application/json
      x-accepts: application/json
  /idm/api/v8/tenants/list:
    get:
      operationId: getTenantsList
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: showImage
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: ea7e39f2-863a-41b8-a6eb-6d730bc200b0
                createdOn: 2020-08-05T21:29:46.782Z
                modifiedOn: 2020-08-05T21:29:46.782Z
                suspended: false
                name: Acme Company
                description: An anvil for every roadrunner.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: 0
                email: noreply@cisco.com
              - id: b32fc309-1e42-4769-81be-dfda6a249b6f
                createdOn: 2020-08-06T20:59:52.19Z
                modifiedOn: 2020-08-06T20:59:52.19Z
                suspended: false
                name: Monsters Incorporated
                description: Things that go bump in the night.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: 0
                email: noreply@cisco.com
              - id: 4cc15964-5add-4446-ae3a-6bb4bf46c74d
                createdOn: 2020-08-04T21:28:03.665Z
                modifiedOn: 2020-08-04T21:28:03.665Z
                suspended: false
                name: Alta Motors
                description: The future of fast.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: 0
                email: noreply@cisco.com
              schema:
                items:
                  $ref: '#/components/schemas/Tenant'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of tenants.
      tags:
      - Tenants
      x-accepts: application/json
  /idm/api/v8/tenants/{id}:
    delete:
      operationId: deleteTenant
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a tenant by id.
      tags:
      - Tenants
      x-accepts: application/json
    get:
      operationId: getTenant
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4cc15964-5add-4446-ae3a-6bb4bf46c74d
                createdOn: 2020-08-04T21:28:03.665Z
                modifiedOn: 2020-08-04T21:28:03.665Z
                suspended: false
                name: Alta Motors
                description: The future of fast.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: 0
                email: noreply@cisco.com
              schema:
                $ref: '#/components/schemas/Tenant'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a tenant by id.
      tags:
      - Tenants
      x-accepts: application/json
    put:
      operationId: updateTenant
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Acme Company
              description: We sell rocket powered rollerskates.
              url: https://cisco.com
              email: noreply@cisco.com
            schema:
              $ref: '#/components/schemas/TenantUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4cc15964-5add-4446-ae3a-6bb4bf46c74d
                createdOn: 2020-08-04T21:28:03.665Z
                modifiedOn: 2020-08-04T21:28:03.665Z
                suspended: false
                name: Acme Company
                description: We sell rocket powered rollerskates.
                url: https://cisco.com
                image: null
                parentId: null
                numberOfChildren: 0
                email: noreply@cisco.com
              schema:
                $ref: '#/components/schemas/Tenant'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a tenant by id.
      tags:
      - Tenants
      x-contentType: application/json
      x-accepts: application/json
  /idm/api/v8/users:
    get:
      operationId: getUsersPage
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                page: 0
                pageSize: 3
                totalItems: 47
                hasNext: false
                hasPrevious: false
                sortBy: null
                sortOrder: null
                contents:
                - id: 2415ed27-5d23-4888-8757-a33acad12eed
                  status: "true"
                  deleted: "false"
                  username: TBaker
                  firstName: Tom
                  lastName: Baker
                  email: noreply@cisco.com
                  roleIds:
                  - c08b33c0-d5d5-11ea-b88a-a7053c652ef4
                  tenantIds:
                  - 11af2b16-90ec-4fef-b8a4-2e57945fe0a2
                  passwordPolicyName: ppolicy_default
                  locale: en_US
                  password: null
                - id: cff95696-1e3d-42f8-9a1d-9d219f08b944
                  status: "true"
                  deleted: "false"
                  username: JPertwee
                  firstName: John
                  lastName: Pertwee
                  email: noreply@cisco.com
                  roleIds:
                  - c08b33c0-d5d5-11ea-b88a-a7053c652ef4
                  tenantIds:
                  - ec56632e-92bc-4d30-b626-f9eee37ee3e0
                  passwordPolicyName: ppolicy_default
                  locale: en_US
                  password: null
                - id: 9349f90e-b5f8-4c1a-b302-3fda5182123e
                  status: "true"
                  deleted: "false"
                  username: PDavidson
                  firstName: Peter
                  lastName: Davidson
                  email: noreply@cisco.com
                  roleIds:
                  - c08b33c0-d5d5-11ea-b88a-a7053c652ef4
                  tenantIds:
                  - 4cc13c9c-61be-4dd1-b50b-bbcd5f40a3c4
                  passwordPolicyName: ppolicy_default
                  locale: en_US
                  password: null
              schema:
                $ref: '#/components/schemas/UsersPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of users.
      tags:
      - Users
      x-accepts: application/json
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            example:
              firstName: Tom
              lastName: Baker
              email: noreply@cisco.com
              roleIds:
              - c0895f00-d5d5-11ea-b88a-a7053c652ef4
              tenantIds:
              - 18992931-6ced-4133-9101-da6e4b83a5df
              passwordPolicyName: ppolicy_default
              locale: en_US
              username: TBaker
              password: Password@1
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: b6c6e42a-d930-4e3b-ac28-2a337ec570ae
                status: "true"
                deleted: "false"
                username: TBaker
                firstName: Tom
                lastName: Baker
                email: noreply@cisco.com
                roleIds:
                - c0895f00-d5d5-11ea-b88a-a7053c652ef4
                tenantIds:
                - 18992931-6ced-4133-9101-da6e4b83a5df
                passwordPolicyName: ppolicy_default
                locale: en_US
                password: null
              schema:
                $ref: '#/components/schemas/User'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new user.
      tags:
      - Users
      x-contentType: application/json
      x-accepts: application/json
  /idm/api/v8/users/{id}:
    delete:
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a user by id.
      tags:
      - Users
      x-accepts: application/json
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 9349f90e-b5f8-4c1a-b302-3fda5182123e
                status: "true"
                deleted: "false"
                username: PDavidson
                firstName: Peter
                lastName: Davidson
                email: noreply@cisco.com
                roleIds:
                - c08b33c0-d5d5-11ea-b88a-a7053c652ef4
                tenantIds:
                - 4cc13c9c-61be-4dd1-b50b-bbcd5f40a3c4
                passwordPolicyName: ppolicy_default
                locale: en_US
                password: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns an existing user.
      tags:
      - Users
      x-accepts: application/json
    put:
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              firstName: Christopher
              lastName: Eccleston
              email: noreply@cisco.com
              roleIds:
              - c0895f00-d5d5-11ea-b88a-a7053c652ef4
              tenantIds:
              - 39ed2f7a-baf9-48b0-ad96-7f7828dc8b38
              passwordPolicyName: ppolicy_default
              locale: en_US
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 271eaf78-b805-492a-8afb-a53183912728
                status: "true"
                deleted: "false"
                username: CEccleston
                firstName: Christopher
                lastName: Eccleston
                email: noreply@cisco.com
                roleIds:
                - c0895f00-d5d5-11ea-b88a-a7053c652ef4
                tenantIds:
                - 39ed2f7a-baf9-48b0-ad96-7f7828dc8b38
                passwordPolicyName: ppolicy_default
                locale: en_US
                password: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates an existing user.
      tags:
      - Users
      x-contentType: application/json
      x-accepts: application/json
  /idm/api/v8/users/current:
    get:
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              example:
                id: 271eaf78-b805-492a-8afb-a53183912728
                status: "true"
                deleted: "false"
                username: JWhittaker
                firstName: Jodie
                lastName: Whittaker
                email: noreply@cisco.com
                roleIds:
                - c0895f00-d5d5-11ea-b88a-a7053c652ef4
                tenantIds:
                - 39ed2f7a-baf9-48b0-ad96-7f7828dc8b38
                passwordPolicyName: ppolicy_default
                locale: en_US
                password: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns the current user.
      tags:
      - Users
      x-accepts: application/json
  /idm/api/v8/users/updatepassword:
    put:
      operationId: updateUserPassword
      requestBody:
        content:
          application/json:
            example:
              username: JWhittaker
              oldPassword: Password@1
              newPassword: Password@2
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update a user password.
      tags:
      - Users
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/workflows:
    post:
      operationId: importWorkflow
      parameters:
      - explode: true
        in: query
        name: tenantIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: global
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              workflow:
                unique_name: definition_workflow_1flwhkwsayquzQyyfgz6tdRoyK2
                name: Health Check Atomic
                title: Health Check Atomic
                type: generic.workflow
                base_type: workflow
                variables:
                - schema_id: 1flwhm42MFVKT16QCVpnzTV3NDL
                  properties:
                    value: ""
                    scope: input
                    name: service_name
                    type: datatype.string
                  unique_name: variable_workflow_1flwhkauAJQe4uzBvUDvCBdY2HM
                  object_type: variable_workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    target_type: web-service.endpoint
                    target_id: definition_target_1flwhpdkMV95YN7uSm2ygMYsVe2
                    execute_on_workflow_target: true
                object_type: definition_workflow
                actions:
                - unique_name: definition_activity_1flwhq819QYFkMjAfPWDcg4zliI
                  name: HTTP Request
                  title: HTTP Request
                  type: web-service.http_request
                  base_type: activity
                  properties:
                    accept: application/json
                    action_timeout: 180
                    allow_auto_redirect: true
                    content_type: application/json
                    continue_on_error_status_code: false
                    continue_on_failure: false
                    custom_headers:
                    - name: Content-type
                      value: application/vnd.spring-boot.actuator.v1+json
                    display_name: HTTP Request
                    method: GET
                    relative_url: /$workflow.definition_workflow_1flwhkwsayquzQyyfgz6tdRoyK2.input.variable_workflow_1flwhkauAJQe4uzBvUDvCBdY2HM$/admin/health
                    runtime_user:
                      override_target_runtime_user: false
                      target_default: true
                    target:
                      override_workflow_target: false
                      use_workflow_target: true
                  object_type: definition_activity
              targets:
                definition_target_1flwhpdkMV95YN7uSm2ygMYsVe2:
                  unique_name: definition_target_1flwhpdkMV95YN7uSm2ygMYsVe2
                  name: Router Service
                  title: Router Service
                  type: web-service.endpoint
                  base_type: target
                  object_type: definition_target
                  properties:
                    description: Router Service
                    disable_certificate_validation: true
                    display_name: Router Service
                    host: dev-plt-aio1.lab.ciscomsx.com
                    no_runtime_user: true
                    port: -1
                    protocol: https
            schema:
              additionalProperties: {}
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 01HTTXYUA72EI3V0UsjQI3ik4QfyNTB2cvM
                tenantIds:
                - c1c7ac2f-9435-41b8-a76e-b23a14c761df
                uniqueName: definition_workflow_1flwhkwsayquzQyyfgz6tdRoyK2
                createdBy: 46dcc7f6-12f1-4c72-a44a-e7964dd8a43e
                createdOn: 2020-08-07 13:15:10+0000
                modifiedBy: 46dcc7f6-12f1-4c72-a44a-e7964dd8a43e
                modifiedOn: 2020-08-07 13:15:10+0000
              schema:
                $ref: '#/components/schemas/WorkflowMapping'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Imports a workflow.
      tags:
      - Workflows
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/workflows/list:
    get:
      operationId: getWorkflowsList
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: atomic
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HTTZQ6KG8BQ2tvgrxwB2O1NEQ5pTvXjDJ
                name: Health Check Atomic
                type: generic.workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    execute_on_workflow_target: true
                    target_id: 01HTTZQI11KK03IHnhzTPwT6MuUfHywECeW
                    target_type: 01HQR507N9OPR0y96F1u2i6rdLwOPvMc7Ub
                valid: true
                owner: aoadmin
                categories:
                - 01HQR5WWLT5ZZ6VMtGUNGjscsbZOE3psRVR
                metadata:
                  git_info:
                    target_id: ""
                    commit_hash: ""
                    committed_by: null
                    committed_on: null
                    commit_message: null
                status:
                  state: import_completed
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                unique_name: definition_workflow_1flwzKmCj9692j0FZRigZxne0fF
                base_type: workflow
                workflow_valid: false
                created_on: 2020-08-07T13:17:28Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:17:30Z
                updated_by: system
              - id: 01HTTZRH15EAQ5PJbiIXaIFmAUySyzw5hUR
                name: Health Check Atomic
                type: generic.workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    execute_on_workflow_target: true
                    target_id: 01HTTZRR8X3C35c2F9PUF1OBoSVcMDpT86x
                    target_type: 01HQR507N9OPR0y96F1u2i6rdLwOPvMc7Ub
                valid: true
                owner: aoadmin
                categories:
                - 01HQR5WWLT5ZZ6VMtGUNGjscsbZOE3psRVR
                metadata:
                  git_info:
                    target_id: ""
                    commit_hash: ""
                    committed_by: null
                    committed_on: null
                    commit_message: null
                status:
                  state: import_completed
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                unique_name: definition_workflow_1flwzgjQExHVTiT1n9p9to2LsEP
                base_type: workflow
                workflow_valid: false
                created_on: 2020-08-07T13:17:30Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:17:32Z
                updated_by: system
              schema:
                items:
                  $ref: '#/components/schemas/Workflow'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflows.
      tags:
      - Workflows
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}:
    delete:
      operationId: deleteWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Delete a workflow.
      tags:
      - Workflows
      x-accepts: application/json
    get:
      operationId: getWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTU0GSER5I82zXr2yeLADwvAW8tUbTF6F
                name: Health Check Atomic
                title: Health Check Atomic
                type: generic.workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    execute_on_workflow_target: true
                    target_id: 01HTU0H426RSC17R6ryJsiaeukVTZOBgQPT
                    target_type: 01HQR507N9OPR0y96F1u2i6rdLwOPvMc7Ub
                valid: true
                owner: aoadmin
                categories:
                - 01HQR5WWLT5ZZ6VMtGUNGjscsbZOE3psRVR
                metadata:
                  git_info:
                    target_id: ""
                    commit_hash: ""
                    committed_by: null
                    committed_on: null
                    commit_message: null
                status:
                  state: import_completed
                permissions:
                - manage
                - run
                variables:
                - id: 01HTU0GT1SE035ThRGKqPnrNX7hteloFasr
                  properties:
                    value: ""
                    scope: input
                    name: service_name
                    type: datatype.string
                    is_required: false
                  unique_name: variable_workflow_1flx6VoaQUDEbTsCa8sPZpYiumZ
                  created_by: aoadmin
                  created_on: 2020-08-07T13:18:25Z
                  updated_by: aoadmin
                  updated_on: 2020-08-07T13:18:27Z
                  schema_id: 01HQR50TZJK3M3d09kDOqLnYSywRwovUhAW
                  object_type: variable_workflow
                actions:
                - id: 01HTU0HMMQ1LL1U6HB1qddmdfZFP2UEdHoC
                  name: HTTP Request
                  title: HTTP Request
                  type: web-service.http_request
                  status:
                    state: created
                  base_type: activity
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                unique_name: definition_workflow_1flx6VX6P91ZUhHJmH2IDqAbr2m
                base_type: workflow
                workflow_valid: false
                created_on: 2020-08-07T13:18:26Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:18:27Z
                updated_by: system
              schema:
                $ref: '#/components/schemas/Workflow'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow.
      tags:
      - Workflows
      x-accepts: application/json
    put:
      operationId: updateWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: global
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowMapping'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a workflow.
      tags:
      - Workflows
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}/export:
    get:
      operationId: exportWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                workflow:
                  unique_name: definition_workflow_1flxysOQP8K57CCL1jR7JlBgdoi
                  name: Health Check Atomic
                  title: Health Check Atomic
                  type: generic.workflow
                  base_type: workflow
                  variables:
                  - schema_id: datatype.string
                    properties:
                      value: ""
                      scope: input
                      name: service_name
                      type: datatype.string
                      is_required: false
                    unique_name: variable_workflow_1flxyrRQ3Pf1Z55c7CAMqmfdLLP
                    object_type: variable_workflow
                  properties:
                    atomic:
                      is_atomic: false
                    delete_workflow_instance: false
                    display_name: Health Check Atomic
                    favorite: false
                    target:
                      target_type: web-service.endpoint
                      target_id: definition_target_1flxytXPvWWHm2lP8toyccnGNFh
                      execute_on_workflow_target: true
                  object_type: definition_workflow
                  actions:
                  - unique_name: definition_activity_1flxytuQqBqqHFtXwfgC5qrFvlF
                    name: HTTP Request
                    title: HTTP Request
                    type: web-service.http_request
                    base_type: activity
                    properties:
                      accept: application/json
                      action_timeout: 180
                      allow_auto_redirect: true
                      content_type: application/json
                      continue_on_error_status_code: false
                      continue_on_failure: false
                      custom_headers:
                      - name: Content-type
                        value: application/vnd.spring-boot.actuator.v1+json
                      display_name: HTTP Request
                      method: GET
                      relative_url: /$workflow.definition_workflow_1flxysOQP8K57CCL1jR7JlBgdoi.input.variable_workflow_1flxyrRQ3Pf1Z55c7CAMqmfdLLP$/admin/health
                      runtime_user:
                        override_target_runtime_user: false
                        target_default: true
                      skip_execution: false
                      target:
                        override_workflow_target: false
                        use_workflow_target: true
                    object_type: definition_activity
                  categories:
                  - category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf
                targets:
                  definition_target_1flxytXPvWWHm2lP8toyccnGNFh:
                    unique_name: definition_target_1flxytXPvWWHm2lP8toyccnGNFh
                    name: Router Service
                    title: Router Service
                    type: web-service.endpoint
                    base_type: target
                    object_type: definition_target
                    properties:
                      description: Router Service
                      disable_certificate_validation: true
                      display_name: Router Service
                      host: dev-plt-aio1.lab.ciscomsx.com
                      no_runtime_user: true
                      port: -1
                      protocol: https
              schema:
                additionalProperties: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Exports a workflow.
      tags:
      - Workflows
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}/start:
    post:
      operationId: startWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      - explode: true
        in: query
        name: sync
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              input_variables:
              - id: 01HTU6QBKWSWC7cJcKEAKXek3cjLJoZGYLK
                schema_id: 01HQR50TZJK3M3d09kDOqLnYSywRwovUhAW
                properties:
                  value: ""
                  scope: input
                  name: service_name
                  type: datatype.string
                  is_required: false
                created_on: 2020-08-07T13:26:36Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:26:38Z
                updated_by: aoadmin
                unique_name: variable_workflow_1fly6IL9DWN9dCwPA6W713ef62M
            schema:
              $ref: '#/components/schemas/WorkflowStartConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HTU6T8HR4BR2l7fjYz3ByMqmFGN4Hse9P
                type: generic.workflow
                status:
                  state: created
                version: 1.0.0
                definition_id: 01HTU6QAYFTCA3epU8esiR4c2anJiZEjaVu
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                base_type: workflow
                created_by: aoadmin
                created_on: 2020-08-07T13:26:43Z
              schema:
                items:
                  $ref: '#/components/schemas/StartWorkflowResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Starts a workflow.
      tags:
      - Workflows
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}/startconfig:
    get:
      operationId: getWorkflowStartConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                input_variables:
                - id: 01HTU9YNVH2UU7MfSA3LV7IwrhUSmShOCmm
                  properties:
                    value: ""
                    scope: input
                    name: service_name
                    type: datatype.string
                    is_required: false
                  unique_name: variable_workflow_1flyc1Zeu5YyWbMXGcxEULkCPN0
                  created_by: aoadmin
                  created_on: 2020-08-07T13:30:50Z
                  updated_by: aoadmin
                  updated_on: 2020-08-07T13:30:51Z
                  schema_id: 01HQR50TZJK3M3d09kDOqLnYSywRwovUhAW
              schema:
                $ref: '#/components/schemas/WorkflowStartConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow start config.
      tags:
      - Workflows
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}/validate:
    post:
      operationId: validateWorkflow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                total_actions: 2
                total_valid: 2
                workflow_valid: true
                invalid_action_ids: null
              schema:
                $ref: '#/components/schemas/ValidateWorkflowResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Validates a workflow.
      tags:
      - Workflows
      x-accepts: application/json
  /workflow/api/v8/categories:
    post:
      operationId: createWorkflowCategory
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: Category One
              title: Category One
              description: A description of category one.
              schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
            schema:
              $ref: '#/components/schemas/WorkflowCategoryCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 01HTUHZLGD1G44uidVhVUuellFkdpoN2aP3
                name: Category One
                title: Category One
                type: basic.category
                description: A description of category one.
                owner: aoadmin
                schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
                base_type: category
                category_type: custom
                created_on: 2020-08-07T13:41:19Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:41:19Z
                updated_by: aoadmin
                unique_name: category_01HTUHZLWOMFM4mm9sgaP3yGST4UDPXWMat
              schema:
                $ref: '#/components/schemas/WorkflowCategory'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new workflow category.
      tags:
      - Workflow Categories
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/categories/list:
    get:
      operationId: getWorkflowCategoriesList
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HTUOXAQLT3B4ddnGJ3JG1Yy3eGEu8kh99
                name: Category One
                title: Category One
                type: basic.category
                description: A description of category one.
                owner: aoadmin
                schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
                base_type: category
                category_type: custom
                created_on: 2020-08-07T13:50:22Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:50:22Z
                updated_by: aoadmin
                unique_name: category_01HTUOXB3RHY61AvZ3WyHp2FJlcn64d3aR1
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowCategory'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflow categories.
      tags:
      - Workflow Categories
      x-accepts: application/json
  /workflow/api/v8/categories/{id}:
    delete:
      operationId: deleteWorkflowCategory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a workflow category.
      tags:
      - Workflow Categories
      x-accepts: application/json
    get:
      operationId: getWorkflowCategory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTUQ4UK2ON01Pxm88QXs1Q65X3bb22I0A
                name: Category One
                title: Category One
                type: basic.category
                description: A description of category one.
                owner: aoadmin
                schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
                base_type: category
                category_type: custom
                created_on: 2020-08-07T13:51:57Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:51:57Z
                updated_by: aoadmin
                unique_name: category_01HTUQ4UY5RQL38MHgO1rEb2nI57kYwMOio
              schema:
                $ref: '#/components/schemas/WorkflowCategory'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow category.
      tags:
      - Workflow Categories
      x-accepts: application/json
    put:
      operationId: updateWorkflowCategory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: New Category Name
              title: New Category Title
              description: A much better description than before.
              schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
            schema:
              $ref: '#/components/schemas/WorkflowCategoryUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTUQXABYWQ00Pe1CG88H4AU5vNgVWrOzz
                name: New Category Name
                title: New Category Title
                type: basic.category
                description: A much better description than before.
                owner: aoadmin
                schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
                base_type: category
                category_type: custom
                created_on: 2020-08-07T13:52:59Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:53:01Z
                updated_by: aoadmin
                unique_name: category_01HTUQXANSV4T7Dj4fqBqjAMsoMkYGVCLFY
              schema:
                $ref: '#/components/schemas/WorkflowCategory'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a workflow category.
      tags:
      - Workflow Categories
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/events:
    post:
      operationId: createWorkflowEvent
      requestBody:
        content:
          application/json:
            example:
              title: Event One
              description: This is not the description you are looking for.
              target_id: 01HTUSVW1CT4X66ht5sueGVrOatrKeh8wkK
              schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
              properties:
                title: Event One
                target_id: 01HTUSVW1CT4X66ht5sueGVrOatrKeh8wkK
                topic_name: TEST_TOPIC
            schema:
              $ref: '#/components/schemas/WorkflowEventCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 01HTUTXM9WJYO68qlCTXsVTsMvzwBOU3NTm
                name: Event One
                title: Event One
                type: kafka.event
                properties:
                  target_id: 01HTUSVW1CT4X66ht5sueGVrOatrKeh8wkK
                  title: Event One
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T13:56:55Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:56:55Z
                updated_by: aoadmin
                unique_name: event_01HTUTXMUZK5K4e9DkbweSjca3gD5vpiKVq
              schema:
                $ref: '#/components/schemas/WorkflowEvent'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new workflow event.
      tags:
      - Workflow Events
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/events/list:
    get:
      operationId: getWorkflowEventsList
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HTUTXM9WJYO68qlCTXsVTsMvzwBOU3NTm
                name: Event One
                title: Event One
                type: kafka.event
                properties:
                  target_id: 01HTUSVW1CT4X66ht5sueGVrOatrKeh8wkK
                  title: Event One
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T13:56:55Z
                created_by: aoadmin
                updated_on: 2020-08-07T13:56:55Z
                updated_by: aoadmin
                unique_name: event_01HTUTXMUZK5K4e9DkbweSjca3gD5vpiKVq
              - id: 01HTV20GBCN0U42AUaJriRfalzhqatVmAsO
                name: Event Two
                title: Event Two
                type: kafka.event
                properties:
                  target_id: 01HTV201F5UPB7Zvq80qNEcvlj1x0jYjRl1
                  title: Event Two
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T14:07:28Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:07:28Z
                updated_by: aoadmin
                unique_name: event_01HTV20GWV12S2RMHdzw8v0FQApd0RIsdHJ
              - id: 01HTV20MCM3BS6ZkhyC6bdLEc5B8HWe1whS
                name: Event Three
                title: Event Three
                type: kafka.event
                properties:
                  target_id: 01HTV201F5UPB7Zvq80qNEcvlj1x0jYjRl1
                  title: Event Three
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T14:07:28Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:07:28Z
                updated_by: aoadmin
                unique_name: event_01HTV20MVVVRU29seKlnaJlQovPpaKFJLVm
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowEvent'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflow events.
      tags:
      - Workflow Events
      x-accepts: application/json
  /workflow/api/v8/events/{id}:
    delete:
      operationId: deleteWorkflowEvent
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a workflow event.
      tags:
      - Workflow Events
      x-accepts: application/json
    get:
      operationId: getWorkflowEvent
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTV4I8YRWDG35I3IL4q3ek3kGOLiVSHLL
                name: Event One
                title: Event One
                type: kafka.event
                properties:
                  target_id: 01HTV4HQQDNXX37YDZ6gp7n1T1aVHd3WgI5
                  title: Event One
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T14:10:43Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:10:43Z
                updated_by: aoadmin
                unique_name: event_01HTV4I9L6CBI5ujNxAybYv2G2nz8WlAu7c
              schema:
                $ref: '#/components/schemas/WorkflowEvent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow event.
      tags:
      - Workflow Events
      x-accepts: application/json
    put:
      operationId: updateWorkflowEvent
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              title: New Title
              description: All singing, all dancing event description.
              target_id: 01HTV56F9BGYF7TPAc3p1WaP5ASSxPjvWkO
              schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
              properties:
                title: New Title
                target_id: 01HTV56F9BGYF7TPAc3p1WaP5ASSxPjvWkO
                topic_name: TEST_TOPIC
            schema:
              $ref: '#/components/schemas/WorkflowEventUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTV56VQQZUC4mWipHYh796PL3wOrxtRaD
                name: New Title
                title: New Title
                type: kafka.event
                properties:
                  target_id: 01HTV56F9BGYF7TPAc3p1WaP5ASSxPjvWkO
                  title: New Title
                  topic_name: TEST_TOPIC
                owner: aoadmin
                base_type: event
                schema_id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                created_on: 2020-08-07T14:11:37Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:11:38Z
                updated_by: aoadmin
                unique_name: event_01HTV56WB51FN58TvJUqNktaErVKaADwtN7
              schema:
                $ref: '#/components/schemas/WorkflowEvent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a workflow event.
      tags:
      - Workflow Events
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/workflows/{id}/instances/list:
    get:
      operationId: getWorkflowInstancesList
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      - explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: dateTo
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HTVA5WUVLV30XX6289x6F5Uw6i6fHxQ9f
                name: Health Check Atomic
                version: 1.0.0
                type: generic.workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    execute_on_workflow_target: true
                    target_id: 01HTVA4PZGZ9P4Bt32dTETiQJ7S2qJ0LdYZ
                    target_type: 01HQR507N9OPR0y96F1u2i6rdLwOPvMc7Ub
                status:
                  state: failed
                owner: aoadmin
                definition_id: 01HTVA4EWNF712PFaDpfGaIWmjvC014C3b5
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                base_type: workflow
                started_on: 2020-08-07T14:18:07Z
                ended_on: 2020-08-07T14:18:07Z
                created_on: 2020-08-07T14:18:06Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:18:07Z
                updated_by: aoadmin
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowInstance'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflow instances.
      tags:
      - Workflow Instances
      x-accepts: application/json
  /workflow/api/v8/workflows/instances/{id}:
    delete:
      operationId: deleteWorkflowInstance
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                deleted_child_workflow_instance_ids: null
              schema:
                $ref: '#/components/schemas/WorkflowInstanceDeleteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a workflow instance.
      tags:
      - Workflow Instances
      x-accepts: application/json
    get:
      operationId: getWorkflowInstance
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTVFR054LQ51nAr7jwPe8AiM7atRITAkS
                name: Health Check Atomic
                version: 1.0.0
                type: generic.workflow
                properties:
                  atomic:
                    is_atomic: false
                  delete_workflow_instance: false
                  display_name: Health Check Atomic
                  favorite: false
                  target:
                    execute_on_workflow_target: true
                    target_id: 01HTVFPQO55C44B5cEs1Pm6RPSh0wfKqQ0w
                    target_type: 01HQR507N9OPR0y96F1u2i6rdLwOPvMc7Ub
                actions:
                - id: 01HTVFR07JOP33cYLy4zqZB8TiAIoOebkBy
                  name: HTTP Request
                  title: HTTP Request
                  type: web-service.http_request
                  status:
                    state: failed
                  workflow_id: 01HTVFR054LQ51nAr7jwPe8AiM7atRITAkS
                  definition_id: 01HTVFQ8HCPZD7mxQWMo9aRK4SN8F2zaZ3j
                  base_type: activity
                variables:
                - id: 01HTVFPGTKONV65tDGJ7ZFNthVlpPmbfD1b
                  properties:
                    value: ""
                    scope: input
                    name: service_name
                    type: datatype.string
                    is_required: false
                  unique_name: variable_workflow_1fm5F8Z51fI98LESfVpRNN0BceN
                  created_by: aoadmin
                  created_on: 2020-08-07T14:25:21Z
                  updated_by: aoadmin
                  updated_on: 2020-08-07T14:25:22Z
                  schema_id: 01HQR50TZJK3M3d09kDOqLnYSywRwovUhAW
                  object_type: ""
                status:
                  state: failed
                owner: aoadmin
                definition_id: 01HTVFPFGZY5N7GeJgQQDnmN1el4l2v5uk8
                schema_id: 01HQR4UAFGD6B74Rdv2X7VPk4HiiI559TOg
                base_type: workflow
                started_on: 2020-08-07T14:25:24Z
                ended_on: 2020-08-07T14:25:25Z
                created_on: 2020-08-07T14:25:24Z
                created_by: aoadmin
                updated_on: 2020-08-07T14:25:25Z
                updated_by: aoadmin
              schema:
                $ref: '#/components/schemas/WorkflowInstance'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow instance.
      tags:
      - Workflow Instances
      x-accepts: application/json
  /workflow/api/v8/workflows/instances/{id}/cancel:
    post:
      operationId: cancelWorkflowInstance
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInstance'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Cancels a workflow instance.
      tags:
      - Workflow Instances
      x-accepts: application/json
  /workflow/api/v8/workflows/instances/{id}/actions/{actionId}:
    get:
      operationId: getWorkflowInstanceAction
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      - explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HTVKBEMJ03T6AXYI2enM1fHaqcbc5CTXC
                name: HTTP Request
                title: HTTP Request
                type: web-service.http_request
                properties:
                  accept: application/json
                  action_timeout: 180
                  allow_auto_redirect: true
                  content_type: application/json
                  continue_on_error_status_code: false
                  continue_on_failure: false
                  custom_headers:
                  - name: Content-type
                    value: application/vnd.spring-boot.actuator.v1+json
                  disable_certificate_validation: true
                  display_name: HTTP Request
                  host: dev-plt-aio1.lab.ciscomsx.com
                  method: GET
                  no_runtime_user: true
                  port: -1
                  protocol: https
                  relative_url: //admin/health
                  runtime_user:
                    override_target_runtime_user: false
                    target_default: true
                  skip_execution: false
                  target:
                    override_workflow_target: false
                    use_workflow_target: true
                status:
                  state: failed
                output:
                  error:
                    code: "404"
                    message: "action execution  errored for type web-service.http_request\
                      \ err:code:404 message::<html>\r\n<head><title>404 Not Found</title></head>\r\
                      \n<body>\r\n<center><h1>404 Not Found</h1></center>\r\n<hr><center>nginx</center>\r\
                      \n</body>\r\n</html>\r\n"
                  response:
                    elapsed_time: 0.235917361
                    end_time: 2020-08-07T14:31:22.97397746Z
                    start_time: 2020-08-07T14:31:22.738060099Z
                    succeeded: false
                workflow_id: 01HTVKBEKMJJF3YhZeIIt6O4GkrP9Fyo7gd
                definition_id: 01HTVKAN0L9R23bhwYdXqHUeb4KAFAP4IKP
                schema_id: 01HQR5TKR3L0262ioJhatOKRw8sjtMfaTpY
                adapter_id: 01HQR4XDDJP841AL5bYoKqfH9LDFRIV7ndt
                base_type: activity
                started_by: aoadmin
                started_on: 2020-08-07T14:31:22Z
                ended_on: 2020-08-07T14:31:22Z
              schema:
                $ref: '#/components/schemas/WorkflowAction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow instance action.
      tags:
      - Workflow Instances
      x-accepts: application/json
  /workflow/api/v8/schemas/list:
    get:
      operationId: getWorkflowSchemasList
      parameters:
      - explode: true
        in: query
        name: baseType
        required: true
        schema:
          default: category
          type: string
        style: form
      - explode: true
        in: query
        name: schemaType
        required: false
        schema:
          default: view
          type: string
        style: form
      - explode: true
        in: query
        name: variableType
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HQR51GF9PYP4qc0yoinLF7qPwG5RRw5y4
                name: AMQP Event
                title: AMQP Event
                description: AMQP Event
                type: amqp.event
                version: 1.0.0
                invisible: false
                owner: system
                inherits: generic.server_event
                base_type: event
                created_on: 2020-08-03T22:25:21Z
                created_by: system
                updated_on: 2020-08-03T22:25:21Z
                updated_by: system
                access_meta:
                  adapter:
                    id: 01HQR4W5OQF586jo6uMoPzD7jmoKZASTDHc
                    type: adapter.amqp
                    version: 1.0.0
                  targets:
                  - id: 01HQR4XL0F2XR2a2gY4xVFgwyzoVaX39eHm
                    type: amqp.endpoint
                    version: 1.0.0
              - id: 01HQR51LCBPSZ2s8uQvretFwX9giX7kNPET
                name: Approval Task Event
                title: Approval Task Event
                description: Approval Task Event
                type: approval_task.event
                version: 1.0.0
                invisible: false
                owner: system
                inherits: generic.event
                base_type: event
                created_on: 2020-08-03T22:25:21Z
                created_by: system
                updated_on: 2020-08-03T22:25:21Z
                updated_by: system
              - id: 01HQR51OODY3N2NzytzL14JaOx2DTZwDAcU
                name: Email Event
                title: Email Event
                description: Email Event
                type: email.event
                version: 1.0.0
                invisible: false
                owner: system
                inherits: generic.server_event
                base_type: event
                created_on: 2020-08-03T22:25:21Z
                created_by: system
                updated_on: 2020-08-03T22:25:21Z
                updated_by: system
                access_meta:
                  adapter:
                    id: 01HQR4WI5PA612XK9BYQrKjG0iYP8M7IOyT
                    type: adapter.email
                    version: 1.0.0
                  targets:
                  - id: 01HQR4Z92JPJH53OTRG6YialYEOwS3yuVgN
                    type: email.pop3_endpoint
                    version: 1.0.0
                  - id: 01HQR4YMFB4VX0FTcEvmXQatvnF4UMwtAGC
                    type: email.imap_endpoint
                    version: 1.0.0
              - id: 01HQR51UJFSML2CKLOFnnYq7YgGQIgzmvHx
                name: Kafka Event
                title: Kafka Event
                description: Kafka Event
                type: kafka.event
                version: 1.0.0
                invisible: false
                owner: system
                inherits: generic.server_event
                base_type: event
                created_on: 2020-08-03T22:25:22Z
                created_by: system
                updated_on: 2020-08-03T22:25:22Z
                updated_by: system
                access_meta:
                  adapter:
                    id: 01HQR4WU9U9AY1ZDytSm3OHx6vaXyFalWr2
                    type: adapter.kafka
                    version: 1.0.0
                  targets:
                  - id: 01HQR4YUO8XZF4QKY5qtM47OyHLoepbmx43
                    type: kafka.endpoint
                    version: 1.0.0
              - id: 01HQR520APZM96G6JkrnZctwy3tMtVfojPy
                name: Webhook Event
                title: Webhook Event
                description: Webhook Event
                type: webhook.event
                version: 1.0.0
                invisible: false
                owner: system
                inherits: generic.event
                base_type: event
                created_on: 2020-08-03T22:25:22Z
                created_by: system
                updated_on: 2020-08-03T22:25:22Z
                updated_by: system
                access_meta: {}
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowSchema'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflow schemas.
      tags:
      - Workflow Schemas
      x-accepts: application/json
  /workflow/api/v8/schemas/{id}:
    get:
      operationId: getWorkflowSchema
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      - explode: true
        in: query
        name: schemaType
        required: false
        schema:
          default: view
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                view_schema:
                  name: Generic Category
                  title: Generic Category
                  description: Generic Category
                  type: basic.category
                  version: 1.0.0
                  invisible: false
                  owner: system
                  schema_id: 01HQR4T0U6YBE7USwHQiUhXogAACos2iac6
                  base_type: category
                  created_on: 2020-08-03T22:25:02Z
                  created_by: system
                  updated_on: 2020-08-03T22:25:02Z
                  updated_by: system
                  property_schema:
                    properties:
                      description:
                        component: textarea
                        maxLength: 1024
                        minLength: 0
                        position: 2
                        section: General
                        title: Description
                        type: string
                      name:
                        lhv_invisible: formOnly
                        maxLength: 64
                        minLength: 0
                        section: General
                        title: Name
                        type: string
                      title:
                        maxLength: 64
                        minLength: 1
                        position: 1
                        section: General
                        title: Display Name
                        type: string
                    required:
                    - title
                  view_config:
                    section_order:
                    - General
              schema:
                $ref: '#/components/schemas/WorkflowSchemaByTypeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow schema.
      tags:
      - Workflow Schemas
      x-accepts: application/json
  /workflow/api/v8/targets:
    post:
      operationId: createWorkflowTarget
      requestBody:
        content:
          application/json:
            example:
              name: MSX Kafka
              description: A most excellent description.
              title: Target One
              type: kafka.endpoint
              properties:
                disable_certificate_validation: false
                display_name: MSX Kafka
                host: kafka.vms.svc.cluster.local
                no_runtime_user: true
                port: 9092
                ssl_enable: false
            schema:
              $ref: '#/components/schemas/WorkflowTargetCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 01HQR8KEERONC2rTTJbNGCO0k2pTKSCwlAT
                name: MSX Kafka
                type: kafka.endpoint
                properties:
                  disable_certificate_validation: false
                  display_name: MSX Kafka
                  host: kafka.vms.svc.cluster.local
                  no_runtime_user: true
                  port: 9092
                  ssl_enable: false
                owner: aoadmin
                valid: true
                schema_id: 01HQR4YUO8XZF4QKY5qtM47OyHLoepbmx43
                adapter_id: 01HQR4WT4TZ0X3NzZLl7wGkfR7wKsAzPbLq
                base_type: target
                created_on: 2020-08-03T22:29:57Z
                created_by: aoadmin
                updated_on: 2020-08-03T22:29:57Z
                updated_by: aoadmin
                def_access_meta:
                  is_internal: false
                unique_name: definition_target_01AN9H4AFTF5C2l6FseuNnivO2IIO8gZXbN
              schema:
                $ref: '#/components/schemas/WorkflowTarget'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a new workflow target.
      tags:
      - Workflow Targets
      x-contentType: application/json
      x-accepts: application/json
  /workflow/api/v8/targets/list:
    get:
      operationId: getWorkflowTargetsList
      parameters:
      - explode: true
        in: query
        name: internal
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 01HQR8KEERONC2rTTJbNGCO0k2pTKSCwlAT
                name: MSX Kafka
                type: kafka.endpoint
                properties:
                  disable_certificate_validation: false
                  display_name: MSX Kafka
                  host: kafka.vms.svc.cluster.local
                  no_runtime_user: true
                  port: 9092
                  ssl_enable: false
                owner: aoadmin
                valid: true
                schema_id: 01HQR4YUO8XZF4QKY5qtM47OyHLoepbmx43
                adapter_id: 01HQR4WT4TZ0X3NzZLl7wGkfR7wKsAzPbLq
                base_type: target
                created_on: 2020-08-03T22:29:57Z
                created_by: aoadmin
                updated_on: 2020-08-03T22:29:57Z
                updated_by: aoadmin
                def_access_meta:
                  is_internal: false
                unique_name: definition_target_01AN9H4AFTF5C2l6FseuNnivO2IIO8gZXbN
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTarget'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a list of workflow targets.
      tags:
      - Workflow Targets
      x-accepts: application/json
  /workflow/api/v8/targets/{id}:
    delete:
      operationId: deleteWorkflowTarget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a workflow target.
      tags:
      - Workflow Targets
      x-accepts: application/json
    get:
      operationId: getWorkflowTarget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HQR8KEERONC2rTTJbNGCO0k2pTKSCwlAT
                name: MSX Kafka
                type: kafka.endpoint
                properties:
                  disable_certificate_validation: false
                  display_name: MSX Kafka
                  host: kafka.vms.svc.cluster.local
                  no_runtime_user: true
                  port: 9092
                  ssl_enable: false
                owner: aoadmin
                valid: true
                schema_id: 01HQR4YUO8XZF4QKY5qtM47OyHLoepbmx43
                adapter_id: 01HQR4WT4TZ0X3NzZLl7wGkfR7wKsAzPbLq
                base_type: target
                created_on: 2020-08-03T22:29:57Z
                created_by: aoadmin
                updated_on: 2020-08-03T22:29:57Z
                updated_by: aoadmin
                def_access_meta:
                  is_internal: false
                unique_name: definition_target_01AN9H4AFTF5C2l6FseuNnivO2IIO8gZXbN
              schema:
                $ref: '#/components/schemas/WorkflowTarget'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a workflow target.
      tags:
      - Workflow Targets
      x-accepts: application/json
    put:
      operationId: updateWorkflowTarget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: ksuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: MSX Kafka
              description: A most excellent description.
              type: kafka.endpoint
              properties:
                disable_certificate_validation: false
                display_name: MSX Kafka
                host: kafka.vms.svc.cluster.local
                no_runtime_user: true
                port: 9092
                ssl_enable: false
            schema:
              $ref: '#/components/schemas/WorkflowTargetUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 01HQR8KEERONC2rTTJbNGCO0k2pTKSCwlAT
                name: MSX Kafka
                type: kafka.endpoint
                properties:
                  disable_certificate_validation: false
                  display_name: MSX Kafka
                  host: kafka.vms.svc.cluster.local
                  no_runtime_user: true
                  port: 9092
                  ssl_enable: false
                owner: aoadmin
                valid: true
                schema_id: 01HQR4YUO8XZF4QKY5qtM47OyHLoepbmx43
                adapter_id: 01HQR4WT4TZ0X3NzZLl7wGkfR7wKsAzPbLq
                base_type: target
                created_on: 2020-08-03T22:29:57Z
                created_by: aoadmin
                updated_on: 2020-08-03T22:29:57Z
                updated_by: aoadmin
                def_access_meta:
                  is_internal: false
                unique_name: definition_target_01AN9H4AFTF5C2l6FseuNnivO2IIO8gZXbN
              schema:
                $ref: '#/components/schemas/WorkflowTarget'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a workflow target.
      tags:
      - Workflow Targets
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v1/config:
    get:
      operationId: getConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: API to get configuration of encloud service.
      tags:
      - Incident Configurations
      x-accepts: application/json
    patch:
      operationId: patchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentConfigPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: API to patch configure encloud service
      tags:
      - Incident Configurations
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentConfigUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: API to configure encloud service.
      tags:
      - Incident Configurations
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v1/incidents:
    get:
      operationId: getIncidents
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subcategory
        required: false
        schema:
          type: string
        style: form
      - description: New|InProgress|OnHold|Resolved|Canceled
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Critical|Low|High|Moderate|Planning
        explode: true
        in: query
        name: priority
        required: false
        schema:
          type: string
        style: form
      - description: High|Medium|Low
        explode: true
        in: query
        name: severity
        required: false
        schema:
          type: string
        style: form
      - description: category|subcategory|priority|severity|state
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ASC/DESC
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Incidents by filter.
      tags:
      - Incidents
      x-accepts: application/json
    post:
      operationId: createIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Create a new Incident.
      tags:
      - Incidents
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v1/incidents/{id}:
    delete:
      operationId: deleteIncident
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes an incident.
      tags:
      - Incidents
      x-accepts: application/json
    get:
      operationId: getIncident
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get incident details.
      tags:
      - Incidents
      x-accepts: application/json
    put:
      operationId: updateIncident
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates an incident.
      tags:
      - Incidents
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v1/incidents/{id}/cancel:
    patch:
      operationId: cancelIncident
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCancel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Cancels an incident.
      tags:
      - Incidents
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v8/configurations:
    get:
      operationId: getServiceNowConfigurationsPage
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowConfigurationsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a ServiceNow configurations.
      tags:
      - Incident Configurations
      x-accepts: application/json
    post:
      operationId: createServiceNowConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowConfigurationCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowConfiguration'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a ServiceNow configuration.
      tags:
      - Incident Configurations
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v8/configurations/{id}:
    delete:
      description: Delete service now configuration, only if no associated entities
        exists.
      operationId: deleteServiceNowConfiguration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a ServiceNow configuration.
      tags:
      - Incident Configurations
      x-accepts: application/json
    get:
      operationId: getServiceNowConfiguration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowConfiguration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a ServiceNow configuration.
      tags:
      - Incident Configurations
      x-accepts: application/json
  /incident/api/v8/changerequests:
    get:
      operationId: getChangeRequestsPage
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeRequestsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered list of change requests.
      tags:
      - Incident Change Requests
      x-accepts: application/json
    post:
      operationId: createChangeRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRequestCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeRequest'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Create a change request.
      tags:
      - Incident Change Requests
      x-contentType: application/json
      x-accepts: application/json
  /incident/api/v8/changerequests/{id}:
    delete:
      operationId: deleteChangeRequest
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Required for bi-directional scenario
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a change request.
      tags:
      - Incident Change Requests
      x-accepts: application/json
    get:
      operationId: getChangeRequest
      parameters:
      - description: Change Request Number  CHG0030022
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Required for bi-directional scenario
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a change request.
      tags:
      - Incident Change Requests
      x-accepts: application/json
    put:
      description: Update change requests. Returns not found, if passed in tenant's
        serviceNow instance does not hold the record.
      operationId: updateChangeRequest
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRequestUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a change request.
      tags:
      - Incident Change Requests
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/events:
    get:
      description: Needs VIEW_EVENTS permission to view the billing events.
      operationId: getEventsPage
      parameters:
      - explode: true
        in: query
        name: fromDate
        required: false
        schema:
          example: 2020-09-18T18:37:33.81Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: toDate
        required: false
        schema:
          example: 2020-09-19T18:37:33.81Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subtype
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingEventsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieve a page of events for tenant.
      tags:
      - Billing Events
      x-accepts: application/json
  /billing/api/v8/events/{id}:
    get:
      description: Needs VIEW_EVENTS permission to get a billing event.
      operationId: getEvent
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingEvent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get an Event.
      tags:
      - Billing Events
      x-accepts: application/json
  /billing/api/v8/prices:
    get:
      description: Needs VIEW_PRICES permission to view the pricing details.
      operationId: getPricesPage
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subtype
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPricesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieve a page of prices.
      tags:
      - Billing Prices
      x-accepts: application/json
    post:
      description: Needs MANAGE_PRICES permission to allow for the creation of a price.
      operationId: addPrice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingPriceCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPrice'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Add price for tenant and event type.
      tags:
      - Billing Prices
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/prices/{id}:
    delete:
      description: Needs MANAGE_PRICES permission to delete a price.
      operationId: deletePrice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Delete a price.
      tags:
      - Billing Prices
      x-accepts: application/json
    get:
      description: Needs VIEW_PRICES permission to get pricing detail.
      operationId: getPrice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPrice'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get a price.
      tags:
      - Billing Prices
      x-accepts: application/json
    put:
      description: Needs MANAGE_PRICES permission to update a pricing detail.
      operationId: updatePrice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingPriceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPrice'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update price for an event type and tenant.
      tags:
      - Billing Prices
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/cycles:
    get:
      description: Needs VIEW_BILLINGCYCLE permission to view the billing cycle details.
      operationId: getBillingCyclesPage
      parameters:
      - explode: true
        in: query
        name: nextBilledOn
        required: false
        schema:
          example: 2020-09-18T18:37:33.81Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCyclesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieve a page of billing cycles.
      tags:
      - Billing Cycles
      x-accepts: application/json
    post:
      description: Needs MANAGE_BILLINGCYCLE permission to allow for the creation
        a billing cycle.
      operationId: addBillingCycle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCycleCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCycle'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Add a billing cycle.
      tags:
      - Billing Cycles
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/cycles/{id}:
    delete:
      description: Needs MANAGE_BILLINGCYCLE permission to delete a billing cycle.
      operationId: deleteBillingCycle
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Delete a billing cycle.
      tags:
      - Billing Cycles
      x-accepts: application/json
    get:
      description: Needs VIEW_BILLINGCYCLE permission to get billing cycle detail.
      operationId: getBillingCycle
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCycle'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get a billing cycle.
      tags:
      - Billing Cycles
      x-accepts: application/json
    put:
      description: Needs MANAGE_BILLINGCYCLE permission to update a billing cycle
        detail.
      operationId: updateBillingCycle
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCycleUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCycle'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Update billing cycle for an event type and tenant.
      tags:
      - Billing Cycles
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/cycles/process:
    post:
      description: Needs MANAGE_BILLINGCYCLE permission to allow for the creation
        a billing cycle.
      operationId: processBillingCycle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCycleProcess'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCycleProcessAccepted'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Process a billing cycle.
      tags:
      - Billing Cycles
      x-contentType: application/json
      x-accepts: application/json
  /billing/api/v8/events/costs:
    get:
      description: Needs VIEW_COSTS permission to view cost details.
      operationId: getCostSummary
      parameters:
      - explode: true
        in: query
        name: fromDate
        required: false
        schema:
          example: 2020-09-18T18:37:33.81Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: toDate
        required: false
        schema:
          example: 2020-09-19T18:37:33.81Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: groupBy
        required: false
        schema:
          example: type, subtype or service
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCostsReport'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieve a summary for tenant cost.
      tags:
      - Billing Events
      x-accepts: application/json
  /licensing/api/v8/configuration:
    get:
      operationId: getSmartAccountConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartAccountConfiguration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a smart account configuration.
      tags:
      - Licensing Configurations
      x-accepts: application/json
    post:
      operationId: createSmartAccountConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartAccountConfigurationCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartAccountConfiguration'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Creates a smart account configuration.
      tags:
      - Licensing Configurations
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateSmartAccountConfiguration
      requestBody:
        content:
          application/json:
            example:
              baseAuthUrl: https://cloudsso.cisco.com/as/token.oauth2
              contentType: application/x-www-form-urlencoded
              grantType: client_credentials
              clientId: client_id
              clientSecret: client_secret
            schema:
              $ref: '#/components/schemas/SmartAccountConfigurationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartAccountConfiguration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a smart account configuration.
      tags:
      - Licensing Configurations
      x-contentType: application/json
      x-accepts: application/json
  /licensing/api/v8/accounts/smart/list:
    get:
      operationId: getUserAccountsList
      parameters:
      - description: User Id
        explode: true
        in: query
        name: userId
        required: true
        schema:
          example: bdavis
          type: string
        style: form
      - description: Smart Account domain
        explode: true
        in: query
        name: domain
        required: false
        schema:
          example: abhtest001.cisco.com
          type: string
        style: form
      - description: Role Name
        explode: true
        in: query
        name: roleName
        required: false
        schema:
          example: AccountAdmin
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SmartAccountType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartUserAccounts'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered page of smart accounts.
      tags:
      - Licensing Accounts
      x-accepts: application/json
  /licensing/api/v8/licensing/api/v8/licenses/list:
    get:
      operationId: getLicensesList
      parameters:
      - description: Smart Account Identifier
        explode: true
        in: query
        name: smartAccountId
        required: true
        schema:
          example: "295183"
          type: string
        style: form
      - description: Virtual Account Identifier
        explode: true
        in: query
        name: virtualAccountId
        required: true
        schema:
          example: "123123"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LicenseSummary'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered list of licenses.
      tags:
      - Licensing Licenses
      x-accepts: application/json
  /vulnerability/api/v8/vulnerabilities/ingests:
    get:
      operationId: getIngestVulnerabilitiesTasksPage
      parameters:
      - description: Start date for date range filter on validation execution date.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          example: 2020-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - description: End date for date range filter on validation execution date.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          example: 2021-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityIngestPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered page of ingest tasks.
      tags:
      - Vulnerabilities
      x-accepts: application/json
    post:
      operationId: ingestVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityFeed'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityIngestion'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Ingests a CVE JSON feed into the Vulnerability Service datastore.
      tags:
      - Vulnerabilities
      x-contentType: application/json
      x-accepts: application/json
  /vulnerability/api/v8/vulnerabilities:
    get:
      operationId: getVulnerabilitiesPage
      parameters:
      - description: CVE identifer (https://www.cvedetails.com/cve-help.php) to filter
          by.
        explode: true
        in: query
        name: cveId
        required: false
        schema:
          example: CVE-2021-0202
          type: string
        style: form
      - description: Vendor identifier (as defined in NIST's CPE dictionary) to filter
          by.
        explode: true
        in: query
        name: vendor
        required: false
        schema:
          example: cisco
          type: string
        style: form
      - description: Product identifier (as defined in NIST's CPE dictionary) to filter
          by.
        explode: true
        in: query
        name: product
        required: false
        schema:
          example: ios_xe
          type: string
        style: form
      - description: Product version (as defined in NIST's CPE dictionary) filter
          to filter by.
        explode: true
        in: query
        name: version
        required: false
        schema:
          example: "12.3"
          type: string
        style: form
      - description: A CVSS severity level (https://nvd.nist.gov/vuln-metrics/cvss)
          to filter by.
        explode: true
        in: query
        name: severity
        required: false
        schema:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        style: form
      - description: Start date for date range filter on CVE published date.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          example: 2020-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - description: End date for date range filter on CVE published date.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          example: 2021-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - description: Year CVE published filter.
        explode: true
        in: query
        name: year
        required: false
        schema:
          example: 2019
          maximum: 9999
          minimum: 1970
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: publishedOn
          enum:
          - publishedOn
          - modifiedOn
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilitiesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered page of vulnerabilities.
      tags:
      - Vulnerabilities
      x-accepts: application/json
  /vulnerability/api/v8/vulnerabilities/registrations:
    get:
      operationId: getRegisteredProductVersionPage
      parameters:
      - description: Product identifier (as defined in NIST's CPE dictionary) to filter
          by.
        explode: true
        in: query
        name: product
        required: false
        schema:
          example: ios_xe
          type: string
        style: form
      - description: Product version (as defined in NIST's CPE dictionary) filter
          to filter by.
        explode: true
        in: query
        name: version
        required: false
        schema:
          example: "12.3"
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilitiesRegistrationPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered page of registered products / versions.
      tags:
      - Registration
      x-accepts: application/json
    post:
      operationId: registerProductVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityRegistrationCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityRegistration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Register a product / verison combination for vulnerability inspection.
      tags:
      - Registration
      x-contentType: application/json
      x-accepts: application/json
  /vulnerability/api/v8/vulnerabilities/registrations/{id}:
    delete:
      operationId: deleteRegisteredProductVersion
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Delete a registration.
      tags:
      - Registration
      x-accepts: application/json
  /vulnerability/api/v8/vulnerabilities/validations:
    get:
      operationId: getValidateProductVersionPage
      parameters:
      - description: Start date for date range filter on validation execution date.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          example: 2020-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - description: End date for date range filter on validation execution date.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          example: 2021-01-15T18:15:00Z
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityValidationPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a filtered page of validations.
      tags:
      - Validation
      x-accepts: application/json
    post:
      operationId: validateProductVersion
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityValidation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Validate registered product / verison combinations for vulnerabilities.
      tags:
      - Validation
      x-accepts: application/json
  /template/api/v8/templates:
    get:
      operationId: getTemplatesPage
      parameters:
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: calculateTotalItems
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: External ID to filter templates by.
        explode: true
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      - description: Name of service to filter templates by.
        explode: true
        in: query
        name: service
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            format: ^[-_0-9a-zA-Z]{1,128}$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of templates.
      tags:
      - Templates
      x-accepts: application/json
    post:
      operationId: importTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreate'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Imports a template.
      tags:
      - Templates
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/{id}:
    delete:
      operationId: deleteTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a template.
      tags:
      - Templates
      x-accepts: application/json
    get:
      operationId: getTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a template by id.
      tags:
      - Templates
      x-accepts: application/json
    patch:
      operationId: updateTemplateStatus
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatePatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a template status.
      tags:
      - Templates
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/{id}/history:
    get:
      operationId: getTemplateHistory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Template'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a template history by id.
      tags:
      - Templates
      x-accepts: application/json
  /template/api/v8/templates/{id}/assignments/add:
    post:
      operationId: batchAssignTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: inheritable
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: uuid
                type: string
              minLength: 1
              type: array
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateAssignmentResponse'
                type: array
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Assigns a template to one or more tenants.
      tags:
      - Template Assignments
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/{id}/assignments/remove:
    post:
      operationId: batchUnassignTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: uuid
                type: string
              minLength: 1
              type: array
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateAssignmentResponse'
                type: array
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Unassigns a template from one or more tenants.
      tags:
      - Template Assignments
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/assignments:
    get:
      operationId: getTemplateAssignmentsPage
      parameters:
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: calculateTotalItems
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAssignmentsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns a page of template assignments.
      tags:
      - Template Assignments
      x-accepts: application/json
  /template/api/v8/templates/assignments/{id}:
    get:
      operationId: getAssignment
      parameters:
      - description: ID of template assignment record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAssignment'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Gets a template assignment.
      tags:
      - Template Assignments
      x-accepts: application/json
    patch:
      operationId: updateAssignmentStatus
      parameters:
      - description: ID of template assignment record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAssignmentStatusPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAssignment'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates a template assignment status.
      tags:
      - Template Assignments
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/assignments/{id}/history:
    get:
      operationId: getAssignmentHistory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateAssignment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Gets a template assignment history.
      tags:
      - Template Assignments
      x-accepts: application/json
  /template/api/v8/templates/{id}/applications:
    post:
      operationId: applyTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateApplicationCreate'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateApplication'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Applies a template to a target.
      tags:
      - Template Applications
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/applications:
    get:
      operationId: getTemplateApplicationsPage
      parameters:
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: targetId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: targetType
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          example: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: true
        schema:
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: calculateTotalItems
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdOn
          enum:
          - applicationId
          - modifiedOn
          - createdOn
          - templateId
          - status
          - statusDetails
          - targetId
          - targetType
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateApplicationsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get a page of template applications.
      tags:
      - Template Applications
      x-accepts: application/json
  /template/api/v8/templates/applications/{id}:
    delete:
      operationId: deleteTemplateApplication
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Deletes a template application.
      tags:
      - Template Applications
      x-accepts: application/json
    get:
      operationId: getTemplateApplication
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateApplication'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Gets a template application.
      tags:
      - Template Applications
      x-accepts: application/json
    patch:
      operationId: updateApplicationStatus
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateApplicationStatusPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateApplication'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Updates an application status.
      tags:
      - Template Applications
      x-contentType: application/json
      x-accepts: application/json
  /template/api/v8/templates/applications/{id}/history:
    get:
      operationId: getTemplateApplicationHistory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateApplication'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Gets a template application history.
      tags:
      - Template Applications
      x-accepts: application/json
components:
  parameters:
    page:
      explode: true
      in: query
      name: page
      required: true
      schema:
        example: 0
        format: int32
        minimum: 0
        type: integer
      style: form
    pageSize:
      explode: true
      in: query
      name: pageSize
      required: true
      schema:
        example: 10
        format: int32
        maximum: 1000
        minimum: 1
        type: integer
      style: form
    sortBy:
      explode: true
      in: query
      name: sortBy
      required: false
      schema:
        example: name
        type: string
      style: form
    sortOrder:
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
      style: form
    workflowPage:
      explode: true
      in: query
      name: page
      required: true
      schema:
        example: 0
        format: int32
        minimum: 0
        type: integer
      style: form
    workflowPageSize:
      explode: true
      in: query
      name: pageSize
      required: true
      schema:
        example: 10
        format: int32
        maximum: 100
        minimum: 1
        type: integer
      style: form
    calculateTotalItems:
      explode: true
      in: query
      name: calculateTotalItems
      required: false
      schema:
        nullable: true
        type: boolean
      style: form
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  responses:
    "204":
      description: No Content
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthenticated
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    "409":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict
    "412":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Precondition Failed
    "422":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unprocessable Entity
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
  schemas:
    Error:
      properties:
        code:
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
      type: object
    NameValue:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    PageHeader:
      properties:
        page:
          format: int32
          readOnly: true
          type: integer
        pageSize:
          format: int32
          readOnly: true
          type: integer
        totalItems:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        hasNext:
          nullable: true
          readOnly: true
          type: boolean
        hasPrevious:
          nullable: true
          readOnly: true
          type: boolean
        sortBy:
          nullable: true
          readOnly: true
          type: string
        sortOrder:
          enum:
          - asc
          - desc
          - null
          nullable: true
          readOnly: true
          type: string
      type: object
    Device:
      allOf:
      - $ref: '#/components/schemas/Device_allOf'
      - $ref: '#/components/schemas/DeviceCreate'
    DeviceCreate:
      allOf:
      - $ref: '#/components/schemas/DeviceCreate_allOf'
      - $ref: '#/components/schemas/DeviceUpdate'
    DeviceUpdate:
      allOf:
      - $ref: '#/components/schemas/DeviceUpdate_allOf'
      - $ref: '#/components/schemas/DevicePatch'
    DevicePatch:
      example:
        name: name
        model: model
        subType: subType
        serialKey: serialKey
        type: type
        version: version
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        model:
          maxLength: 128
          minLength: 1
          type: string
        type:
          maxLength: 128
          minLength: 1
          type: string
        subType:
          maxLength: 128
          nullable: true
          type: string
        serialKey:
          maxLength: 128
          nullable: true
          type: string
        version:
          maxLength: 128
          nullable: true
          type: string
        complianceState:
          $ref: '#/components/schemas/DeviceComplianceState'
      type: object
    DeviceComplianceState:
      enum:
      - COMPLIANT
      - NOT_COMPLIANT
      - NOT_APPLICABLE
      - UNKNOWN
      type: string
    DeviceVulnerabilityState:
      enum:
      - VULNERABLE
      - NOT_VULNERABLE
      - NOT_APPLICABLE
      - UNKNOWN
      type: string
    DevicesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/DevicesPage_allOf'
    DeviceTemplateHistory:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        instanceId: instanceId
        statusError: statusError
        templateParams:
        - name: name
          value: value
        - name: name
          value: value
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceId: deviceId
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: Applied
      properties:
        id:
          format: uuid
          type: string
        deviceId:
          type: string
        instanceId:
          type: string
        templateId:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        status:
          enum:
          - Applied
          - Applying
          - Apply Failed
          - Detached
          - Detaching
          - Detach Failed
          type: string
        statusError:
          type: string
        templateParams:
          items:
            $ref: '#/components/schemas/NameValue'
          type: array
        lastUpdated:
          format: date-time
          type: string
      type: object
    DeviceTemplateAttachRequest:
      example:
        templateDetails:
        - templateId: e7e20070-9d67-40a8-a21d-f655606b7421
          templateParams:
          - name: name1
            value: value10461b304-da18-42bd-a48b-502d8e5166a4
          - name: name2
            value: value217c83dd3-f732-4a36-ae27-d86599c7f513
        - templateId: 87710499-3431-4c53-8ce2-c28170c261e7
          templateParams:
          - name: name1
            value: value1fc9ca565-8a74-401a-9dce-5fe35d203150
          - name: name2
            value: value2bfde5275-8d32-4e2c-b023-7b987cb9a1ff
      properties:
        templateDetails:
          items:
            $ref: '#/components/schemas/DeviceTemplateDetails'
          type: array
      type: object
    DeviceTemplateBatchAttachRequest:
      example:
        templateDetails:
        - templateId: e7e20070-9d67-40a8-a21d-f655606b7421
          templateParams:
          - name: name1
            value: value10461b304-da18-42bd-a48b-502d8e5166a4
          - name: name2
            value: value217c83dd3-f732-4a36-ae27-d86599c7f513
        - templateId: 87710499-3431-4c53-8ce2-c28170c261e7
          templateParams:
          - name: name1
            value: value1fc9ca565-8a74-401a-9dce-5fe35d203150
          - name: name2
            value: value2bfde5275-8d32-4e2c-b023-7b987cb9a1ff
        deviceIds:
        - 87710499-3431-4c53-8ce2-c28170c261e7
        - 48698499-3431-4c53-8ce2-c28170c261e7
      properties:
        deviceIds:
          items:
            type: string
          type: array
        templateDetails:
          items:
            $ref: '#/components/schemas/DeviceTemplateDetails'
          type: array
      type: object
    DeviceTemplateBatchAttachResponse:
      items:
        $ref: '#/components/schemas/DeviceTemplateHistorySummary'
      type: array
    DeviceTemplateHistorySummary:
      properties:
        deviceId:
          type: string
        httpStatus:
          type: string
        deviceTemplateHistoryUrl:
          format: url
          type: string
      type: object
    DeviceTemplateDetails:
      properties:
        templateId:
          format: uuid
          type: string
        templateParams:
          items:
            $ref: '#/components/schemas/NameValue'
          type: array
      type: object
    DeviceTemplateUpdateDetails:
      example:
        templateHistoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        templateParams:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        templateHistoryId:
          format: uuid
          type: string
        templateParams:
          items:
            $ref: '#/components/schemas/NameValue'
          type: array
      type: object
    DeviceTemplateUpdateRequest:
      example:
        templateDetails:
        - templateHistoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          templateParams:
          - name: name
            value: value
          - name: name
            value: value
        - templateHistoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          templateParams:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        templateDetails:
          items:
            $ref: '#/components/schemas/DeviceTemplateUpdateDetails'
          type: array
      type: object
    ManageChangeRequestPending:
      properties:
        changeRequestId:
          type: string
        changeRequestUrl:
          format: url
          type: string
      type: object
    DeviceTemplate:
      example:
        serviceType: serviceType
        isLatestVersion: true
        configContent: configContent
        deviceModels:
        - deviceModels
        - deviceModels
        description: description
        templateParameterValidators:
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdOn: 2000-01-23T04:56:07.000+00:00
        version: version
        tags:
        - tags
        - tags
        templateStandard: templateStandard
        name: name
        tenantAccess:
          global: true
          tenantIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceProvider: resourceProvider
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        userId:
          format: uuid
          readOnly: true
          type: string
        createdOn:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        isLatestVersion:
          nullable: true
          type: boolean
        serviceType:
          type: string
        deviceModels:
          items:
            type: string
          nullable: true
          type: array
        configContent:
          nullable: true
          type: string
        resourceProvider:
          nullable: true
          type: string
        templateStandard:
          type: string
        tenantAccess:
          $ref: '#/components/schemas/DeviceTemplateAccess'
        templateParameterValidators:
          items:
            $ref: '#/components/schemas/TemplateParameterValidator'
          nullable: true
          type: array
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DeviceTemplateCreate:
      example:
        serviceType: serviceType
        configContent: configContent
        deviceModels:
        - deviceModels
        - deviceModels
        templateStandard: templateStandard
        name: name
        tenantAccess:
          global: true
          tenantIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        resourceProvider: resourceProvider
        templateParameterValidators:
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
        version: version
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        serviceType:
          type: string
        deviceModels:
          items:
            type: string
          nullable: true
          type: array
        configContent:
          minLength: 1
          type: string
        resourceProvider:
          type: string
        templateStandard:
          type: string
        tenantAccess:
          $ref: '#/components/schemas/DeviceTemplateAccess'
        templateParameterValidators:
          items:
            $ref: '#/components/schemas/TemplateParameterValidator'
          type: array
        tags:
          items:
            maxLength: 128
            minLength: 1
            type: string
          nullable: true
          type: array
      required:
      - configContent
      - name
      - resourceProvider
      - serviceType
      type: object
    DeviceTemplateVersionCreate:
      example:
        configContent: configContent
        name: name
        templateParameterValidators:
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
        - allowedValues:
          - allowedValues
          - allowedValues
          displayType: displayType
          hintText: hintText
          name: name
          label: label
          type: type
          toolTipText: toolTipText
      properties:
        name:
          type: string
        configContent:
          minLength: 1
          type: string
        templateParameterValidators:
          items:
            $ref: '#/components/schemas/TemplateParameterValidator'
          type: array
      required:
      - configContent
      - name
      type: object
    DeviceTemplateAccess:
      example:
        global: true
        tenantIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        tenantIds:
          description: List of tenants to grant access. Mutually exclusive from global
            flag field.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        global:
          description: Determines if the template is globally accessible. Mutually
            exclusive from tenant list field.
          nullable: true
          type: boolean
      type: object
    TemplateParameterValidator:
      description: It's metadata about a parameter for use in the UI.  A name to put
        on the field, a type so it can be validated (e.g. an IP address or an integer
        value, or list of allowed values for an enumeration/list).
      example:
        allowedValues:
        - allowedValues
        - allowedValues
        displayType: displayType
        hintText: hintText
        name: name
        label: label
        type: type
        toolTipText: toolTipText
      properties:
        name:
          nullable: false
          pattern: ^([\w@#$%^*-=+\s'"\.]{0,255})$
          type: string
        hintText:
          nullable: false
          pattern: ^([\w@#$%^*-=+\s'"\.]{0,255})$
          type: string
        label:
          nullable: false
          pattern: ^([\w@#$%^*-=+\s'"\.]{0,255})$
          type: string
        type:
          nullable: false
          pattern: ^Integer|String|Password|IPAddress$
          type: string
        displayType:
          nullable: false
          pattern: ^Input|Select|Textarea$
          type: string
        allowedValues:
          items:
            type: string
          type: array
        toolTipText:
          type: string
      type: object
    DeviceTemplateAccessResponse:
      example:
        successListOfTenants:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        global: true
        failureListOfTenants:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        failureListOfTenants:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        global:
          nullable: true
          type: boolean
        successListOfTenants:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    Service:
      allOf:
      - $ref: '#/components/schemas/Service_allOf'
      - $ref: '#/components/schemas/ServiceUpdate'
    ServiceUpdate:
      example:
        definitionAttributes:
          key: ""
        attributes:
          key: ""
        status:
          key: ""
      properties:
        status:
          additionalProperties: {}
          type: object
        definitionAttributes:
          additionalProperties: {}
          type: object
        attributes:
          additionalProperties: {}
          type: object
      type: object
    ServicesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/ServicesPage_allOf'
    LegacyServiceOrder:
      example:
        serviceType: serviceType
        schedule:
          method: method
          absolute:
            dateTime: 2017-08-01 13:56:44 -0700
          relative:
            scheduleIn: 2h 10m 30s
        transactionUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payload:
          offer:
            key: offer
          cost:
            key: cost
          serviceDowngrade:
            key: ""
          provider:
            key: provider
          service:
            key: service
          subscriptionName: subscriptionName
          subscriptionId: subscriptionId
          user:
            key: user
          subscriptionDetail:
            offerSelection:
              key: ""
            siteCount: '{}'
            dealerCode: dealerCode
            configuration:
              key: configuration
            priceDetail:
              key: ""
            termsAndConditionId: termsAndConditionId
            sites:
            - operationalStatus: operationalStatus
              address:
                country: country
                address2: address2
                city: city
                address1: address1
                name: name
                company: company
                postCode: postCode
                state: state
                display_name: display_name
              devices:
              - deviceOnboarding:
                  deviceInstanceId: deviceInstanceId
                  deviceOnboardInformation:
                    key: ""
                  managed: true
                  tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  deviceModel: deviceModel
                  deviceName: deviceName
                  deviceOnboardingType: deviceOnboardingType
                name: name
                model: model
                type: type
                deviceAttributes:
                  key: ""
                deviceId: deviceId
                delete: true
              - deviceOnboarding:
                  deviceInstanceId: deviceInstanceId
                  deviceOnboardInformation:
                    key: ""
                  managed: true
                  tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  deviceModel: deviceModel
                  deviceName: deviceName
                  deviceOnboardingType: deviceOnboardingType
                name: name
                model: model
                type: type
                deviceAttributes:
                  key: ""
                deviceId: deviceId
                delete: true
              displayName: displayName
              siteAttributes:
                key: ""
              siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              siteName: siteName
              delete: true
            - operationalStatus: operationalStatus
              address:
                country: country
                address2: address2
                city: city
                address1: address1
                name: name
                company: company
                postCode: postCode
                state: state
                display_name: display_name
              devices:
              - deviceOnboarding:
                  deviceInstanceId: deviceInstanceId
                  deviceOnboardInformation:
                    key: ""
                  managed: true
                  tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  deviceModel: deviceModel
                  deviceName: deviceName
                  deviceOnboardingType: deviceOnboardingType
                name: name
                model: model
                type: type
                deviceAttributes:
                  key: ""
                deviceId: deviceId
                delete: true
              - deviceOnboarding:
                  deviceInstanceId: deviceInstanceId
                  deviceOnboardInformation:
                    key: ""
                  managed: true
                  tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  deviceModel: deviceModel
                  deviceName: deviceName
                  deviceOnboardingType: deviceOnboardingType
                name: name
                model: model
                type: type
                deviceAttributes:
                  key: ""
                deviceId: deviceId
                delete: true
              displayName: displayName
              siteAttributes:
                key: ""
              siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              siteName: siteName
              delete: true
            serviceInstanceDetail:
              key: ""
            pricePlanId: pricePlanId
          tenant:
            key: tenant
          nsoResponseTypes:
            deleteOperation: deleteOperation
            updateOperation: updateOperation
            createOperation: createOperation
        messageId: messageId
        action: action
        type: type
      properties:
        messageId:
          type: string
        type:
          type: string
        serviceType:
          type: string
        action:
          type: string
        schedule:
          $ref: '#/components/schemas/LegacyScheduleConfig'
        payload:
          $ref: '#/components/schemas/LegacyServiceOrderDetail'
        transactionUUID:
          format: uuid
          type: string
      type: object
    LegacyScheduleConfig:
      example:
        method: method
        absolute:
          dateTime: 2017-08-01 13:56:44 -0700
        relative:
          scheduleIn: 2h 10m 30s
      properties:
        method:
          type: string
        relative:
          $ref: '#/components/schemas/LegacyRelativeConfig'
        absolute:
          $ref: '#/components/schemas/LegacyAbsoluteConfig'
      type: object
    LegacyRelativeConfig:
      example:
        scheduleIn: 2h 10m 30s
      properties:
        scheduleIn:
          example: 2h 10m 30s
          type: string
      type: object
    LegacyAbsoluteConfig:
      example:
        dateTime: 2017-08-01 13:56:44 -0700
      properties:
        dateTime:
          example: 2017-08-01 13:56:44 -0700
          type: string
      type: object
    LegacyServiceOrderDetail:
      example:
        offer:
          key: offer
        cost:
          key: cost
        serviceDowngrade:
          key: ""
        provider:
          key: provider
        service:
          key: service
        subscriptionName: subscriptionName
        subscriptionId: subscriptionId
        user:
          key: user
        subscriptionDetail:
          offerSelection:
            key: ""
          siteCount: '{}'
          dealerCode: dealerCode
          configuration:
            key: configuration
          priceDetail:
            key: ""
          termsAndConditionId: termsAndConditionId
          sites:
          - operationalStatus: operationalStatus
            address:
              country: country
              address2: address2
              city: city
              address1: address1
              name: name
              company: company
              postCode: postCode
              state: state
              display_name: display_name
            devices:
            - deviceOnboarding:
                deviceInstanceId: deviceInstanceId
                deviceOnboardInformation:
                  key: ""
                managed: true
                tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                deviceModel: deviceModel
                deviceName: deviceName
                deviceOnboardingType: deviceOnboardingType
              name: name
              model: model
              type: type
              deviceAttributes:
                key: ""
              deviceId: deviceId
              delete: true
            - deviceOnboarding:
                deviceInstanceId: deviceInstanceId
                deviceOnboardInformation:
                  key: ""
                managed: true
                tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                deviceModel: deviceModel
                deviceName: deviceName
                deviceOnboardingType: deviceOnboardingType
              name: name
              model: model
              type: type
              deviceAttributes:
                key: ""
              deviceId: deviceId
              delete: true
            displayName: displayName
            siteAttributes:
              key: ""
            siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            siteName: siteName
            delete: true
          - operationalStatus: operationalStatus
            address:
              country: country
              address2: address2
              city: city
              address1: address1
              name: name
              company: company
              postCode: postCode
              state: state
              display_name: display_name
            devices:
            - deviceOnboarding:
                deviceInstanceId: deviceInstanceId
                deviceOnboardInformation:
                  key: ""
                managed: true
                tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                deviceModel: deviceModel
                deviceName: deviceName
                deviceOnboardingType: deviceOnboardingType
              name: name
              model: model
              type: type
              deviceAttributes:
                key: ""
              deviceId: deviceId
              delete: true
            - deviceOnboarding:
                deviceInstanceId: deviceInstanceId
                deviceOnboardInformation:
                  key: ""
                managed: true
                tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                deviceModel: deviceModel
                deviceName: deviceName
                deviceOnboardingType: deviceOnboardingType
              name: name
              model: model
              type: type
              deviceAttributes:
                key: ""
              deviceId: deviceId
              delete: true
            displayName: displayName
            siteAttributes:
              key: ""
            siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            siteName: siteName
            delete: true
          serviceInstanceDetail:
            key: ""
          pricePlanId: pricePlanId
        tenant:
          key: tenant
        nsoResponseTypes:
          deleteOperation: deleteOperation
          updateOperation: updateOperation
          createOperation: createOperation
      properties:
        service:
          additionalProperties:
            type: string
          type: object
        tenant:
          additionalProperties:
            type: string
          type: object
        user:
          additionalProperties:
            type: string
          type: object
        provider:
          additionalProperties:
            type: string
          type: object
        offer:
          additionalProperties:
            type: string
          type: object
        cost:
          additionalProperties:
            type: string
          type: object
        subscriptionId:
          type: string
        subscriptionName:
          type: string
        subscriptionDetail:
          $ref: '#/components/schemas/LegacySubscriptionDetail'
        serviceDowngrade:
          additionalProperties: {}
          type: object
        nsoResponseTypes:
          $ref: '#/components/schemas/LegacyNsoResponseTypes'
      type: object
    LegacySubscriptionDetail:
      example:
        offerSelection:
          key: ""
        siteCount: '{}'
        dealerCode: dealerCode
        configuration:
          key: configuration
        priceDetail:
          key: ""
        termsAndConditionId: termsAndConditionId
        sites:
        - operationalStatus: operationalStatus
          address:
            country: country
            address2: address2
            city: city
            address1: address1
            name: name
            company: company
            postCode: postCode
            state: state
            display_name: display_name
          devices:
          - deviceOnboarding:
              deviceInstanceId: deviceInstanceId
              deviceOnboardInformation:
                key: ""
              managed: true
              tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              deviceModel: deviceModel
              deviceName: deviceName
              deviceOnboardingType: deviceOnboardingType
            name: name
            model: model
            type: type
            deviceAttributes:
              key: ""
            deviceId: deviceId
            delete: true
          - deviceOnboarding:
              deviceInstanceId: deviceInstanceId
              deviceOnboardInformation:
                key: ""
              managed: true
              tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              deviceModel: deviceModel
              deviceName: deviceName
              deviceOnboardingType: deviceOnboardingType
            name: name
            model: model
            type: type
            deviceAttributes:
              key: ""
            deviceId: deviceId
            delete: true
          displayName: displayName
          siteAttributes:
            key: ""
          siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          siteName: siteName
          delete: true
        - operationalStatus: operationalStatus
          address:
            country: country
            address2: address2
            city: city
            address1: address1
            name: name
            company: company
            postCode: postCode
            state: state
            display_name: display_name
          devices:
          - deviceOnboarding:
              deviceInstanceId: deviceInstanceId
              deviceOnboardInformation:
                key: ""
              managed: true
              tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              deviceModel: deviceModel
              deviceName: deviceName
              deviceOnboardingType: deviceOnboardingType
            name: name
            model: model
            type: type
            deviceAttributes:
              key: ""
            deviceId: deviceId
            delete: true
          - deviceOnboarding:
              deviceInstanceId: deviceInstanceId
              deviceOnboardInformation:
                key: ""
              managed: true
              tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              deviceModel: deviceModel
              deviceName: deviceName
              deviceOnboardingType: deviceOnboardingType
            name: name
            model: model
            type: type
            deviceAttributes:
              key: ""
            deviceId: deviceId
            delete: true
          displayName: displayName
          siteAttributes:
            key: ""
          siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          siteName: siteName
          delete: true
        serviceInstanceDetail:
          key: ""
        pricePlanId: pricePlanId
      properties:
        siteCount:
          type: object
        sites:
          items:
            $ref: '#/components/schemas/LegacySite'
          type: array
        offerSelection:
          additionalProperties: {}
          type: object
        serviceInstanceDetail:
          additionalProperties: {}
          type: object
        priceDetail:
          additionalProperties: {}
          type: object
        dealerCode:
          type: string
        pricePlanId:
          type: string
        termsAndConditionId:
          type: string
        configuration:
          additionalProperties:
            type: string
          type: object
      type: object
    LegacyNsoResponseTypes:
      example:
        deleteOperation: deleteOperation
        updateOperation: updateOperation
        createOperation: createOperation
      properties:
        createOperation:
          type: string
        updateOperation:
          type: string
        deleteOperation:
          type: string
      type: object
    LegacySite:
      example:
        operationalStatus: operationalStatus
        address:
          country: country
          address2: address2
          city: city
          address1: address1
          name: name
          company: company
          postCode: postCode
          state: state
          display_name: display_name
        devices:
        - deviceOnboarding:
            deviceInstanceId: deviceInstanceId
            deviceOnboardInformation:
              key: ""
            managed: true
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deviceModel: deviceModel
            deviceName: deviceName
            deviceOnboardingType: deviceOnboardingType
          name: name
          model: model
          type: type
          deviceAttributes:
            key: ""
          deviceId: deviceId
          delete: true
        - deviceOnboarding:
            deviceInstanceId: deviceInstanceId
            deviceOnboardInformation:
              key: ""
            managed: true
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deviceModel: deviceModel
            deviceName: deviceName
            deviceOnboardingType: deviceOnboardingType
          name: name
          model: model
          type: type
          deviceAttributes:
            key: ""
          deviceId: deviceId
          delete: true
        displayName: displayName
        siteAttributes:
          key: ""
        siteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        siteName: siteName
        delete: true
      properties:
        siteId:
          format: uuid
          type: string
        siteName:
          type: string
        displayName:
          type: string
        address:
          $ref: '#/components/schemas/LegacyAddress'
        devices:
          items:
            $ref: '#/components/schemas/LegacySiteDevice'
          type: array
        siteAttributes:
          additionalProperties: {}
          type: object
        delete:
          type: boolean
        operationalStatus:
          type: string
      required:
      - address
      - siteId
      - siteName
      type: object
    LegacyAddress:
      example:
        country: country
        address2: address2
        city: city
        address1: address1
        name: name
        company: company
        postCode: postCode
        state: state
        display_name: display_name
      properties:
        name:
          type: string
        display_name:
          type: string
        company:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postCode:
          type: string
      type: object
    LegacySiteDevice:
      example:
        deviceOnboarding:
          deviceInstanceId: deviceInstanceId
          deviceOnboardInformation:
            key: ""
          managed: true
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deviceModel: deviceModel
          deviceName: deviceName
          deviceOnboardingType: deviceOnboardingType
        name: name
        model: model
        type: type
        deviceAttributes:
          key: ""
        deviceId: deviceId
        delete: true
      properties:
        deviceId:
          type: string
        name:
          type: string
        model:
          type: string
        type:
          type: string
        deviceAttributes:
          additionalProperties: {}
          type: object
        deviceOnboarding:
          $ref: '#/components/schemas/LegacySiteDeviceOnboard'
        delete:
          type: boolean
      required:
      - name
      type: object
    LegacySiteDeviceOnboard:
      example:
        deviceInstanceId: deviceInstanceId
        deviceOnboardInformation:
          key: ""
        managed: true
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceModel: deviceModel
        deviceName: deviceName
        deviceOnboardingType: deviceOnboardingType
      properties:
        deviceInstanceId:
          type: string
        tenantId:
          format: uuid
          type: string
        deviceName:
          minLength: 1
          type: string
        managed:
          default: true
          type: boolean
        deviceModel:
          type: string
        deviceOnboardingType:
          type: string
        deviceOnboardInformation:
          additionalProperties: {}
          type: object
      type: object
    LegacyServiceOrderResponse:
      example:
        transactionUUID: transactionUUID
        serviceInstanceIds:
        - serviceInstanceIds
        - serviceInstanceIds
        devices:
        - '{}'
        - '{}'
        sites:
        - '{}'
        - '{}'
        message: message
        subscriptionId: subscriptionId
        url: url
        status: status
      properties:
        message:
          type: string
        transactionUUID:
          format: uud
          type: string
        subscriptionId:
          type: string
        url:
          type: string
        status:
          type: string
        serviceInstanceIds:
          items:
            type: string
          type: array
        sites:
          items:
            type: object
          type: array
        devices:
          items:
            type: object
          type: array
      type: object
    Site:
      example:
        image: image
        address:
          country: country
          formattedAddress: formattedAddress
          address2: address2
          city: city
          address1: address1
          name: name
          company: company
          postCode: postCode
          state: state
        devices:
        - serviceType: serviceType
          serviceId: serviceId
          deviceId: deviceId
        - serviceType: serviceType
          serviceId: serviceId
          deviceId: deviceId
        description: description
        type: type
        createdOn: 2000-01-23T04:56:07.000+00:00
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        serviceIds:
        - serviceIds
        - serviceIds
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        contact:
          phone: phone
          name: name
          email: email
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: attributes
        location:
          latitude: -75.5850925717018
          longitude: 36.988422590534526
        modifiedBy: modifiedBy
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status:
          severity: severity
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          name: unknown
          type: unknown
          lastUpdatedMessage: lastUpdatedMessage
          value: unknown
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        tenantId:
          format: uuid
          type: string
        parentId:
          format: uuid
          nullable: true
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        type:
          maxLength: 128
          nullable: true
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
        description:
          maxLength: 256
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/SiteAddress'
        contact:
          $ref: '#/components/schemas/SiteContact'
        image:
          maxLength: 40000
          nullable: true
          type: string
        attributes:
          additionalProperties:
            type: string
          nullable: true
          type: object
        devices:
          items:
            $ref: '#/components/schemas/DeviceSummary'
          type: array
        serviceIds:
          items:
            type: string
          type: array
        location:
          $ref: '#/components/schemas/SiteLocation'
        status:
          $ref: '#/components/schemas/SiteStatus'
        createdOn:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        modifiedBy:
          readOnly: true
          type: string
      type: object
    DeviceSummary:
      example:
        serviceType: serviceType
        serviceId: serviceId
        deviceId: deviceId
      properties:
        deviceId:
          type: string
        serviceId:
          type: string
        serviceType:
          type: string
      type: object
    SiteStatus:
      example:
        severity: severity
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        name: unknown
        type: unknown
        lastUpdatedMessage: lastUpdatedMessage
        value: unknown
      properties:
        type:
          default: unknown
          maxLength: 128
          minLength: 1
          type: string
        name:
          default: unknown
          maxLength: 128
          minLength: 1
          type: string
        value:
          default: unknown
          maxLength: 128
          minLength: 1
          type: string
        severity:
          maxLength: 128
          minLength: 1
          type: string
        lastUpdated:
          format: date-time
          type: string
        lastUpdatedMessage:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - lastUpdatedMessage
      - name
      - severity
      - type
      - value
      type: object
    SiteCreate:
      allOf:
      - $ref: '#/components/schemas/SiteCreate_allOf'
      - $ref: '#/components/schemas/SiteUpdate'
    SiteUpdate:
      example:
        image: image
        address:
          country: country
          formattedAddress: formattedAddress
          address2: address2
          city: city
          address1: address1
          name: name
          company: company
          postCode: postCode
          state: state
        contact:
          phone: phone
          name: name
          email: email
        name: name
        description: description
        location:
          latitude: -75.5850925717018
          longitude: 36.988422590534526
        attributes:
          key: attributes
        type: type
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        parentId:
          format: uuid
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          nullable: true
          type: string
        type:
          maxLength: 128
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
        address:
          $ref: '#/components/schemas/SiteAddress'
        contact:
          $ref: '#/components/schemas/SiteContact'
        location:
          $ref: '#/components/schemas/SiteLocation'
        image:
          maxLength: 40000
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
      required:
      - name
      type: object
    SiteAddress:
      example:
        country: country
        formattedAddress: formattedAddress
        address2: address2
        city: city
        address1: address1
        name: name
        company: company
        postCode: postCode
        state: state
      nullable: true
      properties:
        name:
          type: string
        company:
          type: string
        formattedAddress:
          maxLength: 256
          type: string
        address1:
          deprecated: true
          type: string
        address2:
          deprecated: true
          type: string
        city:
          deprecated: true
          type: string
        state:
          deprecated: true
          type: string
        country:
          deprecated: true
          type: string
        postCode:
          deprecated: true
          type: string
      type: object
    SiteContact:
      example:
        phone: phone
        name: name
        email: email
      nullable: true
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          format: email
          type: string
      required:
      - name
      - phone
      type: object
    SiteLocation:
      example:
        latitude: -75.5850925717018
        longitude: 36.988422590534526
      nullable: true
      properties:
        latitude:
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          format: double
          maximum: 180
          minimum: -180
          type: number
      required:
      - latitude
      - longitude
      type: object
    SitesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/SitesPage_allOf'
    ResourceType:
      enum:
      - service
      - device
      type: string
    ResourceStatus:
      enum:
      - up
      - down
      - unknown
      type: string
    ResourceHealth:
      example:
        description: description
        id: id
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ResourceType'
        status:
          $ref: '#/components/schemas/ResourceStatus'
        description:
          maxLength: 256
          nullable: true
          type: string
      required:
      - id
      - status
      - type
      type: object
    GenericEventSeverity:
      enum:
      - CRITICAL
      - POOR
      - FAIR
      - GOOD
      - UNKNOWN
      type: string
    GenericEvent:
      allOf:
      - $ref: '#/components/schemas/GenericEvent_allOf'
      - $ref: '#/components/schemas/GenericEventCreate'
    GenericEventCreate:
      example:
        trace:
          traceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          spanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        security:
          clientId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantName: tenantName
          providerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          originalUsername: originalUsername
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          username: username
        keywords: keyword_1 keyword_2 keyword_3
        subtype: subtype
        service: service
        description: description
        details:
          key: details
      properties:
        severity:
          $ref: '#/components/schemas/GenericEventSeverity'
        subtype:
          maxLength: 128
          minLength: 1
          nullable: false
          type: string
        service:
          description: Service that generated the event
          maxLength: 128
          minLength: 1
          nullable: false
          type: string
        keywords:
          description: Space separated list of keywords to be used for search
          example: keyword_1 keyword_2 keyword_3
          maxLength: 512
          minLength: 1
          nullable: false
          type: string
        details:
          additionalProperties:
            type: string
          nullable: false
          type: object
        trace:
          $ref: '#/components/schemas/GenericEventTrace'
        security:
          $ref: '#/components/schemas/GenericEventSecurity'
        description:
          maxLength: 512
          minLength: 1
          nullable: false
          type: string
      type: object
    GenericEventSecurity:
      example:
        clientId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tenantName: tenantName
        providerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        originalUsername: originalUsername
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        username: username
      nullable: false
      properties:
        clientId:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        username:
          type: string
        tenantId:
          format: uuid
          type: string
        tenantName:
          type: string
        providerId:
          format: uuid
          type: string
        originalUsername:
          type: string
      type: object
    GenericEventTrace:
      example:
        traceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        spanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: false
      properties:
        traceId:
          format: uuid
          type: string
        spanId:
          format: uuid
          type: string
        parentId:
          format: uuid
          type: string
      type: object
    Product:
      allOf:
      - $ref: '#/components/schemas/Product_allOf'
      - $ref: '#/components/schemas/ProductCreate'
    ProductCreate:
      allOf:
      - $ref: '#/components/schemas/ProductUpdate'
    ProductUpdate:
      example:
        image: image
        multipleInstanceAllowed: true
        configuration:
          key: configuration
        hasChildren: true
        serviceExtensions:
        - serviceType: serviceType
          serviceInstanceXPath: serviceInstanceXPath
          possibleXPathLocations:
          - possibleXPathLocations
          - possibleXPathLocations
        - serviceType: serviceType
          serviceInstanceXPath: serviceInstanceXPath
          possibleXPathLocations:
          - possibleXPathLocations
          - possibleXPathLocations
        displayOrder: 6
        orderLimit: 1
        description: description
        active: true
        externalId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uiConfig:
          bannerImage: bannerImage
          links:
          - address: address
            label: label
            type: type
            target: target
          - address: address
            label: label
            type: type
            target: target
        label: label
        version: 0
        parentId: parentId
        tags:
        - tags
        - tags
        price: price
        serviceConfigQueryRootXPaths:
        - serviceConfigQueryRootXPaths
        - serviceConfigQueryRootXPaths
        name: name
        options:
        - hidden: true
          dynamicData: true
          childElements:
          - null
          - null
          stepSize: 2
          description: description
          pricingAtttributes:
            additionalPeriodicPrice: additionalPeriodicPrice
            periodicPrice: periodicPrice
            includedQuantity: 7
            oneTimePrice: oneTimePrice
            unitOfMeasure: unitOfMeasure
            timePeriod: timePeriod
            additionalQuantity: 9
            additionalOneTimePrice: additionalOneTimePrice
          section: section
          type: type
          mandatory: true
          minValue: 5
          inputType: inputType
          value: value
          allowedValues:
          - key: ""
          - key: ""
          maxValue: 5
          minLimit: minLimit
          label: label
          billable: true
          component: component
          parentName: parentName
          maxLimit: maxLimit
          hint: hint
          valueList:
          - '{}'
          - '{}'
          name: name
          header: header
          allowedOptionValues:
          - allowedOptionValues
          - allowedOptionValues
          supported: true
        - hidden: true
          dynamicData: true
          childElements:
          - null
          - null
          stepSize: 2
          description: description
          pricingAtttributes:
            additionalPeriodicPrice: additionalPeriodicPrice
            periodicPrice: periodicPrice
            includedQuantity: 7
            oneTimePrice: oneTimePrice
            unitOfMeasure: unitOfMeasure
            timePeriod: timePeriod
            additionalQuantity: 9
            additionalOneTimePrice: additionalOneTimePrice
          section: section
          type: type
          mandatory: true
          minValue: 5
          inputType: inputType
          value: value
          allowedValues:
          - key: ""
          - key: ""
          maxValue: 5
          minLimit: minLimit
          label: label
          billable: true
          component: component
          parentName: parentName
          maxLimit: maxLimit
          hint: hint
          valueList:
          - '{}'
          - '{}'
          name: name
          header: header
          allowedOptionValues:
          - allowedOptionValues
          - allowedOptionValues
          supported: true
        isResource: true
        slmUiConfig:
          resources:
          - href: href
            type: type
          - href: href
            type: type
          type: type
        properties:
        - hidden: true
          dynamicData: true
          childElements:
          - null
          - null
          stepSize: 2
          description: description
          pricingAtttributes:
            additionalPeriodicPrice: additionalPeriodicPrice
            periodicPrice: periodicPrice
            includedQuantity: 7
            oneTimePrice: oneTimePrice
            unitOfMeasure: unitOfMeasure
            timePeriod: timePeriod
            additionalQuantity: 9
            additionalOneTimePrice: additionalOneTimePrice
          section: section
          type: type
          mandatory: true
          minValue: 5
          inputType: inputType
          value: value
          allowedValues:
          - key: ""
          - key: ""
          maxValue: 5
          minLimit: minLimit
          label: label
          billable: true
          component: component
          parentName: parentName
          maxLimit: maxLimit
          hint: hint
          valueList:
          - '{}'
          - '{}'
          name: name
          header: header
          allowedOptionValues:
          - allowedOptionValues
          - allowedOptionValues
          supported: true
        - hidden: true
          dynamicData: true
          childElements:
          - null
          - null
          stepSize: 2
          description: description
          pricingAtttributes:
            additionalPeriodicPrice: additionalPeriodicPrice
            periodicPrice: periodicPrice
            includedQuantity: 7
            oneTimePrice: oneTimePrice
            unitOfMeasure: unitOfMeasure
            timePeriod: timePeriod
            additionalQuantity: 9
            additionalOneTimePrice: additionalOneTimePrice
          section: section
          type: type
          mandatory: true
          minValue: 5
          inputType: inputType
          value: value
          allowedValues:
          - key: ""
          - key: ""
          maxValue: 5
          minLimit: minLimit
          label: label
          billable: true
          component: component
          parentName: parentName
          maxLimit: maxLimit
          hint: hint
          valueList:
          - '{}'
          - '{}'
          name: name
          header: header
          allowedOptionValues:
          - allowedOptionValues
          - allowedOptionValues
          supported: true
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        label:
          maxLength: 128
          minLength: 1
          type: string
        version:
          type: integer
        description:
          maxLength: 512
          minLength: 1
          type: string
        image:
          type: string
        multipleInstanceAllowed:
          type: boolean
        price:
          type: string
        displayOrder:
          type: integer
        active:
          type: boolean
        orderLimit:
          type: integer
        options:
          items:
            $ref: '#/components/schemas/ServiceElement'
          type: array
        properties:
          items:
            $ref: '#/components/schemas/ServiceElement'
          nullable: true
          type: array
        configuration:
          additionalProperties:
            type: string
          type: object
        isResource:
          type: boolean
        hasChildren:
          type: boolean
        parentId:
          format: UUID
          type: string
        serviceExtensions:
          items:
            $ref: '#/components/schemas/NSOConfigDataXPath'
          type: array
        serviceConfigQueryRootXPaths:
          items:
            type: string
          type: array
        uiConfig:
          $ref: '#/components/schemas/ServiceUIConfig'
        slmUiConfig:
          $ref: '#/components/schemas/ServiceSLMUIConfig'
        externalId:
          format: uuid
          nullable: true
          type: string
        tags:
          items:
            maxLength: 64
            minLength: 1
            type: string
          nullable: true
          type: array
      required:
      - configuration
      - description
      - hasChildren
      - image
      - isResource
      - label
      - name
      - options
      - serviceId
      - version
      type: object
    ServiceElement:
      example:
        hidden: true
        dynamicData: true
        childElements:
        - null
        - null
        stepSize: 2
        description: description
        pricingAtttributes:
          additionalPeriodicPrice: additionalPeriodicPrice
          periodicPrice: periodicPrice
          includedQuantity: 7
          oneTimePrice: oneTimePrice
          unitOfMeasure: unitOfMeasure
          timePeriod: timePeriod
          additionalQuantity: 9
          additionalOneTimePrice: additionalOneTimePrice
        section: section
        type: type
        mandatory: true
        minValue: 5
        inputType: inputType
        value: value
        allowedValues:
        - key: ""
        - key: ""
        maxValue: 5
        minLimit: minLimit
        label: label
        billable: true
        component: component
        parentName: parentName
        maxLimit: maxLimit
        hint: hint
        valueList:
        - '{}'
        - '{}'
        name: name
        header: header
        allowedOptionValues:
        - allowedOptionValues
        - allowedOptionValues
        supported: true
      properties:
        name:
          type: string
        label:
          type: string
        header:
          type: string
        description:
          type: string
        hint:
          type: string
        inputType:
          type: string
        type:
          type: string
        component:
          type: string
        maxLimit:
          type: string
        minLimit:
          type: string
        value:
          type: string
        valueList:
          items:
            type: object
          nullable: true
          type: array
        allowedOptionValues:
          items:
            type: string
          type: array
        allowedValues:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        mandatory:
          type: boolean
        section:
          type: string
        billable:
          type: boolean
        hidden:
          type: boolean
        parentName:
          type: string
        supported:
          type: boolean
        dynamicData:
          type: boolean
        minValue:
          type: integer
        maxValue:
          type: integer
        stepSize:
          type: integer
        pricingAtttributes:
          $ref: '#/components/schemas/ServiceElementPrice'
        childElements:
          items:
            $ref: '#/components/schemas/ServiceElement'
          nullable: true
          type: array
      type: object
    ServiceElementPrice:
      example:
        additionalPeriodicPrice: additionalPeriodicPrice
        periodicPrice: periodicPrice
        includedQuantity: 7
        oneTimePrice: oneTimePrice
        unitOfMeasure: unitOfMeasure
        timePeriod: timePeriod
        additionalQuantity: 9
        additionalOneTimePrice: additionalOneTimePrice
      nullable: true
      properties:
        oneTimePrice:
          type: string
        periodicPrice:
          type: string
        timePeriod:
          type: string
        unitOfMeasure:
          type: string
        includedQuantity:
          type: integer
        additionalOneTimePrice:
          type: string
        additionalPeriodicPrice:
          type: string
        additionalQuantity:
          type: integer
      type: object
    NSOConfigDataXPath:
      example:
        serviceType: serviceType
        serviceInstanceXPath: serviceInstanceXPath
        possibleXPathLocations:
        - possibleXPathLocations
        - possibleXPathLocations
      properties:
        serviceInstanceXPath:
          minLength: 1
          type: string
        serviceType:
          type: string
        possibleXPathLocations:
          items:
            type: string
          type: array
      required:
      - serviceInstanceXPath
      type: object
    ServiceUIConfig:
      example:
        bannerImage: bannerImage
        links:
        - address: address
          label: label
          type: type
          target: target
        - address: address
          label: label
          type: type
          target: target
      properties:
        bannerImage:
          type: string
        links:
          items:
            $ref: '#/components/schemas/ServiceUILink'
          type: array
      type: object
    ServiceUILink:
      example:
        address: address
        label: label
        type: type
        target: target
      properties:
        type:
          type: string
        label:
          type: string
        address:
          type: string
        target:
          type: string
      type: object
    ServiceSLMUIConfig:
      example:
        resources:
        - href: href
          type: type
        - href: href
          type: type
        type: type
      nullable: true
      properties:
        type:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ServiceUIResource'
          type: array
      type: object
    ServiceUIResource:
      example:
        href: href
        type: type
      properties:
        type:
          type: string
        href:
          type: string
      type: object
    ProductsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/ProductsPage_allOf'
    Offer:
      allOf:
      - $ref: '#/components/schemas/Offer_allOf'
      - $ref: '#/components/schemas/OfferCreate'
    OfferCreate:
      allOf:
      - $ref: '#/components/schemas/OfferUpdate'
    OfferUpdate:
      example:
        image: image
        supportedOptions:
        - name: name
          value: value
        - name: name
          value: value
        productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        price: price
        approvals:
          key: ""
        name: name
        displayOrder: 6
        supportedProperties:
        - supportedProperties
        - supportedProperties
        description: description
        label: label
        type: type
        version: 0
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        label:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 512
          minLength: 1
          type: string
        productId:
          format: uuid
          type: string
        version:
          type: integer
        displayOrder:
          type: integer
        image:
          type: string
        price:
          type: string
        type:
          type: string
        supportedProperties:
          items:
            type: string
          type: array
        supportedOptions:
          items:
            $ref: '#/components/schemas/NameValue'
          type: array
        approvals:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - description
      - displayOrder
      - label
      - name
      - productId
      - version
      type: object
    OffersPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/OffersPage_allOf'
    CatalogAssignment:
      example:
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        tenantId:
          format: uuid
          type: string
        createdOn:
          format: date-time
          readOnly: true
          type: string
      type: object
    AccessToken:
      example:
        lastName: lastName
        roles:
        - roles
        - roles
        id_token: id_token
        token_type: token_type
        access_token: access_token
        firstName: firstName
        scope: scope
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiry: expiry
        expires_in: 0
        iat: iat
        email: email
        username: username
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
        scope:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          items:
            type: string
          type: array
        id_token:
          type: string
        tenantId:
          format: uuid
          type: string
        email:
          format: email
          type: string
        username:
          type: string
        expiry:
          nullable: true
          type: string
        iat:
          nullable: true
          type: string
      type: object
    body:
      properties:
        grant_type:
          type: string
        username:
          type: string
        password:
          format: password
          type: string
        access_token:
          type: string
        switch_username:
          type: string
        tenant_id:
          format: uuid
          type: string
        scope:
          type: string
        nonce:
          type: string
        tenant_name:
          type: string
      required:
      - grant_type
      type: object
    Role:
      example:
        permissions:
        - permissions
        - permissions
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          items:
            type: string
          type: array
      type: object
    Tenant:
      allOf:
      - $ref: '#/components/schemas/Tenant_allOf'
      - $ref: '#/components/schemas/TenantCreate'
    TenantCreate:
      allOf:
      - $ref: '#/components/schemas/TenantCreate_allOf'
      - $ref: '#/components/schemas/TenantUpdate'
    TenantUpdate:
      example:
        image: image
        name: name
        description: description
        url: url
        email: email
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        image:
          maxLength: 40000
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          nullable: true
          type: string
      required:
      - name
      type: object
    TenantsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/TenantsPage_allOf'
    User:
      allOf:
      - $ref: '#/components/schemas/User_allOf'
      - $ref: '#/components/schemas/UserCreate'
    UserCreate:
      allOf:
      - $ref: '#/components/schemas/UserUpdate'
      - $ref: '#/components/schemas/UserCreate_allOf'
    UserUpdate:
      example:
        firstName: firstName
        lastName: lastName
        roleIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        passwordPolicyName: passwordPolicyName
        locale: locale
        email: email
        tenantIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        roleIds:
          items:
            format: uuid
            type: string
          type: array
        tenantIds:
          items:
            format: uuid
            type: string
          type: array
        passwordPolicyName:
          type: string
        locale:
          maxLength: 16
          minLength: 2
          nullable: true
          type: string
      required:
      - email
      - lastName
      - passwordPolicyName
      type: object
    UpdatePassword:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
        username: username
      properties:
        username:
          type: string
        oldPassword:
          format: password
          nullable: true
          type: string
        newPassword:
          format: password
          type: string
      required:
      - newPassword
      - username
      type: object
    UsersPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/UsersPage_allOf'
    WorkflowFooter:
      properties:
        created_on:
          type: string
        created_by:
          type: string
        updated_on:
          type: string
        updated_by:
          nullable: true
          type: string
        owner:
          nullable: true
          type: string
        unique_name:
          nullable: true
          type: string
      type: object
    StartWorkflowResponse:
      example:
        definition_id: definition_id
        base_type: base_type
        created_on: created_on
        schema_id: schema_id
        id: id
        type: type
        version: version
        created_by: created_by
        status:
          key: ""
      properties:
        id:
          format: ksuid
          type: string
        definition_id:
          type: string
        schema_id:
          type: string
        type:
          type: string
        base_type:
          type: string
        status:
          additionalProperties: {}
          type: object
        version:
          type: string
        created_by:
          type: string
        created_on:
          type: string
      type: object
    ValidateWorkflowResponse:
      example:
        workflow_valid: true
        total_valid: 6
        total_actions: 0
        invalid_action_ids:
        - invalid_action_ids
        - invalid_action_ids
      properties:
        total_actions:
          nullable: true
          type: integer
        total_valid:
          nullable: true
          type: integer
        workflow_valid:
          nullable: true
          type: boolean
        invalid_action_ids:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Workflow:
      allOf:
      - $ref: '#/components/schemas/Workflow_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowMetadata:
      properties:
        git_info:
          $ref: '#/components/schemas/WorkflowMetadata_git_info'
      type: object
    WorkflowVariable:
      allOf:
      - $ref: '#/components/schemas/WorkflowVariable_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowAction:
      example:
        workflow_id: workflow_id
        ended_on: ended_on
        object_type: object_type
        blocks:
        - unique_name: unique_name
          workflow_id: workflow_id
          base_type: base_type
          object_type: object_type
          subworkflow_id: subworkflow_id
          name: name
          schema_id: schema_id
          title: title
          type: type
          version: version
          actions:
          - null
          - null
          properties:
            key: ""
        - unique_name: unique_name
          workflow_id: workflow_id
          base_type: base_type
          object_type: object_type
          subworkflow_id: subworkflow_id
          name: name
          schema_id: schema_id
          title: title
          type: type
          version: version
          actions:
          - null
          - null
          properties:
            key: ""
        description: description
        title: title
        type: type
        output:
          key: ""
        definition_id: definition_id
        unique_name: unique_name
        base_type: base_type
        started_on: started_on
        schema_id: schema_id
        name: name
        adapter_id: adapter_id
        id: id
        started_by: started_by
        properties:
          key: ""
        status:
          key: ""
      properties:
        id:
          format: ksuid
          type: string
        workflow_id:
          nullable: true
          type: string
        definition_id:
          nullable: true
          type: string
        schema_id:
          nullable: true
          type: string
        adapter_id:
          nullable: true
          type: string
        unique_name:
          nullable: true
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        base_type:
          type: string
        properties:
          additionalProperties: {}
          nullable: true
          type: object
        object_type:
          nullable: true
          type: string
        started_by:
          nullable: true
          type: string
        blocks:
          items:
            $ref: '#/components/schemas/WorkflowActionBlock'
          nullable: true
          type: array
        status:
          additionalProperties: {}
          nullable: true
          type: object
        description:
          nullable: true
          type: string
        output:
          additionalProperties: {}
          nullable: true
          type: object
        started_on:
          nullable: true
          type: string
        ended_on:
          nullable: true
          type: string
      type: object
    WorkflowActionBlock:
      example:
        unique_name: unique_name
        workflow_id: workflow_id
        base_type: base_type
        object_type: object_type
        subworkflow_id: subworkflow_id
        name: name
        schema_id: schema_id
        title: title
        type: type
        version: version
        actions:
        - null
        - null
        properties:
          key: ""
      properties:
        unique_name:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        version:
          type: string
        base_type:
          type: string
        properties:
          additionalProperties: {}
          type: object
        object_type:
          type: string
        actions:
          items:
            $ref: '#/components/schemas/WorkflowAction'
          type: array
        subworkflow_id:
          type: string
        workflow_id:
          type: string
        schema_id:
          type: string
      type: object
    WorkflowMapping:
      example:
        modifiedOn: modifiedOn
        uniqueName: uniqueName
        createdBy: createdBy
        modifiedBy: modifiedBy
        id: id
        createdOn: createdOn
        tenantIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          type: string
        tenantIds:
          items:
            format: uuid
            type: string
          type: array
        uniqueName:
          type: string
        createdBy:
          type: string
        createdOn:
          type: string
        modifiedBy:
          type: string
        modifiedOn:
          type: string
      type: object
    WorkflowStartConfig:
      example:
        input_variables:
        - null
        - null
        type_of_target_needed: type_of_target_needed
        target_id: target_id
      properties:
        input_variables:
          items:
            $ref: '#/components/schemas/WorkflowVariable'
          type: array
        type_of_target_needed:
          nullable: true
          type: string
        target_id:
          nullable: true
          type: string
      type: object
    WorkflowCategory:
      allOf:
      - $ref: '#/components/schemas/WorkflowCategory_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowCategoryCreate:
      example:
        unique_name: unique_name
        name: name
        schema_id: schema_id
        description: description
        title: title
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        title:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          minLength: 1
          type: string
        schema_id:
          type: string
        unique_name:
          type: string
      required:
      - description
      - name
      - schema_id
      - title
      type: object
    WorkflowCategoryUpdate:
      example:
        unique_name: unique_name
        name: name
        schema_id: schema_id
        description: description
        title: title
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        title:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          minLength: 1
          type: string
        schema_id:
          type: string
        unique_name:
          type: string
      required:
      - description
      - name
      - schema_id
      - title
      type: object
    WorkflowEvent:
      allOf:
      - $ref: '#/components/schemas/WorkflowEvent_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowEventCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowEventUpdate'
    WorkflowEventUpdate:
      example:
        schema_id: schema_id
        description: description
        target_id: target_id
        title: title
        properties:
          key: ""
      properties:
        title:
          type: string
        description:
          type: string
        target_id:
          type: string
        schema_id:
          type: string
        properties:
          additionalProperties: {}
          type: object
      required:
      - properties
      - schema_id
      - target_id
      - title
      type: object
    WorkflowInstance:
      allOf:
      - $ref: '#/components/schemas/WorkflowInstance_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowInstanceDeleteResponse:
      example:
        deleted_child_workflow_instance_ids:
        - deleted_child_workflow_instance_ids
        - deleted_child_workflow_instance_ids
      nullable: true
      properties:
        deleted_child_workflow_instance_ids:
          items:
            type: string
          nullable: true
          type: array
      type: object
    WorkflowSchema:
      allOf:
      - $ref: '#/components/schemas/WorkflowSchema_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
      nullable: true
    WorkflowAccessMeta:
      properties:
        adapter:
          $ref: '#/components/schemas/WorkflowAccessMetaType'
        runtime_users:
          items:
            $ref: '#/components/schemas/WorkflowAccessMetaType'
          type: array
        targets:
          items:
            $ref: '#/components/schemas/WorkflowAccessMetaType'
          type: array
        is_integration:
          type: boolean
        is_internal:
          type: boolean
      type: object
    WorkflowAccessMetaType:
      properties:
        id:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    WorkflowSchemaByTypeResponse:
      example: {}
      properties:
        view_schema:
          $ref: '#/components/schemas/WorkflowSchema'
        data_schema:
          $ref: '#/components/schemas/WorkflowSchema'
      type: object
    WorkflowTarget:
      allOf:
      - $ref: '#/components/schemas/WorkflowTarget_allOf'
      - $ref: '#/components/schemas/WorkflowFooter'
    WorkflowDefAccessMeta:
      properties:
        is_integration:
          nullable: true
          type: boolean
        is_internal:
          type: boolean
      type: object
    WorkflowTargetCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTargetUpdate'
    WorkflowTargetUpdate:
      example:
        unique_name: unique_name
        name: name
        schema_id: schema_id
        description: description
        title: title
        type: type
        properties:
          key: ""
      properties:
        name:
          pattern: ^[^<>]+$
          type: string
        description:
          pattern: ^[^<>]+$
          type: string
        title:
          type: string
        schema_id:
          type: string
        type:
          type: string
        properties:
          additionalProperties: {}
          type: object
        unique_name:
          type: string
      required:
      - name
      - properties
      type: object
    IncidentConfig:
      allOf:
      - $ref: '#/components/schemas/IncidentConfigUpdate'
    IncidentConfigUpdate:
      example:
        proxy: proxy
        password: password
        clientId: clientId
        criticalEvent: true
        domain: domain
        clientSecret: clientSecret
        userName: userName
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        criticalEvent:
          type: boolean
        domain:
          type: string
        password:
          type: string
        userName:
          type: string
        proxy:
          nullable: true
          type: string
      required:
      - clientId
      - clientSecret
      - domain
      - password
      - userName
      type: object
    IncidentConfigPatch:
      example:
        password: password
        clientId: clientId
        criticalEvent: true
        domain: domain
        clientSecret: clientSecret
        userName: userName
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        criticalEvent:
          type: boolean
        domain:
          type: string
        password:
          type: string
        userName:
          type: string
      type: object
    Incident:
      allOf:
      - $ref: '#/components/schemas/Incident_allOf'
      - $ref: '#/components/schemas/IncidentUpdate'
    IncidentCreate:
      allOf:
      - $ref: '#/components/schemas/IncidentUpdate'
    IncidentUpdate:
      example:
        severity: Low
        urgency: Low
        impact: Low
        description: description
        attributes:
          key: ""
        state: New
        category: inquiry
        priority: Planning
        subcategory: subcategory
        tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        attributes:
          additionalProperties: {}
          type: object
        category:
          default: inquiry
          description: inquiry|software|hardware|network|database
          type: string
        description:
          type: string
        impact:
          default: Low
          enum:
          - High
          - Medium
          - Low
          type: string
        priority:
          default: Planning
          enum:
          - Critical
          - Low
          - High
          - Moderate
          - Planning
          type: string
        severity:
          default: Low
          enum:
          - High
          - Medium
          - Low
          type: string
        state:
          default: New
          enum:
          - New
          - InProgress
          - OnHold
          - Resolved
          - Close
          - Canceled
          type: string
        subcategory:
          type: string
        tenant:
          format: uuid
          nullable: true
          type: string
        urgency:
          default: Low
          enum:
          - High
          - Medium
          - Low
          type: string
      required:
      - description
    IncidentsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/IncidentsPage_allOf'
    IncidentCancel:
      example:
        notes: notes
        tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        notes:
          type: string
        tenant:
          format: uuid
          type: string
      required:
      - tenant
    ChangeRequest:
      allOf:
      - $ref: '#/components/schemas/ChangeRequest_allOf'
      - $ref: '#/components/schemas/ChangeRequestUpdate'
      example:
        id: CHG0030022
        externalId: ddab71cb2f2620106d175aab2799b630
    ChangeRequestCreate:
      allOf:
      - $ref: '#/components/schemas/ChangeRequestUpdate'
    ChangeRequestUpdate:
      example:
        name: name
        description: description
        attributes:
          justification: why do i need this
          implementation_plan: how I am going to do this
          test_plan: how do I test this
          backout_plan: what do I do when it all fails
        tenantId: c6ccaaca-80e8-11eb-9439-0242ac130002
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          additionalProperties: true
          type: object
        tenantId:
          format: uuid
          nullable: true
          type: string
      type: object
    ServiceNowConfiguration:
      allOf:
      - $ref: '#/components/schemas/Product_allOf'
      - $ref: '#/components/schemas/ServiceNowConfigurationRequest'
      example:
        id: d1d43685-8abb-4a65-8e7e-c350e51aed3e
    ServiceNowConfigurationCreate:
      allOf:
      - $ref: '#/components/schemas/ServiceNowConfigurationRequest'
    ServiceNowConfigurationRequest:
      example:
        domain: dev78211.service-now.com
        client_id: 32533694f7512010d5f5ff8cae550b79
        client_secret: '*****'
        userName: admin
        password: '*****'
        criticalEvent: true
        tenantId: c6ccaaca-80e8-11eb-9439-0242ac130002
        proxy: https://proxy.someservice.com
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        criticalEvent:
          type: boolean
        domain:
          type: string
        password:
          type: string
        userName:
          type: string
        tenantId:
          format: uuid
          nullable: true
          type: string
        proxy:
          nullable: true
          type: string
      type: object
    ServiceNowConfigurationsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/ServiceNowConfigurationsPage_allOf'
    ChangeRequestSummary:
      example:
        id: CHG0030022
        externalId: ddab71cb2f2620106d175aab2799b630
        name: name
        description: description
        tenantId: c6ccaaca-80e8-11eb-9439-0242ac130002
      properties:
        id:
          type: string
        externalId:
          type: string
        name:
          type: string
        description:
          type: string
        tenantId:
          format: uuid
          nullable: true
          type: string
        attributes:
          additionalProperties: true
          type: object
      type: object
    ChangeRequestsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/ChangeRequestsPage_allOf'
    BillingEvent:
      allOf:
      - $ref: '#/components/schemas/BillingEvent_allOf'
      - $ref: '#/components/schemas/BillingEventCreate'
    BillingEventCreate:
      allOf:
      - $ref: '#/components/schemas/BillingEventUpdate'
    BillingEventUpdate:
      example:
        id: 0ca227ff-982e-4138-823d-09a98d933c23
        createdOn: 2020-09-18T06:06:51Z
        name: DeviceEvent
        description: Device sn-000101234567120 has been created
        type: device
        subtype: manageddevice
        severity: info
        action: create
        details:
          id: CPE-1b085715-59ea-42ba-8069-822a1c245806
          name: CPE-1b085715-59ea-42ba-8069-822a1c245806
          model: CISCO ISR 4451
          type: CISCO ISR 4451
          providerId: fe3ad89c-449f-42f2-b4f8-b10ab7bc0266
          userId: fc401d35-6506-4670-959f-1dade5452339
          serialKey: 8765238864
          version: null
          serviceInstanceId: MDTenant1805-0c47954c0b184e8aa8188a5a7389cfe2-manageddevice
          subscriptionId: MDTenant1805-0c47954c0b184e8aa8188a5a7389cfe2-manageddevice
          serviceType: manageddevice
          managed: true
          onboardType: direct
        price: "340.50"
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        createdOn:
          format: date-time
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          minLength: 1
          type: string
        type:
          maxLength: 128
          minLength: 1
          type: string
        subtype:
          maxLength: 128
          minLength: 0
          type: string
        severity:
          maxLength: 64
          minLength: 0
          type: string
        action:
          maxLength: 64
          minLength: 0
          type: string
        details:
          additionalProperties: {}
          nullable: true
          type: object
        price:
          format: double
          minimum: 0
          type: number
        tenantId:
          format: UUID
          type: string
      type: object
    BillingEventsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/BillingEventsPage_allOf'
    BillingPrice:
      allOf:
      - $ref: '#/components/schemas/BillingPrice_allOf'
      - $ref: '#/components/schemas/BillingPriceCreate'
    BillingPriceCreate:
      allOf:
      - $ref: '#/components/schemas/BillingPriceUpdate'
    BillingPriceUpdate:
      example:
        name: Device Price
        description: Pricing details for device type
        type: device
        subtype: CISCO ISR 4451
        source: Coke
        price: "240.00"
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 256
          minLength: 1
          type: string
        type:
          maxLength: 128
          minLength: 1
          type: string
        subtype:
          maxLength: 128
          minLength: 1
          type: string
        source:
          maxLength: 128
          minLength: 1
          type: string
        price:
          format: double
          minimum: 0
          type: number
        billingPeriod:
          format: int64
          type: integer
        service:
          nullable: true
          type: string
        tenantId:
          format: UUID
          type: string
      required:
      - name
      - price
      - tenantId
      - type
      type: object
    BillingPricesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/BillingPricesPage_allOf'
    BillingCycle:
      allOf:
      - $ref: '#/components/schemas/BillingCycle_allOf'
    BillingCycleCreate:
      allOf:
      - $ref: '#/components/schemas/BillingCycleUpdate'
    BillingCycleUpdate:
      example:
        eventId: 18d0b098-4eb9-45b6-9ebd-2b9796b5a126
        lastBilledOn: 2020-09-18T18:37:33.810Z
        nextBilledOn: 2020-10-18T18:37:33.810Z
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        eventId:
          format: uuid
          type: string
        lastBilledOn:
          example: 2020-09-18T18:37:33.810Z
          pattern: \d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\d|3[0-1])T(?:[0-1]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d+|)(?:Z|(?:\+|\-)(?:\d{2}):?(?:\d{2}))
          type: string
        nextBilledOn:
          example: 2020-09-18T18:37:33.810Z
          pattern: \d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\d|3[0-1])T(?:[0-1]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d+|)(?:Z|(?:\+|\-)(?:\d{2}):?(?:\d{2}))
          type: string
        tenantId:
          format: uuid
          type: string
      required:
      - eventId
      - lastBilledOn
      - nextBilledOn
      - tenantId
      type: object
    BillingCycleProcess:
      example:
        nextBilledOn: 2020-09-18T18:37:33.810Z
      properties:
        nextBilledOn:
          example: 2020-09-18T18:37:33.810Z
          pattern: \d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\d|3[0-1])T(?:[0-1]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d+|)(?:Z|(?:\+|\-)(?:\d{2}):?(?:\d{2}))
          type: string
      required:
      - nextBilledOn
      type: object
    BillingCycleProcessAccepted:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdOn: 2020-09-18T18:37:33.81Z
        nextBilledOn: 2020-09-18T18:37:33.81Z
      properties:
        id:
          format: uuid
          nullable: true
          type: string
        nextBilledOn:
          example: 2020-09-18T18:37:33.81Z
          format: date-time
          type: string
        createdOn:
          example: 2020-09-18T18:37:33.81Z
          format: date-time
          type: string
      required:
      - nextBilledOn
      type: object
    BillingCyclesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/BillingCyclesPage_allOf'
    BillingCostsReport:
      example:
        details:
        - subtype: manageddevice
          cost: "4500.00"
        - subtype: sdbranch
          cost: "3500.00"
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        tenantId:
          format: UUID
          type: string
        details:
          items:
            $ref: '#/components/schemas/CostSummary'
          type: array
      type: object
    CostSummary:
      example:
        details:
        - subtype: manageddevice
          cost: "4500.00"
        - subtype: sdbranch
          cost: "3500.00"
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        type:
          maxLength: 128
          minLength: 1
          type: string
        subtype:
          maxLength: 128
          minLength: 1
          type: string
        cost:
          format: double
          minimum: 0
          nullable: true
          type: number
        price:
          format: double
          minimum: 0
          nullable: true
          type: number
      type: object
    SmartAccountConfiguration:
      allOf:
      - $ref: '#/components/schemas/Product_allOf'
      - $ref: '#/components/schemas/SmartAccountConfigurationUpdate'
    SmartAccountConfigurationCreate:
      allOf:
      - $ref: '#/components/schemas/SmartAccountConfigurationUpdate'
    SmartAccountConfigurationUpdate:
      example:
        baseAuthUrl: https://cloudsso.cisco.com/as/token.oauth2
        baseSmartUrl: https://swapi-test.cisco.com
        contentType: application/x-www-form-urlencoded
        grantType: client_credentials
        clientId: client_id
        clientSecret: client_secret
      properties:
        baseAuthUrl:
          type: string
        baseSmartUrl:
          type: string
        contentType:
          type: string
        grantType:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
      type: object
    SmartAccountType:
      description: Smart Account Types
      enum:
      - CUSTOMER
      - HOLDING
      nullable: false
      type: string
    SmartUserAccounts:
      allOf:
      - $ref: '#/components/schemas/SmartUserAccounts_allOf'
    SmartAccountUser:
      example:
        id: "345466"
        name: Cisco Systems, Inc.
        domain: abhtest001.cisco.com
        type: CUSTOMER
        roles:
        - name: VirtualAccountAdmin
          virtualAccountId: "236791"
          virtualAccountName: Bell-RBC-POC
      properties:
        accountId:
          description: Smart Account identifier
          readOnly: true
          type: integer
        accountName:
          description: Smart Account Name
          readOnly: true
          type: string
        accountDomain:
          description: Smart Accont Domain
          format: uri
          readOnly: true
          type: string
        accountType:
          $ref: '#/components/schemas/SmartAccountType'
        roles:
          items:
            $ref: '#/components/schemas/SmartAccountUserRole'
          type: array
      type: object
    SmartAccountUserRole:
      example:
        roleName: VirtualAccountAdmin
        virtualAccountId: "236791"
        virtualAccountName: Bell-RBC-POC
      properties:
        roleName:
          readOnly: true
          type: string
        virtualAccountId:
          description: Virtual Account identifier
          readOnly: true
          type: integer
        virtualAccountName:
          description: Virtual Account Name
          readOnly: true
          type: string
      type: object
    LicenseDetails:
      properties:
        licenseType:
          description: Type of license - TERM or DEMO or PERPETUAL
          readOnly: true
          type: string
        quantity:
          description: Number of reserved licenses
          format: int64
          readOnly: true
          type: integer
        startDate:
          description: License usage start date in yyyy-mm-dd format
          readOnly: true
          type: string
        endDate:
          description: License usage expiration date in yyyy-mm-dd format
          readOnly: true
          type: string
        subscriptionId:
          description: Subscription refence id
          readOnly: true
          type: string
        status:
          description: Licencse usage status
          readOnly: true
          type: string
      type: object
    LicenseSummary:
      example:
        entitled: 500
        inuse: 0
        reserved: 0
        inUse: 0
        status: In Compliance
        name: AP Perpetual Networkstack Advantage
        enforced: false
        licenseDetails:
        - licenseType: PERPETUAL
          quantity: 1
          startDate: 2019-08-21
          endDate: 2019-11-18
          subscriptionId: null
          status: ""
      properties:
        entitled:
          description: Total entitled quantity for the license
          format: int64
          readOnly: true
          type: integer
        inuse:
          description: Total consumed quantity for the device
          format: int64
          readOnly: true
          type: integer
        reserved:
          description: Reserved quantity (if any)
          format: int64
          readOnly: true
          type: integer
        status:
          description: Current compliance status for the license
          readOnly: true
          type: string
        name:
          description: User friendly display name for the license
          readOnly: true
          type: string
        enforced:
          description: Identifies if the tag is for an enforced license or not
          readOnly: true
          type: boolean
        licenseDetails:
          items:
            $ref: '#/components/schemas/LicenseDetails'
          type: array
      type: object
    VulnerabilityFeed:
      description: Details of an NVD advisory feed.
      example:
        file: nvdcve-1.1-modified.json.gz
        name: CVE-Modified
      properties:
        name:
          example: CVE-Modified
          type: string
        file:
          example: nvdcve-1.1-modified.json.gz
          type: string
      type: object
    VulnerabilityValidation:
      description: Execution of vulnerability validation task
      example:
        product: ios_xe
        executedOn: 2021-03-01T17:02:00Z
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: Task processed succesfully!!
      properties:
        id:
          format: uuid
          type: string
        executedOn:
          example: 2021-03-01T17:02:00Z
          format: date-time
          type: string
        product:
          example: ios_xe
          type: string
        message:
          example: Task processed succesfully!!
          type: string
      type: object
    VulnerabilityIngestion:
      description: Execution of vulnerability ingestion task
      example:
        file: nvdcve-1.1-recent.json.gz
        name: NVDCVE-1.1
        executedOn: 2021-03-01T17:02:00Z
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: Task processed succesfully!!
      properties:
        id:
          format: uuid
          type: string
        name:
          example: NVDCVE-1.1
          type: string
        file:
          example: nvdcve-1.1-recent.json.gz
          type: string
        executedOn:
          example: 2021-03-01T17:02:00Z
          format: date-time
          type: string
        message:
          example: Task processed succesfully!!
          type: string
      type: object
    VulnerabilityRegistration:
      allOf:
      - $ref: '#/components/schemas/VulnerabilityRegistration_allOf'
      - $ref: '#/components/schemas/VulnerabilityRegistrationCreate'
    VulnerabilityRegistrationCreate:
      description: Registration for vulnerability inspection.
      example:
        product: ios_xe
        version: 14.3.2
      properties:
        product:
          example: ios_xe
          type: string
        version:
          example: 14.3.2
          type: string
      type: object
    VulnerabilitySeverity:
      description: PSIRT vulnerability severity rating (https://nvd.nist.gov/vuln-metrics/cvss).
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
      type: string
    Vulnerability:
      example:
        cveId: CVE-2021-0202
        url: https://nvd.nist.gov/vuln/detail/CVE-2021-0202
        severity: CRITICAL
        publishedOn: 2021-01-15T18:15Z
        modifiedOn: 2021-01-15T18:15Z
        vendor: cisco
        product: ios_xe
        version: "12.8"
      properties:
        cveId:
          description: CVE identitfier (https://www.cvedetails.com/cve-help.php).
          readOnly: true
          type: string
        url:
          format: uri
          readOnly: true
          type: string
        severity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        publishedOn:
          format: date-time
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          readOnly: true
          type: string
        vendor:
          readOnly: true
          type: string
        product:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      required:
      - cveId
      - modifiedOn
      - product
      - publishedOn
      - severity
      - url
      - vendor
      - version
      type: object
    VulnerabilityValidationPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/VulnerabilityValidationPage_allOf'
    VulnerabilityIngestPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/VulnerabilityIngestPage_allOf'
    VulnerabilitiesRegistrationPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/VulnerabilitiesRegistrationPage_allOf'
    VulnerabilitiesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/VulnerabilitiesPage_allOf'
    TemplateStatus:
      enum:
      - NEW
      - PENDING
      - FAILED
      - SUCCESS
      - DELETE
      - ERROR
      type: string
    TemplateAssignmentStatusPatch:
      example:
        statusDetails: statusDetails
      properties:
        status:
          $ref: '#/components/schemas/TemplateStatus'
        statusDetails:
          maxLength: 256
          type: string
      required:
      - status
      type: object
    TemplateApplicationStatusPatch:
      example:
        statusDetails: statusDetails
      properties:
        status:
          $ref: '#/components/schemas/TemplateStatus'
        statusDetails:
          maxLength: 256
          type: string
      required:
      - status
      type: object
    TemplateStatusMeta:
      properties:
        status:
          $ref: '#/components/schemas/TemplateStatus'
        statusDetails:
          maxLength: 256
          nullable: true
          readOnly: true
          type: string
        createdOn:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        createdBy:
          format: uuid
          nullable: true
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        modifiedBy:
          format: uuid
          nullable: true
          readOnly: true
          type: string
      type: object
    Template:
      allOf:
      - $ref: '#/components/schemas/Product_allOf'
      - $ref: '#/components/schemas/TemplateCreate'
      - $ref: '#/components/schemas/TemplateStatusMeta'
    TemplateCreate:
      example:
        serviceType: serviceType
        notes: notes
        subtype: subtype
        configuration: configuration
        name: name
        externalId: externalId
        description: description
        attributes:
          key: attributes
        type: type
        tags:
        - tags
        - tags
      properties:
        externalId:
          nullable: true
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 512
          minLength: 1
          type: string
        serviceType:
          type: string
        type:
          type: string
        subtype:
          nullable: true
          type: string
        configuration:
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
        tags:
          items:
            format: ^[-_0-9a-zA-Z]{1,128}$
            type: string
          type: array
        notes:
          nullable: true
          type: string
      required:
      - name
      - serviceType
      - type
      type: object
    TemplatesPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/TemplatesPage_allOf'
    TemplatePatch:
      example:
        serviceType: serviceType
        notes: notes
        subtype: subtype
        configuration: configuration
        name: name
        description: description
        statusDetails: statusDetails
        attributes:
          key: attributes
        type: type
        tags:
        - tags
        - tags
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 512
          minLength: 1
          type: string
        serviceType:
          type: string
        type:
          type: string
        subtype:
          nullable: true
          type: string
        configuration:
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
        tags:
          items:
            format: ^[-_0-9a-zA-Z]{1,128}$
            type: string
          type: array
        notes:
          type: string
        status:
          $ref: '#/components/schemas/TemplateStatus'
        statusDetails:
          maxLength: 256
          type: string
      type: object
    TemplateAssignment:
      allOf:
      - $ref: '#/components/schemas/TemplateAssignment_allOf'
      - $ref: '#/components/schemas/TemplateStatusMeta'
    TemplateAssignmentResponse:
      allOf:
      - $ref: '#/components/schemas/TemplateAssignment'
      - $ref: '#/components/schemas/TemplateAssignmentResponse_allOf'
    TemplateAssignmentsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/TemplateAssignmentsPage_allOf'
    TemplateApplication:
      allOf:
      - $ref: '#/components/schemas/TemplateApplication_allOf'
      - $ref: '#/components/schemas/TemplateApplicationCreate'
      - $ref: '#/components/schemas/TemplateStatusMeta'
    TemplateApplicationCreate:
      example:
        targetId: targetId
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        targetType: targetType
        parameters:
          key: parameters
      properties:
        tenantId:
          format: uuid
          type: string
        targetId:
          type: string
        targetType:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
      required:
      - targetId
      - targetType
      - tenantId
      type: object
    TemplateApplicationsPage:
      allOf:
      - $ref: '#/components/schemas/PageHeader'
      - $ref: '#/components/schemas/TemplateApplicationsPage_allOf'
    inline_object:
      properties:
        file:
          description: The XML template file of a device template
          format: binary
          type: string
      type: object
    Device_allOf:
      properties:
        id:
          type: string
        userId:
          format: uuid
          type: string
        providerId:
          format: uuid
          type: string
        vulnerabilityState:
          $ref: '#/components/schemas/DeviceVulnerabilityState'
        createdOn:
          format: date-time
          type: string
        modifiedOn:
          format: date-time
          nullable: true
          type: string
      type: object
    DeviceCreate_allOf:
      properties:
        serviceInstanceId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        tenantId:
          format: uuid
          type: string
      required:
      - tenantId
      type: object
    DeviceUpdate_allOf:
      properties:
        serviceType:
          maxLength: 128
          nullable: true
          type: string
        tags:
          additionalProperties:
            type: string
          nullable: true
          type: object
        managed:
          default: false
          type: boolean
        onboardType:
          maxLength: 128
          type: string
        onboardInformation:
          additionalProperties: {}
          nullable: true
          type: object
        attributes:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - managed
      - model
      - name
      - onboardType
      - type
      type: object
    DevicesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Device'
          type: array
      type: object
    Service_allOf:
      properties:
        id:
          readOnly: true
          type: string
        providerId:
          format: uuid
          readOnly: true
          type: string
        tenantId:
          format: uuid
          readOnly: true
          type: string
        userId:
          format: uuid
          readOnly: true
          type: string
        subscriptionId:
          readOnly: true
          type: string
        createdOn:
          format: date-time
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        provisionedOn:
          format: date-time
          readOnly: true
          type: string
      type: object
    ServicesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      type: object
    SiteCreate_allOf:
      properties:
        tenantId:
          format: uuid
          type: string
        deviceIds:
          items:
            type: string
          type: array
        serviceIds:
          items:
            type: string
          type: array
      required:
      - tenantId
      type: object
    SitesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Site'
          type: array
      type: object
    GenericEvent_allOf:
      properties:
        type:
          type: string
        time:
          format: date-time
          type: string
      type: object
    Product_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
      type: object
    ProductsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Product'
          type: array
      type: object
    Offer_allOf:
      properties:
        id:
          format: uuid
          type: string
      type: object
    OffersPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Offer'
          type: array
      type: object
    Tenant_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        createdOn:
          format: date-time
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          readOnly: true
          type: string
        suspended:
          nullable: true
          readOnly: true
          type: boolean
        numberOfChildren:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    TenantCreate_allOf:
      properties:
        parentId:
          format: uuid
          nullable: true
          type: string
        externalId:
          format: ^[a-zA-Z0-9-_=]{1,256}$
          nullable: true
          type: string
      type: object
    TenantsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
      type: object
    User_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        status:
          type: string
        deleted:
          type: string
      type: object
    UserCreate_allOf:
      properties:
        username:
          type: string
        password:
          format: password
          nullable: true
          type: string
      type: object
    UsersPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    Workflow_allOf:
      properties:
        id:
          format: ksuid
          type: string
        schema_id:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        base_type:
          type: string
        object_type:
          nullable: true
          type: string
        properties:
          additionalProperties: {}
          type: object
        valid:
          type: boolean
        workflow_valid:
          type: boolean
        categories:
          items:
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/WorkflowMetadata'
        status:
          additionalProperties: {}
          type: object
        permissions:
          items:
            type: string
          type: array
        variables:
          items:
            $ref: '#/components/schemas/WorkflowVariable'
          type: array
        actions:
          items:
            $ref: '#/components/schemas/WorkflowAction'
          nullable: true
          type: array
      type: object
    WorkflowMetadata_git_info:
      properties:
        target_id:
          nullable: true
          type: string
        commit_hash:
          nullable: true
          type: string
        committed_by:
          nullable: true
          type: string
        commited_on:
          nullable: true
          type: string
        committed_on:
          nullable: true
          type: string
        commit_message:
          nullable: true
          type: string
        file_name:
          nullable: true
          type: string
      type: object
    WorkflowVariable_allOf:
      properties:
        id:
          type: string
        type:
          nullable: true
          type: string
        base_type:
          nullable: true
          type: string
        schema_id:
          type: string
        object_type:
          type: string
        properties:
          additionalProperties: {}
          type: object
        data_type:
          nullable: true
          type: string
        scope:
          nullable: true
          type: string
      type: object
    WorkflowCategory_allOf:
      properties:
        id:
          type: string
        schema_id:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        base_type:
          type: string
        description:
          type: string
        category_type:
          type: string
        object_type:
          nullable: true
          type: string
      type: object
    WorkflowEvent_allOf:
      properties:
        id:
          format: ksuid
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        base_type:
          type: string
        schema_id:
          type: string
        properties:
          additionalProperties: {}
          type: object
      type: object
    WorkflowInstance_allOf:
      properties:
        id:
          format: ksuid
          type: string
        definition_id:
          type: string
        name:
          type: string
        schema_id:
          type: string
        version:
          type: string
        type:
          type: string
        base_type:
          type: string
        properties:
          additionalProperties: {}
          type: object
        actions:
          items:
            $ref: '#/components/schemas/WorkflowAction'
          nullable: true
          type: array
        variables:
          items:
            $ref: '#/components/schemas/WorkflowVariable'
          nullable: true
          type: array
        status:
          additionalProperties: {}
          type: object
        started_on:
          type: string
        ended_on:
          type: string
      type: object
    WorkflowSchema_allOf:
      properties:
        id:
          format: ksuid
          nullable: true
          type: string
        schema_id:
          type: string
        name:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
        base_type:
          type: string
        version:
          type: string
        invisible:
          type: boolean
        inherits:
          type: string
        access_meta:
          $ref: '#/components/schemas/WorkflowAccessMeta'
        variable_schema:
          additionalProperties: {}
          type: object
        property_schema:
          additionalProperties: {}
          type: object
        output_schema:
          additionalProperties: {}
          type: object
        view_config:
          additionalProperties: {}
          type: object
        attributes:
          additionalProperties: {}
          type: object
      type: object
    WorkflowTarget_allOf:
      properties:
        id:
          format: ksuid
          type: string
        schema_id:
          type: string
        adapter_id:
          type: string
        name:
          type: string
        title:
          nullable: true
          type: string
        type:
          type: string
        base_type:
          type: string
        properties:
          additionalProperties: {}
          nullable: true
          type: object
        valid:
          type: boolean
        def_access_meta:
          $ref: '#/components/schemas/WorkflowDefAccessMeta'
      type: object
    Incident_allOf:
      properties:
        id:
          readOnly: true
          type: string
        externalId:
          readOnly: true
          type: string
        attributes:
          additionalProperties: {}
          type: object
        notes:
          items:
            type: string
          type: array
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        modifiedOn:
          format: date-time
          type: string
      required:
      - externalId
      - id
      type: object
    IncidentsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Incident'
          type: array
      type: object
    ChangeRequest_allOf:
      properties:
        id:
          readOnly: true
          type: string
        externalId:
          readOnly: true
          type: string
      type: object
    ServiceNowConfigurationsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/ServiceNowConfiguration'
          nullable: false
          type: array
      type: object
    ChangeRequestsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/ChangeRequestSummary'
          nullable: false
          type: array
      type: object
    BillingEvent_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          readOnly: true
          type: string
      type: object
    BillingEventsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/BillingEvent'
          type: array
      type: object
    BillingPrice_allOf:
      example:
        id: 8932d62d-fc13-4d76-bda6-2bf24bf54293
        name: Device Price
        description: Pricing details for device type
        type: device
        subtype: CISCO ISR 4451
        source: Coke
        price: "240.00"
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        createdOn:
          format: date-time
          readOnly: true
          type: string
        modifiedOn:
          format: date-time
          readOnly: true
          type: string
      type: object
    BillingPricesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/BillingPrice'
          type: array
      type: object
    BillingCycle_allOf:
      example:
        id: 8932d62d-fc13-4d76-bda6-2bf24bf54293
        eventId: 18d0b098-4eb9-45b6-9ebd-2b9796b5a126
        lastBilledOn: 2020-09-18T18:37:33.810Z
        nextBilledOn: 2020-10-18T18:37:33.810Z
        tenantId: 29b89dcb-8f7c-4079-a720-250e7e9707c0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        eventId:
          format: uuid
          readOnly: true
          type: string
        lastBilledOn:
          example: 2020-09-18T18:37:33.810Z
          pattern: \d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\d|3[0-1])T(?:[0-1]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d+|)(?:Z|(?:\+|\-)(?:\d{2}):?(?:\d{2}))
          type: string
        nextBilledOn:
          example: 2020-09-18T18:37:33.810Z
          pattern: \d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\d|3[0-1])T(?:[0-1]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d+|)(?:Z|(?:\+|\-)(?:\d{2}):?(?:\d{2}))
          type: string
        tenantId:
          format: uuid
          type: string
      type: object
    BillingCyclesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/BillingCycle'
          type: array
      type: object
    SmartUserAccounts_allOf:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/SmartAccountUser'
          type: array
      type: object
    VulnerabilityRegistration_allOf:
      properties:
        id:
          format: uuid
          type: string
        registeredOn:
          format: date-time
          type: string
      type: object
    VulnerabilityValidationPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/VulnerabilityValidation'
          type: array
      type: object
    VulnerabilityIngestPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/VulnerabilityIngestion'
          type: array
      type: object
    VulnerabilitiesRegistrationPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/VulnerabilityRegistration'
          type: array
      type: object
    VulnerabilitiesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Vulnerability'
          type: array
      required:
      - contents
      - hasNext
      - hasPrevious
      - page
      - pageSize
      type: object
    TemplatesPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/Template'
          type: array
      type: object
    TemplateAssignment_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        templateId:
          format: uuid
          readOnly: true
          type: string
        templateName:
          readOnly: true
          type: string
        tenantId:
          format: uuid
          readOnly: true
          type: string
        assignedTenantId:
          format: uuid
          readOnly: true
          type: string
        inheritable:
          nullable: true
          readOnly: true
          type: boolean
      type: object
    TemplateAssignmentResponse_allOf:
      properties:
        responseStatus:
          enum:
          - NEW
          - OK
          - CONFLICT
          - UNASSIGNED
          - ERROR
          readOnly: true
          type: string
      type: object
    TemplateAssignmentsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/TemplateAssignment'
          type: array
      type: object
    TemplateApplication_allOf:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        templateId:
          format: uuid
          readOnly: true
          type: string
        templateName:
          readOnly: true
          type: string
      type: object
    TemplateApplicationsPage_allOf:
      properties:
        contents:
          items:
            $ref: '#/components/schemas/TemplateApplication'
          type: array
      type: object

