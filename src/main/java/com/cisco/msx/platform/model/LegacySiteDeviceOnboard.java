/*
 * KAKAPO - MSX SDK
 * MSX Platform SDK
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * LegacySiteDeviceOnboard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-26T16:01:54.199340-04:00[America/New_York]")
public class LegacySiteDeviceOnboard {
  public static final String SERIALIZED_NAME_DEVICE_INSTANCE_ID = "deviceInstanceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_INSTANCE_ID)
  private String deviceInstanceId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private UUID tenantId;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "deviceName";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  private String deviceName;

  public static final String SERIALIZED_NAME_MANAGED = "managed";
  @SerializedName(SERIALIZED_NAME_MANAGED)
  private Boolean managed = true;

  public static final String SERIALIZED_NAME_DEVICE_MODEL = "deviceModel";
  @SerializedName(SERIALIZED_NAME_DEVICE_MODEL)
  private String deviceModel;

  public static final String SERIALIZED_NAME_DEVICE_ONBOARDING_TYPE = "deviceOnboardingType";
  @SerializedName(SERIALIZED_NAME_DEVICE_ONBOARDING_TYPE)
  private String deviceOnboardingType;

  public static final String SERIALIZED_NAME_DEVICE_ONBOARD_INFORMATION = "deviceOnboardInformation";
  @SerializedName(SERIALIZED_NAME_DEVICE_ONBOARD_INFORMATION)
  private Map<String, Object> deviceOnboardInformation = null;


  public LegacySiteDeviceOnboard deviceInstanceId(String deviceInstanceId) {
    
    this.deviceInstanceId = deviceInstanceId;
    return this;
  }

   /**
   * Get deviceInstanceId
   * @return deviceInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceInstanceId() {
    return deviceInstanceId;
  }


  public void setDeviceInstanceId(String deviceInstanceId) {
    this.deviceInstanceId = deviceInstanceId;
  }


  public LegacySiteDeviceOnboard tenantId(UUID tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getTenantId() {
    return tenantId;
  }


  public void setTenantId(UUID tenantId) {
    this.tenantId = tenantId;
  }


  public LegacySiteDeviceOnboard deviceName(String deviceName) {
    
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceName() {
    return deviceName;
  }


  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  public LegacySiteDeviceOnboard managed(Boolean managed) {
    
    this.managed = managed;
    return this;
  }

   /**
   * Get managed
   * @return managed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManaged() {
    return managed;
  }


  public void setManaged(Boolean managed) {
    this.managed = managed;
  }


  public LegacySiteDeviceOnboard deviceModel(String deviceModel) {
    
    this.deviceModel = deviceModel;
    return this;
  }

   /**
   * Get deviceModel
   * @return deviceModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceModel() {
    return deviceModel;
  }


  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }


  public LegacySiteDeviceOnboard deviceOnboardingType(String deviceOnboardingType) {
    
    this.deviceOnboardingType = deviceOnboardingType;
    return this;
  }

   /**
   * Get deviceOnboardingType
   * @return deviceOnboardingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceOnboardingType() {
    return deviceOnboardingType;
  }


  public void setDeviceOnboardingType(String deviceOnboardingType) {
    this.deviceOnboardingType = deviceOnboardingType;
  }


  public LegacySiteDeviceOnboard deviceOnboardInformation(Map<String, Object> deviceOnboardInformation) {
    
    this.deviceOnboardInformation = deviceOnboardInformation;
    return this;
  }

  public LegacySiteDeviceOnboard putDeviceOnboardInformationItem(String key, Object deviceOnboardInformationItem) {
    if (this.deviceOnboardInformation == null) {
      this.deviceOnboardInformation = new HashMap<>();
    }
    this.deviceOnboardInformation.put(key, deviceOnboardInformationItem);
    return this;
  }

   /**
   * Get deviceOnboardInformation
   * @return deviceOnboardInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getDeviceOnboardInformation() {
    return deviceOnboardInformation;
  }


  public void setDeviceOnboardInformation(Map<String, Object> deviceOnboardInformation) {
    this.deviceOnboardInformation = deviceOnboardInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegacySiteDeviceOnboard legacySiteDeviceOnboard = (LegacySiteDeviceOnboard) o;
    return Objects.equals(this.deviceInstanceId, legacySiteDeviceOnboard.deviceInstanceId) &&
        Objects.equals(this.tenantId, legacySiteDeviceOnboard.tenantId) &&
        Objects.equals(this.deviceName, legacySiteDeviceOnboard.deviceName) &&
        Objects.equals(this.managed, legacySiteDeviceOnboard.managed) &&
        Objects.equals(this.deviceModel, legacySiteDeviceOnboard.deviceModel) &&
        Objects.equals(this.deviceOnboardingType, legacySiteDeviceOnboard.deviceOnboardingType) &&
        Objects.equals(this.deviceOnboardInformation, legacySiteDeviceOnboard.deviceOnboardInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceInstanceId, tenantId, deviceName, managed, deviceModel, deviceOnboardingType, deviceOnboardInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegacySiteDeviceOnboard {\n");
    sb.append("    deviceInstanceId: ").append(toIndentedString(deviceInstanceId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    managed: ").append(toIndentedString(managed)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    deviceOnboardingType: ").append(toIndentedString(deviceOnboardingType)).append("\n");
    sb.append("    deviceOnboardInformation: ").append(toIndentedString(deviceOnboardInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

