/*
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.client;

import com.cisco.msx.platform.ApiException;
import com.cisco.msx.platform.model.BillingPrice;
import com.cisco.msx.platform.model.BillingPriceCreate;
import com.cisco.msx.platform.model.BillingPriceUpdate;
import com.cisco.msx.platform.model.BillingPricesPage;
import com.cisco.msx.platform.model.Error;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillingPricesApi
 */
@Ignore
public class BillingPricesApiTest {

    private final BillingPricesApi api = new BillingPricesApi();

    
    /**
     * Add price for tenant and event type.
     *
     * Needs MANAGE_PRICES permission to allow for the creation of a price.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addPriceTest() throws ApiException {
        BillingPriceCreate billingPriceCreate = null;
        BillingPrice response = api.addPrice(billingPriceCreate);

        // TODO: test validations
    }
    
    /**
     * Delete a price.
     *
     * Needs MANAGE_PRICES permission to delete a price.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePriceTest() throws ApiException {
        UUID id = null;
        api.deletePrice(id);

        // TODO: test validations
    }
    
    /**
     * Get a price.
     *
     * Needs VIEW_PRICES permission to get pricing detail.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPriceTest() throws ApiException {
        UUID id = null;
        BillingPrice response = api.getPrice(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a page of prices.
     *
     * Needs VIEW_PRICES permission to view the pricing details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPricesPageTest() throws ApiException {
        UUID tenantId = null;
        Integer page = null;
        Integer pageSize = null;
        String type = null;
        String subtype = null;
        BillingPricesPage response = api.getPricesPage(tenantId, page, pageSize, type, subtype);

        // TODO: test validations
    }
    
    /**
     * Update price for an event type and tenant.
     *
     * Needs MANAGE_PRICES permission to update a pricing detail.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePriceTest() throws ApiException {
        UUID id = null;
        BillingPriceUpdate billingPriceUpdate = null;
        BillingPrice response = api.updatePrice(id, billingPriceUpdate);

        // TODO: test validations
    }
    
}
