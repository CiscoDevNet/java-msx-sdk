/*
 * KAKAPO - MSX SDK
 * MSX Platform SDK
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WorkflowMetadataGitInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-26T14:27:03.027365-04:00[America/New_York]")
public class WorkflowMetadataGitInfo {
  public static final String SERIALIZED_NAME_TARGET_ID = "target_id";
  @SerializedName(SERIALIZED_NAME_TARGET_ID)
  private String targetId;

  public static final String SERIALIZED_NAME_COMMIT_HASH = "commit_hash";
  @SerializedName(SERIALIZED_NAME_COMMIT_HASH)
  private String commitHash;

  public static final String SERIALIZED_NAME_COMITTED_BY = "comitted_by";
  @SerializedName(SERIALIZED_NAME_COMITTED_BY)
  private String comittedBy;

  public static final String SERIALIZED_NAME_COMITTED_ON = "comitted_on";
  @SerializedName(SERIALIZED_NAME_COMITTED_ON)
  private String comittedOn;

  public static final String SERIALIZED_NAME_COMMIT_MESSAGE = "commit_message";
  @SerializedName(SERIALIZED_NAME_COMMIT_MESSAGE)
  private String commitMessage;


  public WorkflowMetadataGitInfo targetId(String targetId) {
    
    this.targetId = targetId;
    return this;
  }

   /**
   * Get targetId
   * @return targetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTargetId() {
    return targetId;
  }


  public void setTargetId(String targetId) {
    this.targetId = targetId;
  }


  public WorkflowMetadataGitInfo commitHash(String commitHash) {
    
    this.commitHash = commitHash;
    return this;
  }

   /**
   * Get commitHash
   * @return commitHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCommitHash() {
    return commitHash;
  }


  public void setCommitHash(String commitHash) {
    this.commitHash = commitHash;
  }


  public WorkflowMetadataGitInfo comittedBy(String comittedBy) {
    
    this.comittedBy = comittedBy;
    return this;
  }

   /**
   * Get comittedBy
   * @return comittedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComittedBy() {
    return comittedBy;
  }


  public void setComittedBy(String comittedBy) {
    this.comittedBy = comittedBy;
  }


  public WorkflowMetadataGitInfo comittedOn(String comittedOn) {
    
    this.comittedOn = comittedOn;
    return this;
  }

   /**
   * Get comittedOn
   * @return comittedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComittedOn() {
    return comittedOn;
  }


  public void setComittedOn(String comittedOn) {
    this.comittedOn = comittedOn;
  }


  public WorkflowMetadataGitInfo commitMessage(String commitMessage) {
    
    this.commitMessage = commitMessage;
    return this;
  }

   /**
   * Get commitMessage
   * @return commitMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCommitMessage() {
    return commitMessage;
  }


  public void setCommitMessage(String commitMessage) {
    this.commitMessage = commitMessage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowMetadataGitInfo workflowMetadataGitInfo = (WorkflowMetadataGitInfo) o;
    return Objects.equals(this.targetId, workflowMetadataGitInfo.targetId) &&
        Objects.equals(this.commitHash, workflowMetadataGitInfo.commitHash) &&
        Objects.equals(this.comittedBy, workflowMetadataGitInfo.comittedBy) &&
        Objects.equals(this.comittedOn, workflowMetadataGitInfo.comittedOn) &&
        Objects.equals(this.commitMessage, workflowMetadataGitInfo.commitMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetId, commitHash, comittedBy, comittedOn, commitMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowMetadataGitInfo {\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    commitHash: ").append(toIndentedString(commitHash)).append("\n");
    sb.append("    comittedBy: ").append(toIndentedString(comittedBy)).append("\n");
    sb.append("    comittedOn: ").append(toIndentedString(comittedOn)).append("\n");
    sb.append("    commitMessage: ").append(toIndentedString(commitMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

