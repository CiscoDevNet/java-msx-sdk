/*
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.client;

import com.cisco.msx.platform.ApiException;
import com.cisco.msx.platform.model.CatalogAssignment;
import com.cisco.msx.platform.model.Error;
import com.cisco.msx.platform.model.Product;
import com.cisco.msx.platform.model.ProductCreate;
import com.cisco.msx.platform.model.ProductUpdate;
import com.cisco.msx.platform.model.ProductsPage;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Ignore
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    
    /**
     * Creates a product.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProductTest() throws ApiException {
        ProductCreate productCreate = null;
        Product response = api.createProduct(productCreate);

        // TODO: test validations
    }
    
    /**
     * Deletes a product.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductTest() throws ApiException {
        UUID id = null;
        api.deleteProduct(id);

        // TODO: test validations
    }
    
    /**
     * Returns a product.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductTest() throws ApiException {
        UUID id = null;
        Product response = api.getProduct(id);

        // TODO: test validations
    }
    
    /**
     * Returns a list of tenant assignments for a product .
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductAssignmentsListTest() throws ApiException {
        UUID id = null;
        List<CatalogAssignment> response = api.getProductAssignmentsList(id);

        // TODO: test validations
    }
    
    /**
     * Returns the number of products.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsCountTest() throws ApiException {
        UUID tenantId = null;
        Long response = api.getProductsCount(tenantId);

        // TODO: test validations
    }
    
    /**
     * Returns a page of products.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsPageTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        UUID tenantId = null;
        ProductsPage response = api.getProductsPage(page, pageSize, tenantId);

        // TODO: test validations
    }
    
    /**
     * Updates a product.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProductTest() throws ApiException {
        UUID id = null;
        ProductUpdate productUpdate = null;
        Product response = api.updateProduct(id, productUpdate);

        // TODO: test validations
    }
    
    /**
     * Updates the tenant assignments for a product.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProductAssignmentsTest() throws ApiException {
        UUID id = null;
        List<UUID> UUID = null;
        List<CatalogAssignment> response = api.updateProductAssignments(id, UUID);

        // TODO: test validations
    }
    
}
