/*
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.msx.platform.client;

import com.cisco.msx.platform.ApiException;
import com.cisco.msx.platform.model.Error;
import com.cisco.msx.platform.model.StartWorkflowResponse;
import java.util.UUID;
import com.cisco.msx.platform.model.ValidateWorkflowResponse;
import com.cisco.msx.platform.model.Workflow;
import com.cisco.msx.platform.model.WorkflowMapping;
import com.cisco.msx.platform.model.WorkflowStartConfig;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowsApi
 */
@Ignore
public class WorkflowsApiTest {

    private final WorkflowsApi api = new WorkflowsApi();

    
    /**
     * Delete a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWorkflowTest() throws ApiException {
        String id = null;
        api.deleteWorkflow(id);

        // TODO: test validations
    }
    
    /**
     * Exports a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportWorkflowTest() throws ApiException {
        String id = null;
        Map<String, Object> response = api.exportWorkflow(id);

        // TODO: test validations
    }
    
    /**
     * Returns a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowTest() throws ApiException {
        String id = null;
        Workflow response = api.getWorkflow(id);

        // TODO: test validations
    }
    
    /**
     * Returns a workflow start config.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowStartConfigTest() throws ApiException {
        String id = null;
        WorkflowStartConfig response = api.getWorkflowStartConfig(id);

        // TODO: test validations
    }
    
    /**
     * Returns a list of workflows.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowsListTest() throws ApiException {
        UUID tenantId = null;
        Boolean atomic = null;
        List<Workflow> response = api.getWorkflowsList(tenantId, atomic);

        // TODO: test validations
    }
    
    /**
     * Imports a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importWorkflowTest() throws ApiException {
        Map<String, Object> requestBody = null;
        List<UUID> tenantIds = null;
        Boolean global = null;
        WorkflowMapping response = api.importWorkflow(requestBody, tenantIds, global);

        // TODO: test validations
    }
    
    /**
     * Starts a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startWorkflowTest() throws ApiException {
        String id = null;
        WorkflowStartConfig workflowStartConfig = null;
        Boolean sync = null;
        List<StartWorkflowResponse> response = api.startWorkflow(id, workflowStartConfig, sync);

        // TODO: test validations
    }
    
    /**
     * Updates a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWorkflowTest() throws ApiException {
        String id = null;
        Map<String, Object> requestBody = null;
        List<UUID> tenantIds = null;
        Boolean global = null;
        WorkflowMapping response = api.updateWorkflow(id, requestBody, tenantIds, global);

        // TODO: test validations
    }
    
    /**
     * Validates a workflow.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateWorkflowTest() throws ApiException {
        String id = null;
        ValidateWorkflowResponse response = api.validateWorkflow(id);

        // TODO: test validations
    }
    
}
